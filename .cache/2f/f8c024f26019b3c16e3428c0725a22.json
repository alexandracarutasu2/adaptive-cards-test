{"id":"../../node_modules/adaptivecards/lib/registry.js","dependencies":[{"name":"C:\\Users\\t-acruau\\node_modules\\adaptivecards\\lib\\registry.js.map","includedInParent":true,"mtime":1689085533842},{"name":"C:\\Users\\t-acruau\\node_modules\\adaptivecards\\src\\registry.ts","includedInParent":true,"mtime":1689085534048},{"name":"C:\\Users\\t-acruau\\adaptive-cards\\package.json","includedInParent":true,"mtime":1689259513501},{"name":"C:\\Users\\t-acruau\\node_modules\\adaptivecards\\package.json","includedInParent":true,"mtime":1689085533782},{"name":"./serialization","loc":{"line":4,"column":30,"index":169},"parent":"C:\\Users\\t-acruau\\node_modules\\adaptivecards\\lib\\registry.js","resolved":"C:\\Users\\t-acruau\\node_modules\\adaptivecards\\lib\\serialization.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GlobalRegistry = exports.CardObjectRegistry = void 0;\nvar serialization_1 = require(\"./serialization\");\nvar CardObjectRegistry = /** @class */ (function () {\n    function CardObjectRegistry() {\n        this._items = {};\n    }\n    CardObjectRegistry.prototype.findByName = function (typeName) {\n        return this._items.hasOwnProperty(typeName) ? this._items[typeName] : undefined;\n    };\n    CardObjectRegistry.prototype.clear = function () {\n        this._items = {};\n    };\n    CardObjectRegistry.prototype.copyTo = function (target) {\n        var keys = Object.keys(this._items);\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var key = keys_1[_i];\n            var typeRegistration = this._items[key];\n            target.register(typeRegistration.typeName, typeRegistration.objectType, typeRegistration.schemaVersion);\n        }\n    };\n    CardObjectRegistry.prototype.register = function (typeName, objectType, schemaVersion) {\n        if (schemaVersion === void 0) { schemaVersion = serialization_1.Versions.v1_0; }\n        var registrationInfo = this.findByName(typeName);\n        if (registrationInfo !== undefined) {\n            registrationInfo.objectType = objectType;\n        }\n        else {\n            registrationInfo = {\n                typeName: typeName,\n                objectType: objectType,\n                schemaVersion: schemaVersion\n            };\n        }\n        this._items[typeName] = registrationInfo;\n    };\n    CardObjectRegistry.prototype.unregister = function (typeName) {\n        delete this._items[typeName];\n    };\n    CardObjectRegistry.prototype.createInstance = function (typeName, targetVersion) {\n        var registrationInfo = this.findByName(typeName);\n        return registrationInfo && registrationInfo.schemaVersion.compareTo(targetVersion) <= 0\n            ? new registrationInfo.objectType()\n            : undefined;\n    };\n    CardObjectRegistry.prototype.getItemCount = function () {\n        return Object.keys(this._items).length;\n    };\n    CardObjectRegistry.prototype.getItemAt = function (index) {\n        var _this = this;\n        return Object.keys(this._items).map(function (e) { return _this._items[e]; })[index];\n    };\n    return CardObjectRegistry;\n}());\nexports.CardObjectRegistry = CardObjectRegistry;\n// eslint-disable-next-line @typescript-eslint/no-extraneous-class\nvar GlobalRegistry = /** @class */ (function () {\n    function GlobalRegistry() {\n    }\n    GlobalRegistry.populateWithDefaultElements = function (registry) {\n        registry.clear();\n        GlobalRegistry.defaultElements.copyTo(registry);\n    };\n    GlobalRegistry.populateWithDefaultActions = function (registry) {\n        registry.clear();\n        GlobalRegistry.defaultActions.copyTo(registry);\n    };\n    Object.defineProperty(GlobalRegistry, \"elements\", {\n        get: function () {\n            if (!GlobalRegistry._elements) {\n                GlobalRegistry._elements = new CardObjectRegistry();\n                GlobalRegistry.populateWithDefaultElements(GlobalRegistry._elements);\n            }\n            return GlobalRegistry._elements;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(GlobalRegistry, \"actions\", {\n        get: function () {\n            if (!GlobalRegistry._actions) {\n                GlobalRegistry._actions = new CardObjectRegistry();\n                GlobalRegistry.populateWithDefaultActions(GlobalRegistry._actions);\n            }\n            return GlobalRegistry._actions;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    GlobalRegistry.reset = function () {\n        GlobalRegistry._elements = undefined;\n        GlobalRegistry._actions = undefined;\n    };\n    GlobalRegistry.defaultElements = new CardObjectRegistry();\n    GlobalRegistry.defaultActions = new CardObjectRegistry();\n    return GlobalRegistry;\n}());\nexports.GlobalRegistry = GlobalRegistry;\n"},"sourceMaps":{"js":{"version":3,"file":"registry.js","sourceRoot":"","sources":["../src/registry.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nimport { CardElement, Action } from \"./card-elements\";\nimport { SerializableObject, Version, Versions } from \"./serialization\";\n\nexport interface ITypeRegistration<T extends SerializableObject> {\n    typeName: string;\n    objectType: { new (): T };\n    schemaVersion: Version;\n}\n\nexport class CardObjectRegistry<T extends SerializableObject> {\n    private _items: { [typeName: string]: ITypeRegistration<T> } = {};\n\n    findByName(typeName: string): ITypeRegistration<T> | undefined {\n        return this._items.hasOwnProperty(typeName) ? this._items[typeName] : undefined;\n    }\n\n    clear() {\n        this._items = {};\n    }\n\n    copyTo(target: CardObjectRegistry<T>) {\n        const keys = Object.keys(this._items);\n\n        for (const key of keys) {\n            const typeRegistration = this._items[key];\n\n            target.register(\n                typeRegistration.typeName,\n                typeRegistration.objectType,\n                typeRegistration.schemaVersion\n            );\n        }\n    }\n\n    register(\n        typeName: string,\n        objectType: { new (): T },\n        schemaVersion: Version = Versions.v1_0\n    ) {\n        let registrationInfo = this.findByName(typeName);\n\n        if (registrationInfo !== undefined) {\n            registrationInfo.objectType = objectType;\n        } else {\n            registrationInfo = {\n                typeName: typeName,\n                objectType: objectType,\n                schemaVersion: schemaVersion\n            };\n        }\n\n        this._items[typeName] = registrationInfo;\n    }\n\n    unregister(typeName: string) {\n        delete this._items[typeName];\n    }\n\n    createInstance(typeName: string, targetVersion: Version): T | undefined {\n        const registrationInfo = this.findByName(typeName);\n\n        return registrationInfo && registrationInfo.schemaVersion.compareTo(targetVersion) <= 0\n            ? new registrationInfo.objectType()\n            : undefined;\n    }\n\n    getItemCount(): number {\n        return Object.keys(this._items).length;\n    }\n\n    getItemAt(index: number): ITypeRegistration<T> {\n        return Object.keys(this._items).map((e) => this._items[e])[index];\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-extraneous-class\nexport class GlobalRegistry {\n    private static _elements?: CardObjectRegistry<CardElement>;\n    private static _actions?: CardObjectRegistry<Action>;\n\n    static populateWithDefaultElements(registry: CardObjectRegistry<CardElement>) {\n        registry.clear();\n\n        GlobalRegistry.defaultElements.copyTo(registry);\n    }\n\n    static populateWithDefaultActions(registry: CardObjectRegistry<Action>) {\n        registry.clear();\n\n        GlobalRegistry.defaultActions.copyTo(registry);\n    }\n\n    static readonly defaultElements = new CardObjectRegistry<CardElement>();\n    static readonly defaultActions = new CardObjectRegistry<Action>();\n    static get elements(): CardObjectRegistry<CardElement> {\n        if (!GlobalRegistry._elements) {\n            GlobalRegistry._elements = new CardObjectRegistry<CardElement>();\n            GlobalRegistry.populateWithDefaultElements(GlobalRegistry._elements);\n        }\n\n        return GlobalRegistry._elements;\n    }\n\n    static get actions(): CardObjectRegistry<Action> {\n        if (!GlobalRegistry._actions) {\n            GlobalRegistry._actions = new CardObjectRegistry<Action>();\n            GlobalRegistry.populateWithDefaultActions(GlobalRegistry._actions);\n        }\n\n        return GlobalRegistry._actions;\n    }\n\n    static reset() {\n        GlobalRegistry._elements = undefined;\n        GlobalRegistry._actions = undefined;\n    }\n}\n"]}},"error":null,"hash":"2c4802c576fd8f43ea2e9e6f27d7ab0d","cacheData":{"env":{}}}