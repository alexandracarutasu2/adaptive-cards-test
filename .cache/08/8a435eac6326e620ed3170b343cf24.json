{"id":"../../node_modules/adaptivecards/lib/table.js","dependencies":[{"name":"C:\\Users\\t-acruau\\node_modules\\adaptivecards\\lib\\table.js.map","includedInParent":true,"mtime":1689085533912},{"name":"C:\\Users\\t-acruau\\node_modules\\adaptivecards\\src\\table.ts","includedInParent":true,"mtime":1689085534070},{"name":"C:\\Users\\t-acruau\\adaptive-cards\\package.json","includedInParent":true,"mtime":1689259513501},{"name":"C:\\Users\\t-acruau\\node_modules\\adaptivecards\\package.json","includedInParent":true,"mtime":1689085533782},{"name":"./card-elements","loc":{"line":27,"column":30,"index":1661},"parent":"C:\\Users\\t-acruau\\node_modules\\adaptivecards\\lib\\table.js","resolved":"C:\\Users\\t-acruau\\node_modules\\adaptivecards\\lib\\card-elements.js"},{"name":"./enums","loc":{"line":28,"column":22,"index":1703},"parent":"C:\\Users\\t-acruau\\node_modules\\adaptivecards\\lib\\table.js","resolved":"C:\\Users\\t-acruau\\node_modules\\adaptivecards\\lib\\enums.js"},{"name":"./registry","loc":{"line":29,"column":25,"index":1740},"parent":"C:\\Users\\t-acruau\\node_modules\\adaptivecards\\lib\\table.js","resolved":"C:\\Users\\t-acruau\\node_modules\\adaptivecards\\lib\\registry.js"},{"name":"./serialization","loc":{"line":30,"column":30,"index":1785},"parent":"C:\\Users\\t-acruau\\node_modules\\adaptivecards\\lib\\table.js","resolved":"C:\\Users\\t-acruau\\node_modules\\adaptivecards\\lib\\serialization.js"},{"name":"./shared","loc":{"line":31,"column":23,"index":1828},"parent":"C:\\Users\\t-acruau\\node_modules\\adaptivecards\\lib\\table.js","resolved":"C:\\Users\\t-acruau\\node_modules\\adaptivecards\\lib\\shared.js"},{"name":"./strings","loc":{"line":32,"column":24,"index":1865},"parent":"C:\\Users\\t-acruau\\node_modules\\adaptivecards\\lib\\table.js","resolved":"C:\\Users\\t-acruau\\node_modules\\adaptivecards\\lib\\strings.js"},{"name":"./utils","loc":{"line":33,"column":22,"index":1901},"parent":"C:\\Users\\t-acruau\\node_modules\\adaptivecards\\lib\\table.js","resolved":"C:\\Users\\t-acruau\\node_modules\\adaptivecards\\lib\\utils.js"}],"generated":{"js":"\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Table = exports.TableRow = exports.TableCell = exports.StylableContainer = exports.TableColumnDefinition = void 0;\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nvar card_elements_1 = require(\"./card-elements\");\nvar enums_1 = require(\"./enums\");\nvar registry_1 = require(\"./registry\");\nvar serialization_1 = require(\"./serialization\");\nvar shared_1 = require(\"./shared\");\nvar strings_1 = require(\"./strings\");\nvar utils_1 = require(\"./utils\");\nvar TableColumnDefinition = /** @class */ (function (_super) {\n    __extends(TableColumnDefinition, _super);\n    function TableColumnDefinition() {\n        //#region Schema\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.width = new shared_1.SizeAndUnit(1, enums_1.SizeUnit.Weight);\n        return _this;\n    }\n    TableColumnDefinition.prototype.getSchemaKey = function () {\n        return \"ColumnDefinition\";\n    };\n    TableColumnDefinition.horizontalCellContentAlignmentProperty = new serialization_1.EnumProperty(serialization_1.Versions.v1_5, \"horizontalCellContentAlignment\", enums_1.HorizontalAlignment);\n    TableColumnDefinition.verticalCellContentAlignmentProperty = new serialization_1.EnumProperty(serialization_1.Versions.v1_5, \"verticalCellContentAlignment\", enums_1.VerticalAlignment);\n    TableColumnDefinition.widthProperty = new serialization_1.CustomProperty(serialization_1.Versions.v1_5, \"width\", function (sender, prop, source, context) {\n        var result = prop.defaultValue;\n        var value = source[prop.name];\n        var invalidWidth = false;\n        if (typeof value === \"number\" && !isNaN(value)) {\n            result = new shared_1.SizeAndUnit(value, enums_1.SizeUnit.Weight);\n        }\n        else if (typeof value === \"string\") {\n            try {\n                result = shared_1.SizeAndUnit.parse(value);\n            }\n            catch (e) {\n                invalidWidth = true;\n            }\n        }\n        else {\n            invalidWidth = true;\n        }\n        if (invalidWidth) {\n            context.logParseEvent(sender, enums_1.ValidationEvent.InvalidPropertyValue, strings_1.Strings.errors.invalidColumnWidth(value));\n        }\n        return result;\n    }, function (sender, property, target, value, context) {\n        if (value.unit === enums_1.SizeUnit.Pixel) {\n            context.serializeValue(target, \"width\", value.physicalSize + \"px\");\n        }\n        else {\n            context.serializeNumber(target, \"width\", value.physicalSize);\n        }\n    }, new shared_1.SizeAndUnit(1, enums_1.SizeUnit.Weight));\n    __decorate([\n        (0, serialization_1.property)(TableColumnDefinition.horizontalCellContentAlignmentProperty)\n    ], TableColumnDefinition.prototype, \"horizontalCellContentAlignment\", void 0);\n    __decorate([\n        (0, serialization_1.property)(TableColumnDefinition.verticalCellContentAlignmentProperty)\n    ], TableColumnDefinition.prototype, \"verticalCellContentAlignment\", void 0);\n    __decorate([\n        (0, serialization_1.property)(TableColumnDefinition.widthProperty)\n    ], TableColumnDefinition.prototype, \"width\", void 0);\n    return TableColumnDefinition;\n}(serialization_1.SerializableObject));\nexports.TableColumnDefinition = TableColumnDefinition;\nvar StylableContainer = /** @class */ (function (_super) {\n    __extends(StylableContainer, _super);\n    function StylableContainer() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._items = [];\n        return _this;\n    }\n    StylableContainer.prototype.parseItem = function (source, context) {\n        var _this = this;\n        return context.parseCardObject(this, source, [], // Forbidden types not supported for elements for now\n        !this.isDesignMode(), function (typeName) {\n            return _this.createItemInstance(typeName);\n        }, function (typeName, _errorType) {\n            context.logParseEvent(undefined, enums_1.ValidationEvent.ElementTypeNotAllowed, strings_1.Strings.errors.elementTypeNotAllowed(typeName));\n        });\n    };\n    StylableContainer.prototype.internalAddItem = function (item) {\n        if (!item.parent) {\n            this._items.push(item);\n            item.setParent(this);\n        }\n        else {\n            throw new Error(strings_1.Strings.errors.elementAlreadyParented());\n        }\n    };\n    StylableContainer.prototype.internalRemoveItem = function (item) {\n        var itemIndex = this._items.indexOf(item);\n        if (itemIndex >= 0) {\n            this._items.splice(itemIndex, 1);\n            item.setParent(undefined);\n            this.updateLayout();\n            return true;\n        }\n        return false;\n    };\n    StylableContainer.prototype.internalIndexOf = function (item) {\n        return this._items.indexOf(item);\n    };\n    StylableContainer.prototype.internalParse = function (source, context) {\n        _super.prototype.internalParse.call(this, source, context);\n        this._items = [];\n        var items = source[this.getCollectionPropertyName()];\n        if (Array.isArray(items)) {\n            for (var _i = 0, items_1 = items; _i < items_1.length; _i++) {\n                var item = items_1[_i];\n                var instance = this.parseItem(item, context);\n                if (instance) {\n                    this._items.push(instance);\n                }\n            }\n        }\n    };\n    StylableContainer.prototype.internalToJSON = function (target, context) {\n        _super.prototype.internalToJSON.call(this, target, context);\n        context.serializeArray(target, this.getCollectionPropertyName(), this._items);\n    };\n    StylableContainer.prototype.removeItem = function (item) {\n        return this.internalRemoveItem(item);\n    };\n    StylableContainer.prototype.getItemCount = function () {\n        return this._items.length;\n    };\n    StylableContainer.prototype.getItemAt = function (index) {\n        return this._items[index];\n    };\n    StylableContainer.prototype.getFirstVisibleRenderedItem = function () {\n        return this.getItemCount() > 0 ? this.getItemAt(0) : undefined;\n    };\n    StylableContainer.prototype.getLastVisibleRenderedItem = function () {\n        return this.getItemCount() > 0 ? this.getItemAt(this.getItemCount() - 1) : undefined;\n    };\n    return StylableContainer;\n}(card_elements_1.StylableCardElementContainer));\nexports.StylableContainer = StylableContainer;\nvar TableCell = /** @class */ (function (_super) {\n    __extends(TableCell, _super);\n    function TableCell() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._columnIndex = -1;\n        _this._cellType = \"data\";\n        return _this;\n    }\n    TableCell.prototype.getHasBorder = function () {\n        return this.parentRow.parentTable.showGridLines;\n    };\n    TableCell.prototype.applyBorder = function () {\n        if (this.renderedElement && this.getHasBorder()) {\n            var styleDefinition = this.hostConfig.containerStyles.getStyleByName(this.parentRow.parentTable.gridStyle);\n            if (styleDefinition.borderColor) {\n                var borderColor = (0, utils_1.stringToCssColor)(styleDefinition.borderColor);\n                if (borderColor) {\n                    this.renderedElement.style.borderRight = \"1px solid \" + borderColor;\n                    this.renderedElement.style.borderBottom = \"1px solid \" + borderColor;\n                }\n            }\n        }\n    };\n    TableCell.prototype.getDefaultPadding = function () {\n        return this.getHasBackground() || this.getHasBorder()\n            ? new shared_1.PaddingDefinition(enums_1.Spacing.Small, enums_1.Spacing.Small, enums_1.Spacing.Small, enums_1.Spacing.Small)\n            : _super.prototype.getDefaultPadding.call(this);\n    };\n    TableCell.prototype.internalRender = function () {\n        var cellElement = _super.prototype.internalRender.call(this);\n        if (cellElement) {\n            cellElement.setAttribute(\"role\", this.cellType === \"data\" ? \"cell\" : \"columnheader\");\n            cellElement.style.minWidth = \"0\";\n            if (this.cellType === \"header\") {\n                cellElement.setAttribute(\"scope\", \"col\");\n            }\n        }\n        return cellElement;\n    };\n    TableCell.prototype.shouldSerialize = function (_context) {\n        return true;\n    };\n    TableCell.prototype.getJsonTypeName = function () {\n        return \"TableCell\";\n    };\n    TableCell.prototype.getEffectiveTextStyleDefinition = function () {\n        if (this.cellType === \"header\") {\n            return this.hostConfig.textStyles.columnHeader;\n        }\n        return _super.prototype.getEffectiveTextStyleDefinition.call(this);\n    };\n    TableCell.prototype.getEffectiveHorizontalAlignment = function () {\n        if (this.horizontalAlignment !== undefined) {\n            return this.horizontalAlignment;\n        }\n        if (this.parentRow.horizontalCellContentAlignment !== undefined) {\n            return this.parentRow.horizontalCellContentAlignment;\n        }\n        if (this.columnIndex >= 0) {\n            var horizontalAlignment = this.parentRow.parentTable.getColumnAt(this.columnIndex).horizontalCellContentAlignment;\n            if (horizontalAlignment !== undefined) {\n                return horizontalAlignment;\n            }\n        }\n        if (this.parentRow.parentTable.horizontalCellContentAlignment !== undefined) {\n            return this.parentRow.parentTable.horizontalCellContentAlignment;\n        }\n        return _super.prototype.getEffectiveHorizontalAlignment.call(this);\n    };\n    TableCell.prototype.getEffectiveVerticalContentAlignment = function () {\n        if (this.verticalContentAlignment !== undefined) {\n            return this.verticalContentAlignment;\n        }\n        if (this.parentRow.verticalCellContentAlignment !== undefined) {\n            return this.parentRow.verticalCellContentAlignment;\n        }\n        if (this.columnIndex >= 0) {\n            var verticalAlignment = this.parentRow.parentTable.getColumnAt(this.columnIndex).verticalCellContentAlignment;\n            if (verticalAlignment !== undefined) {\n                return verticalAlignment;\n            }\n        }\n        if (this.parentRow.parentTable.verticalCellContentAlignment !== undefined) {\n            return this.parentRow.parentTable.verticalCellContentAlignment;\n        }\n        return _super.prototype.getEffectiveVerticalContentAlignment.call(this);\n    };\n    Object.defineProperty(TableCell.prototype, \"columnIndex\", {\n        get: function () {\n            return this._columnIndex;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TableCell.prototype, \"cellType\", {\n        get: function () {\n            return this._cellType;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TableCell.prototype, \"parentRow\", {\n        get: function () {\n            return this.parent;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TableCell.prototype, \"isStandalone\", {\n        get: function () {\n            return false;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return TableCell;\n}(card_elements_1.Container));\nexports.TableCell = TableCell;\nvar TableRow = /** @class */ (function (_super) {\n    __extends(TableRow, _super);\n    function TableRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    //#endregion\n    TableRow.prototype.getDefaultPadding = function () {\n        return new shared_1.PaddingDefinition(enums_1.Spacing.None, enums_1.Spacing.None, enums_1.Spacing.None, enums_1.Spacing.None);\n    };\n    TableRow.prototype.applyBackground = function () {\n        if (this.renderedElement) {\n            var styleDefinition = this.hostConfig.containerStyles.getStyleByName(this.style, this.hostConfig.containerStyles.getStyleByName(this.defaultStyle));\n            if (styleDefinition.backgroundColor) {\n                var bgColor = (0, utils_1.stringToCssColor)(styleDefinition.backgroundColor);\n                if (bgColor) {\n                    this.renderedElement.style.backgroundColor = bgColor;\n                }\n            }\n        }\n    };\n    TableRow.prototype.getCollectionPropertyName = function () {\n        return \"cells\";\n    };\n    TableRow.prototype.createItemInstance = function (typeName) {\n        return !typeName || typeName === \"TableCell\" ? new TableCell() : undefined;\n    };\n    TableRow.prototype.internalRender = function () {\n        var isFirstRow = this.getIsFirstRow();\n        var cellSpacing = this.hostConfig.table.cellSpacing;\n        var rowElement = document.createElement(\"div\");\n        rowElement.setAttribute(\"role\", \"row\");\n        rowElement.style.display = \"flex\";\n        rowElement.style.flexDirection = \"row\";\n        for (var i = 0; i < Math.min(this.getItemCount(), this.parentTable.getColumnCount()); i++) {\n            var cell = this.getItemAt(i);\n            // Cheating a bit in order to keep cellType read-only\n            cell[\"_columnIndex\"] = i;\n            cell[\"_cellType\"] =\n                this.parentTable.firstRowAsHeaders && isFirstRow ? \"header\" : \"data\";\n            var renderedCell = cell.render();\n            if (renderedCell) {\n                var column = this.parentTable.getColumnAt(i);\n                if (column.computedWidth.unit === enums_1.SizeUnit.Pixel) {\n                    renderedCell.style.flex = \"0 0 \" + column.computedWidth.physicalSize + \"px\";\n                }\n                else {\n                    renderedCell.style.flex = \"1 1 \" + column.computedWidth.physicalSize + \"%\";\n                }\n                if (i > 0 && !this.parentTable.showGridLines && cellSpacing > 0) {\n                    renderedCell.style.marginLeft = cellSpacing + \"px\";\n                }\n                rowElement.appendChild(renderedCell);\n            }\n        }\n        return rowElement.children.length > 0 ? rowElement : undefined;\n    };\n    TableRow.prototype.shouldSerialize = function (_context) {\n        return true;\n    };\n    TableRow.prototype.addCell = function (cell) {\n        this.internalAddItem(cell);\n    };\n    TableRow.prototype.removeCellAt = function (columnIndex) {\n        if (columnIndex >= 0 && columnIndex < this.getItemCount()) {\n            return this.removeItem(this.getItemAt(columnIndex));\n        }\n        return false;\n    };\n    TableRow.prototype.indexOf = function (cardElement) {\n        return cardElement instanceof TableCell ? this.internalIndexOf(cardElement) : -1;\n    };\n    TableRow.prototype.ensureHasEnoughCells = function (cellCount) {\n        while (this.getItemCount() < cellCount) {\n            this.addCell(new TableCell());\n        }\n    };\n    TableRow.prototype.getJsonTypeName = function () {\n        return \"TableRow\";\n    };\n    TableRow.prototype.getIsFirstRow = function () {\n        return this.parentTable.getItemAt(0) === this;\n    };\n    Object.defineProperty(TableRow.prototype, \"parentTable\", {\n        get: function () {\n            return this.parent;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TableRow.prototype, \"isStandalone\", {\n        get: function () {\n            return false;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    //#region Schema\n    TableRow.styleProperty = new card_elements_1.ContainerStyleProperty(serialization_1.Versions.v1_5, \"style\");\n    TableRow.horizontalCellContentAlignmentProperty = new serialization_1.EnumProperty(serialization_1.Versions.v1_5, \"horizontalCellContentAlignment\", enums_1.HorizontalAlignment);\n    TableRow.verticalCellContentAlignmentProperty = new serialization_1.EnumProperty(serialization_1.Versions.v1_5, \"verticalCellContentAlignment\", enums_1.VerticalAlignment);\n    __decorate([\n        (0, serialization_1.property)(TableRow.horizontalCellContentAlignmentProperty)\n    ], TableRow.prototype, \"horizontalCellContentAlignment\", void 0);\n    __decorate([\n        (0, serialization_1.property)(TableRow.verticalCellContentAlignmentProperty)\n    ], TableRow.prototype, \"verticalCellContentAlignment\", void 0);\n    return TableRow;\n}(StylableContainer));\nexports.TableRow = TableRow;\nvar Table = /** @class */ (function (_super) {\n    __extends(Table, _super);\n    function Table() {\n        //#region Schema\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._columns = [];\n        _this.firstRowAsHeaders = true;\n        _this.showGridLines = true;\n        return _this;\n    }\n    Object.defineProperty(Table.prototype, \"gridStyle\", {\n        get: function () {\n            var style = this.getValue(Table.gridStyleProperty);\n            if (style && this.hostConfig.containerStyles.getStyleByName(style)) {\n                return style;\n            }\n            return undefined;\n        },\n        set: function (value) {\n            this.setValue(Table.gridStyleProperty, value);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    //#endregion\n    Table.prototype.ensureRowsHaveEnoughCells = function () {\n        for (var i = 0; i < this.getItemCount(); i++) {\n            this.getItemAt(i).ensureHasEnoughCells(this.getColumnCount());\n        }\n    };\n    Table.prototype.removeCellsFromColumn = function (columnIndex) {\n        for (var i = 0; i < this.getItemCount(); i++) {\n            this.getItemAt(i).removeCellAt(columnIndex);\n        }\n    };\n    Table.prototype.getCollectionPropertyName = function () {\n        return \"rows\";\n    };\n    Table.prototype.createItemInstance = function (typeName) {\n        return !typeName || typeName === \"TableRow\" ? new TableRow() : undefined;\n    };\n    Table.prototype.internalParse = function (source, context) {\n        _super.prototype.internalParse.call(this, source, context);\n        this.ensureRowsHaveEnoughCells();\n    };\n    Table.prototype.internalRender = function () {\n        if (this.getItemCount() > 0) {\n            var totalWeights = 0;\n            for (var _i = 0, _a = this._columns; _i < _a.length; _i++) {\n                var column = _a[_i];\n                if (column.width.unit === enums_1.SizeUnit.Weight) {\n                    totalWeights += column.width.physicalSize;\n                }\n            }\n            for (var _b = 0, _c = this._columns; _b < _c.length; _b++) {\n                var column = _c[_b];\n                if (column.width.unit === enums_1.SizeUnit.Pixel) {\n                    column.computedWidth = new shared_1.SizeAndUnit(column.width.physicalSize, enums_1.SizeUnit.Pixel);\n                }\n                else {\n                    column.computedWidth = new shared_1.SizeAndUnit((100 / totalWeights) * column.width.physicalSize, enums_1.SizeUnit.Weight);\n                }\n            }\n            var tableElement = document.createElement(\"div\");\n            tableElement.setAttribute(\"role\", \"table\");\n            tableElement.style.display = \"flex\";\n            tableElement.style.flexDirection = \"column\";\n            if (this.showGridLines) {\n                var styleDefinition = this.hostConfig.containerStyles.getStyleByName(this.gridStyle);\n                if (styleDefinition.borderColor) {\n                    var borderColor = (0, utils_1.stringToCssColor)(styleDefinition.borderColor);\n                    if (borderColor) {\n                        tableElement.style.borderTop = \"1px solid \" + borderColor;\n                        tableElement.style.borderLeft = \"1px solid \" + borderColor;\n                    }\n                }\n            }\n            var cellSpacing = this.hostConfig.table.cellSpacing;\n            for (var i = 0; i < this.getItemCount(); i++) {\n                var renderedRow = this.getItemAt(i).render();\n                if (renderedRow) {\n                    if (i > 0 && !this.showGridLines && cellSpacing > 0) {\n                        var separatorRow = document.createElement(\"div\");\n                        separatorRow.setAttribute(\"aria-hidden\", \"true\");\n                        separatorRow.style.height = cellSpacing + \"px\";\n                        tableElement.appendChild(separatorRow);\n                    }\n                    tableElement.appendChild(renderedRow);\n                }\n            }\n            return tableElement;\n        }\n        return undefined;\n    };\n    Table.prototype.addColumn = function (column) {\n        this._columns.push(column);\n        this.ensureRowsHaveEnoughCells();\n    };\n    Table.prototype.removeColumn = function (column) {\n        var index = this._columns.indexOf(column);\n        if (index >= 0) {\n            this.removeCellsFromColumn(index);\n            this._columns.splice(index, 1);\n        }\n    };\n    Table.prototype.getColumnCount = function () {\n        return this._columns.length;\n    };\n    Table.prototype.getColumnAt = function (index) {\n        return this._columns[index];\n    };\n    Table.prototype.addRow = function (row) {\n        this.internalAddItem(row);\n        row.ensureHasEnoughCells(this.getColumnCount());\n    };\n    Table.prototype.indexOf = function (cardElement) {\n        return cardElement instanceof TableRow ? this.internalIndexOf(cardElement) : -1;\n    };\n    Table.prototype.getJsonTypeName = function () {\n        return \"Table\";\n    };\n    Table._columnsProperty = new serialization_1.SerializableObjectCollectionProperty(serialization_1.Versions.v1_5, \"columns\", TableColumnDefinition);\n    Table.firstRowAsHeadersProperty = new serialization_1.BoolProperty(serialization_1.Versions.v1_5, \"firstRowAsHeaders\", true);\n    Table.showGridLinesProperty = new serialization_1.BoolProperty(serialization_1.Versions.v1_5, \"showGridLines\", true);\n    Table.gridStyleProperty = new card_elements_1.ContainerStyleProperty(serialization_1.Versions.v1_5, \"gridStyle\");\n    Table.horizontalCellContentAlignmentProperty = new serialization_1.EnumProperty(serialization_1.Versions.v1_5, \"horizontalCellContentAlignment\", enums_1.HorizontalAlignment);\n    Table.verticalCellContentAlignmentProperty = new serialization_1.EnumProperty(serialization_1.Versions.v1_5, \"verticalCellContentAlignment\", enums_1.VerticalAlignment);\n    __decorate([\n        (0, serialization_1.property)(Table._columnsProperty)\n    ], Table.prototype, \"_columns\", void 0);\n    __decorate([\n        (0, serialization_1.property)(Table.firstRowAsHeadersProperty)\n    ], Table.prototype, \"firstRowAsHeaders\", void 0);\n    __decorate([\n        (0, serialization_1.property)(Table.showGridLinesProperty)\n    ], Table.prototype, \"showGridLines\", void 0);\n    __decorate([\n        (0, serialization_1.property)(Table.gridStyleProperty)\n    ], Table.prototype, \"gridStyle\", null);\n    __decorate([\n        (0, serialization_1.property)(Table.horizontalCellContentAlignmentProperty)\n    ], Table.prototype, \"horizontalCellContentAlignment\", void 0);\n    __decorate([\n        (0, serialization_1.property)(Table.verticalCellContentAlignmentProperty)\n    ], Table.prototype, \"verticalCellContentAlignment\", void 0);\n    return Table;\n}(StylableContainer));\nexports.Table = Table;\nregistry_1.GlobalRegistry.defaultElements.register(\"Table\", Table, serialization_1.Versions.v1_5);\n"},"sourceMaps":{"js":{"version":3,"file":"table.js","sourceRoot":"","sources":["../src/table.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nimport {\n    CardElement,\n    StylableCardElementContainer,\n    SerializationContext,\n    Container,\n    ContainerStyleProperty\n} from \"./card-elements\";\nimport {\n    HorizontalAlignment,\n    VerticalAlignment,\n    SizeUnit,\n    ValidationEvent,\n    TypeErrorType,\n    Spacing\n} from \"./enums\";\nimport { TextStyleDefinition } from \"./host-config\";\nimport { GlobalRegistry } from \"./registry\";\nimport {\n    BaseSerializationContext,\n    BoolProperty,\n    CustomProperty,\n    EnumProperty,\n    property,\n    PropertyBag,\n    PropertyDefinition,\n    SerializableObject,\n    SerializableObjectCollectionProperty,\n    Versions\n} from \"./serialization\";\nimport { SizeAndUnit, PaddingDefinition } from \"./shared\";\nimport { Strings } from \"./strings\";\nimport { stringToCssColor } from \"./utils\";\n\nexport class TableColumnDefinition extends SerializableObject {\n    //#region Schema\n\n    static readonly horizontalCellContentAlignmentProperty = new EnumProperty(\n        Versions.v1_5,\n        \"horizontalCellContentAlignment\",\n        HorizontalAlignment\n    );\n    static readonly verticalCellContentAlignmentProperty = new EnumProperty(\n        Versions.v1_5,\n        \"verticalCellContentAlignment\",\n        VerticalAlignment\n    );\n\n    static readonly widthProperty = new CustomProperty<SizeAndUnit>(\n        Versions.v1_5,\n        \"width\",\n        (\n            sender: SerializableObject,\n            prop: PropertyDefinition,\n            source: PropertyBag,\n            context: BaseSerializationContext\n        ) => {\n            let result: SizeAndUnit = prop.defaultValue;\n            const value = source[prop.name];\n            let invalidWidth = false;\n\n            if (typeof value === \"number\" && !isNaN(value)) {\n                result = new SizeAndUnit(value, SizeUnit.Weight);\n            } else if (typeof value === \"string\") {\n                try {\n                    result = SizeAndUnit.parse(value);\n                } catch (e) {\n                    invalidWidth = true;\n                }\n            } else {\n                invalidWidth = true;\n            }\n\n            if (invalidWidth) {\n                context.logParseEvent(\n                    sender,\n                    ValidationEvent.InvalidPropertyValue,\n                    Strings.errors.invalidColumnWidth(value)\n                );\n            }\n\n            return result;\n        },\n        (\n            sender: SerializableObject,\n            property: PropertyDefinition,\n            target: PropertyBag,\n            value: SizeAndUnit,\n            context: BaseSerializationContext\n        ) => {\n            if (value.unit === SizeUnit.Pixel) {\n                context.serializeValue(target, \"width\", value.physicalSize + \"px\");\n            } else {\n                context.serializeNumber(target, \"width\", value.physicalSize);\n            }\n        },\n        new SizeAndUnit(1, SizeUnit.Weight)\n    );\n\n    @property(TableColumnDefinition.horizontalCellContentAlignmentProperty)\n    horizontalCellContentAlignment?: HorizontalAlignment;\n\n    @property(TableColumnDefinition.verticalCellContentAlignmentProperty)\n    verticalCellContentAlignment?: VerticalAlignment;\n\n    @property(TableColumnDefinition.widthProperty)\n    width: SizeAndUnit = new SizeAndUnit(1, SizeUnit.Weight);\n\n    getSchemaKey(): string {\n        return \"ColumnDefinition\";\n    }\n\n    //#endregion\n\n    computedWidth: SizeAndUnit;\n}\n\nexport abstract class StylableContainer<\n    T extends CardElement\n> extends StylableCardElementContainer {\n    private _items: T[] = [];\n\n    private parseItem(source: any, context: SerializationContext): T | undefined {\n        return context.parseCardObject<T>(\n            this,\n            source,\n            [], // Forbidden types not supported for elements for now\n            !this.isDesignMode(),\n            (typeName: string) => {\n                return this.createItemInstance(typeName);\n            },\n            (typeName: string, _errorType: TypeErrorType) => {\n                context.logParseEvent(\n                    undefined,\n                    ValidationEvent.ElementTypeNotAllowed,\n                    Strings.errors.elementTypeNotAllowed(typeName)\n                );\n            }\n        );\n    }\n\n    protected abstract getCollectionPropertyName(): string;\n    protected abstract createItemInstance(typeName: string): T | undefined;\n\n    protected internalAddItem(item: T) {\n        if (!item.parent) {\n            this._items.push(item);\n\n            item.setParent(this);\n        } else {\n            throw new Error(Strings.errors.elementAlreadyParented());\n        }\n    }\n\n    protected internalRemoveItem(item: T): boolean {\n        const itemIndex = this._items.indexOf(item);\n\n        if (itemIndex >= 0) {\n            this._items.splice(itemIndex, 1);\n\n            item.setParent(undefined);\n\n            this.updateLayout();\n\n            return true;\n        }\n\n        return false;\n    }\n\n    protected internalIndexOf(item: T): number {\n        return this._items.indexOf(item);\n    }\n\n    protected internalParse(source: any, context: SerializationContext) {\n        super.internalParse(source, context);\n\n        this._items = [];\n\n        const items = source[this.getCollectionPropertyName()];\n\n        if (Array.isArray(items)) {\n            for (const item of items) {\n                const instance = this.parseItem(item, context);\n\n                if (instance) {\n                    this._items.push(instance);\n                }\n            }\n        }\n    }\n\n    protected internalToJSON(target: PropertyBag, context: SerializationContext) {\n        super.internalToJSON(target, context);\n\n        context.serializeArray(target, this.getCollectionPropertyName(), this._items);\n    }\n\n    removeItem(item: T): boolean {\n        return this.internalRemoveItem(item);\n    }\n\n    getItemCount(): number {\n        return this._items.length;\n    }\n\n    getItemAt(index: number): T {\n        return this._items[index];\n    }\n\n    getFirstVisibleRenderedItem(): T | undefined {\n        return this.getItemCount() > 0 ? this.getItemAt(0) : undefined;\n    }\n\n    getLastVisibleRenderedItem(): T | undefined {\n        return this.getItemCount() > 0 ? this.getItemAt(this.getItemCount() - 1) : undefined;\n    }\n}\n\nexport type CellType = \"data\" | \"header\";\n\nexport class TableCell extends Container {\n    private _columnIndex: number = -1;\n    private _cellType: CellType = \"data\";\n\n    protected getHasBorder(): boolean {\n        return this.parentRow.parentTable.showGridLines;\n    }\n\n    protected applyBorder() {\n        if (this.renderedElement && this.getHasBorder()) {\n            const styleDefinition = this.hostConfig.containerStyles.getStyleByName(\n                this.parentRow.parentTable.gridStyle\n            );\n\n            if (styleDefinition.borderColor) {\n                const borderColor = stringToCssColor(styleDefinition.borderColor);\n\n                if (borderColor) {\n                    this.renderedElement.style.borderRight = \"1px solid \" + borderColor;\n                    this.renderedElement.style.borderBottom = \"1px solid \" + borderColor;\n                }\n            }\n        }\n    }\n\n    protected getDefaultPadding(): PaddingDefinition {\n        return this.getHasBackground() || this.getHasBorder()\n            ? new PaddingDefinition(Spacing.Small, Spacing.Small, Spacing.Small, Spacing.Small)\n            : super.getDefaultPadding();\n    }\n\n    protected internalRender(): HTMLElement | undefined {\n        const cellElement = super.internalRender();\n\n        if (cellElement) {\n            cellElement.setAttribute(\"role\", this.cellType === \"data\" ? \"cell\" : \"columnheader\");\n            cellElement.style.minWidth = \"0\";\n\n            if (this.cellType === \"header\") {\n                cellElement.setAttribute(\"scope\", \"col\");\n            }\n        }\n\n        return cellElement;\n    }\n\n    protected shouldSerialize(_context: SerializationContext): boolean {\n        return true;\n    }\n\n    getJsonTypeName(): string {\n        return \"TableCell\";\n    }\n\n    getEffectiveTextStyleDefinition(): TextStyleDefinition {\n        if (this.cellType === \"header\") {\n            return this.hostConfig.textStyles.columnHeader;\n        }\n\n        return super.getEffectiveTextStyleDefinition();\n    }\n\n    getEffectiveHorizontalAlignment(): HorizontalAlignment {\n        if (this.horizontalAlignment !== undefined) {\n            return this.horizontalAlignment;\n        }\n\n        if (this.parentRow.horizontalCellContentAlignment !== undefined) {\n            return this.parentRow.horizontalCellContentAlignment;\n        }\n\n        if (this.columnIndex >= 0) {\n            const horizontalAlignment = this.parentRow.parentTable.getColumnAt(\n                this.columnIndex\n            ).horizontalCellContentAlignment;\n\n            if (horizontalAlignment !== undefined) {\n                return horizontalAlignment;\n            }\n        }\n\n        if (this.parentRow.parentTable.horizontalCellContentAlignment !== undefined) {\n            return this.parentRow.parentTable.horizontalCellContentAlignment;\n        }\n\n        return super.getEffectiveHorizontalAlignment();\n    }\n\n    getEffectiveVerticalContentAlignment(): VerticalAlignment {\n        if (this.verticalContentAlignment !== undefined) {\n            return this.verticalContentAlignment;\n        }\n\n        if (this.parentRow.verticalCellContentAlignment !== undefined) {\n            return this.parentRow.verticalCellContentAlignment;\n        }\n\n        if (this.columnIndex >= 0) {\n            const verticalAlignment = this.parentRow.parentTable.getColumnAt(\n                this.columnIndex\n            ).verticalCellContentAlignment;\n\n            if (verticalAlignment !== undefined) {\n                return verticalAlignment;\n            }\n        }\n\n        if (this.parentRow.parentTable.verticalCellContentAlignment !== undefined) {\n            return this.parentRow.parentTable.verticalCellContentAlignment;\n        }\n\n        return super.getEffectiveVerticalContentAlignment();\n    }\n\n    get columnIndex(): number {\n        return this._columnIndex;\n    }\n\n    get cellType(): CellType {\n        return this._cellType;\n    }\n\n    get parentRow(): TableRow {\n        return this.parent as TableRow;\n    }\n\n    get isStandalone(): boolean {\n        return false;\n    }\n}\n\nexport class TableRow extends StylableContainer<TableCell> {\n    //#region Schema\n\n    static readonly styleProperty = new ContainerStyleProperty(Versions.v1_5, \"style\");\n    static readonly horizontalCellContentAlignmentProperty = new EnumProperty(\n        Versions.v1_5,\n        \"horizontalCellContentAlignment\",\n        HorizontalAlignment\n    );\n    static readonly verticalCellContentAlignmentProperty = new EnumProperty(\n        Versions.v1_5,\n        \"verticalCellContentAlignment\",\n        VerticalAlignment\n    );\n\n    @property(TableRow.horizontalCellContentAlignmentProperty)\n    horizontalCellContentAlignment?: HorizontalAlignment;\n\n    @property(TableRow.verticalCellContentAlignmentProperty)\n    verticalCellContentAlignment?: VerticalAlignment;\n\n    //#endregion\n\n    protected getDefaultPadding(): PaddingDefinition {\n        return new PaddingDefinition(Spacing.None, Spacing.None, Spacing.None, Spacing.None);\n    }\n\n    protected applyBackground() {\n        if (this.renderedElement) {\n            const styleDefinition = this.hostConfig.containerStyles.getStyleByName(\n                this.style,\n                this.hostConfig.containerStyles.getStyleByName(this.defaultStyle)\n            );\n\n            if (styleDefinition.backgroundColor) {\n                const bgColor = stringToCssColor(styleDefinition.backgroundColor);\n\n                if (bgColor) {\n                    this.renderedElement.style.backgroundColor = bgColor;\n                }\n            }\n        }\n    }\n\n    protected getCollectionPropertyName(): string {\n        return \"cells\";\n    }\n\n    protected createItemInstance(typeName: string): TableCell | undefined {\n        return !typeName || typeName === \"TableCell\" ? new TableCell() : undefined;\n    }\n\n    protected internalRender(): HTMLElement | undefined {\n        const isFirstRow = this.getIsFirstRow();\n        const cellSpacing = this.hostConfig.table.cellSpacing;\n\n        const rowElement = document.createElement(\"div\");\n        rowElement.setAttribute(\"role\", \"row\");\n        rowElement.style.display = \"flex\";\n        rowElement.style.flexDirection = \"row\";\n\n        for (let i = 0; i < Math.min(this.getItemCount(), this.parentTable.getColumnCount()); i++) {\n            const cell = this.getItemAt(i);\n\n            // Cheating a bit in order to keep cellType read-only\n            cell[\"_columnIndex\"] = i;\n            cell[\"_cellType\"] =\n                this.parentTable.firstRowAsHeaders && isFirstRow ? \"header\" : \"data\";\n\n            const renderedCell = cell.render();\n\n            if (renderedCell) {\n                const column = this.parentTable.getColumnAt(i);\n\n                if (column.computedWidth.unit === SizeUnit.Pixel) {\n                    renderedCell.style.flex = \"0 0 \" + column.computedWidth.physicalSize + \"px\";\n                } else {\n                    renderedCell.style.flex = \"1 1 \" + column.computedWidth.physicalSize + \"%\";\n                }\n\n                if (i > 0 && !this.parentTable.showGridLines && cellSpacing > 0) {\n                    renderedCell.style.marginLeft = cellSpacing + \"px\";\n                }\n\n                rowElement.appendChild(renderedCell);\n            }\n        }\n\n        return rowElement.children.length > 0 ? rowElement : undefined;\n    }\n\n    protected shouldSerialize(_context: SerializationContext): boolean {\n        return true;\n    }\n\n    addCell(cell: TableCell) {\n        this.internalAddItem(cell);\n    }\n\n    removeCellAt(columnIndex: number): boolean {\n        if (columnIndex >= 0 && columnIndex < this.getItemCount()) {\n            return this.removeItem(this.getItemAt(columnIndex));\n        }\n\n        return false;\n    }\n\n    indexOf(cardElement: CardElement): number {\n        return cardElement instanceof TableCell ? this.internalIndexOf(cardElement) : -1;\n    }\n\n    ensureHasEnoughCells(cellCount: number) {\n        while (this.getItemCount() < cellCount) {\n            this.addCell(new TableCell());\n        }\n    }\n\n    getJsonTypeName(): string {\n        return \"TableRow\";\n    }\n\n    getIsFirstRow(): boolean {\n        return this.parentTable.getItemAt(0) === this;\n    }\n\n    get parentTable(): Table {\n        return this.parent as Table;\n    }\n\n    get isStandalone(): boolean {\n        return false;\n    }\n}\n\nexport class Table extends StylableContainer<TableRow> {\n    //#region Schema\n\n    private static readonly _columnsProperty = new SerializableObjectCollectionProperty(\n        Versions.v1_5,\n        \"columns\",\n        TableColumnDefinition\n    );\n\n    static readonly firstRowAsHeadersProperty = new BoolProperty(\n        Versions.v1_5,\n        \"firstRowAsHeaders\",\n        true\n    );\n    static readonly showGridLinesProperty = new BoolProperty(Versions.v1_5, \"showGridLines\", true);\n    static readonly gridStyleProperty = new ContainerStyleProperty(Versions.v1_5, \"gridStyle\");\n    static readonly horizontalCellContentAlignmentProperty = new EnumProperty(\n        Versions.v1_5,\n        \"horizontalCellContentAlignment\",\n        HorizontalAlignment\n    );\n    static readonly verticalCellContentAlignmentProperty = new EnumProperty(\n        Versions.v1_5,\n        \"verticalCellContentAlignment\",\n        VerticalAlignment\n    );\n\n    @property(Table._columnsProperty)\n    private _columns: TableColumnDefinition[] = [];\n\n    @property(Table.firstRowAsHeadersProperty)\n    firstRowAsHeaders: boolean = true;\n\n    @property(Table.showGridLinesProperty)\n    showGridLines: boolean = true;\n\n    @property(Table.gridStyleProperty)\n    get gridStyle(): string | undefined {\n        const style = this.getValue(Table.gridStyleProperty);\n\n        if (style && this.hostConfig.containerStyles.getStyleByName(style)) {\n            return style;\n        }\n\n        return undefined;\n    }\n\n    set gridStyle(value: string | undefined) {\n        this.setValue(Table.gridStyleProperty, value);\n    }\n\n    @property(Table.horizontalCellContentAlignmentProperty)\n    horizontalCellContentAlignment?: HorizontalAlignment;\n\n    @property(Table.verticalCellContentAlignmentProperty)\n    verticalCellContentAlignment?: VerticalAlignment;\n\n    //#endregion\n\n    private ensureRowsHaveEnoughCells() {\n        for (let i = 0; i < this.getItemCount(); i++) {\n            this.getItemAt(i).ensureHasEnoughCells(this.getColumnCount());\n        }\n    }\n\n    private removeCellsFromColumn(columnIndex: number) {\n        for (let i = 0; i < this.getItemCount(); i++) {\n            this.getItemAt(i).removeCellAt(columnIndex);\n        }\n    }\n\n    protected getCollectionPropertyName(): string {\n        return \"rows\";\n    }\n\n    protected createItemInstance(typeName: string): TableRow | undefined {\n        return !typeName || typeName === \"TableRow\" ? new TableRow() : undefined;\n    }\n\n    protected internalParse(source: PropertyBag, context: SerializationContext) {\n        super.internalParse(source, context);\n\n        this.ensureRowsHaveEnoughCells();\n    }\n\n    protected internalRender(): HTMLElement | undefined {\n        if (this.getItemCount() > 0) {\n            let totalWeights: number = 0;\n\n            for (const column of this._columns) {\n                if (column.width.unit === SizeUnit.Weight) {\n                    totalWeights += column.width.physicalSize;\n                }\n            }\n\n            for (const column of this._columns) {\n                if (column.width.unit === SizeUnit.Pixel) {\n                    column.computedWidth = new SizeAndUnit(\n                        column.width.physicalSize,\n                        SizeUnit.Pixel\n                    );\n                } else {\n                    column.computedWidth = new SizeAndUnit(\n                        (100 / totalWeights) * column.width.physicalSize,\n                        SizeUnit.Weight\n                    );\n                }\n            }\n\n            const tableElement = document.createElement(\"div\");\n            tableElement.setAttribute(\"role\", \"table\");\n            tableElement.style.display = \"flex\";\n            tableElement.style.flexDirection = \"column\";\n\n            if (this.showGridLines) {\n                const styleDefinition = this.hostConfig.containerStyles.getStyleByName(\n                    this.gridStyle\n                );\n\n                if (styleDefinition.borderColor) {\n                    const borderColor = stringToCssColor(styleDefinition.borderColor);\n\n                    if (borderColor) {\n                        tableElement.style.borderTop = \"1px solid \" + borderColor;\n                        tableElement.style.borderLeft = \"1px solid \" + borderColor;\n                    }\n                }\n            }\n\n            const cellSpacing = this.hostConfig.table.cellSpacing;\n\n            for (let i = 0; i < this.getItemCount(); i++) {\n                const renderedRow = this.getItemAt(i).render();\n\n                if (renderedRow) {\n                    if (i > 0 && !this.showGridLines && cellSpacing > 0) {\n                        const separatorRow = document.createElement(\"div\");\n                        separatorRow.setAttribute(\"aria-hidden\", \"true\");\n                        separatorRow.style.height = cellSpacing + \"px\";\n\n                        tableElement.appendChild(separatorRow);\n                    }\n\n                    tableElement.appendChild(renderedRow);\n                }\n            }\n\n            return tableElement;\n        }\n\n        return undefined;\n    }\n\n    addColumn(column: TableColumnDefinition) {\n        this._columns.push(column);\n\n        this.ensureRowsHaveEnoughCells();\n    }\n\n    removeColumn(column: TableColumnDefinition) {\n        const index = this._columns.indexOf(column);\n\n        if (index >= 0) {\n            this.removeCellsFromColumn(index);\n\n            this._columns.splice(index, 1);\n        }\n    }\n\n    getColumnCount(): number {\n        return this._columns.length;\n    }\n\n    getColumnAt(index: number): TableColumnDefinition {\n        return this._columns[index];\n    }\n\n    addRow(row: TableRow) {\n        this.internalAddItem(row);\n\n        row.ensureHasEnoughCells(this.getColumnCount());\n    }\n\n    indexOf(cardElement: CardElement): number {\n        return cardElement instanceof TableRow ? this.internalIndexOf(cardElement) : -1;\n    }\n\n    getJsonTypeName(): string {\n        return \"Table\";\n    }\n}\n\nGlobalRegistry.defaultElements.register(\"Table\", Table, Versions.v1_5);\n"]}},"error":null,"hash":"55a6810303e62ceb423060aa5269b4f9","cacheData":{"env":{}}}