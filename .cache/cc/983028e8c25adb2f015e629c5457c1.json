{"id":"../../node_modules/adaptivecards/lib/card-elements.js","dependencies":[{"name":"C:\\Users\\t-acruau\\node_modules\\adaptivecards\\lib\\card-elements.js.map","includedInParent":true,"mtime":1689085533828},{"name":"C:\\Users\\t-acruau\\node_modules\\adaptivecards\\src\\card-elements.ts","includedInParent":true,"mtime":1689085533983},{"name":"C:\\Users\\t-acruau\\adaptive-cards\\package.json","includedInParent":true,"mtime":1689259513501},{"name":"C:\\Users\\t-acruau\\node_modules\\adaptivecards\\package.json","includedInParent":true,"mtime":1689085533782},{"name":"./enums","loc":{"line":73,"column":20,"index":5860},"parent":"C:\\Users\\t-acruau\\node_modules\\adaptivecards\\lib\\card-elements.js","resolved":"C:\\Users\\t-acruau\\node_modules\\adaptivecards\\lib\\enums.js"},{"name":"./shared","loc":{"line":74,"column":23,"index":5895},"parent":"C:\\Users\\t-acruau\\node_modules\\adaptivecards\\lib\\card-elements.js","resolved":"C:\\Users\\t-acruau\\node_modules\\adaptivecards\\lib\\shared.js"},{"name":"./utils","loc":{"line":75,"column":20,"index":5928},"parent":"C:\\Users\\t-acruau\\node_modules\\adaptivecards\\lib\\card-elements.js","resolved":"C:\\Users\\t-acruau\\node_modules\\adaptivecards\\lib\\utils.js"},{"name":"./host-config","loc":{"line":76,"column":28,"index":5968},"parent":"C:\\Users\\t-acruau\\node_modules\\adaptivecards\\lib\\card-elements.js","resolved":"C:\\Users\\t-acruau\\node_modules\\adaptivecards\\lib\\host-config.js"},{"name":"./text-formatters","loc":{"line":77,"column":29,"index":6015},"parent":"C:\\Users\\t-acruau\\node_modules\\adaptivecards\\lib\\card-elements.js","resolved":"C:\\Users\\t-acruau\\node_modules\\adaptivecards\\lib\\text-formatters.js"},{"name":"./card-object","loc":{"line":78,"column":28,"index":6065},"parent":"C:\\Users\\t-acruau\\node_modules\\adaptivecards\\lib\\card-elements.js","resolved":"C:\\Users\\t-acruau\\node_modules\\adaptivecards\\lib\\card-object.js"},{"name":"./serialization","loc":{"line":79,"column":30,"index":6113},"parent":"C:\\Users\\t-acruau\\node_modules\\adaptivecards\\lib\\card-elements.js","resolved":"C:\\Users\\t-acruau\\node_modules\\adaptivecards\\lib\\serialization.js"},{"name":"./registry","loc":{"line":80,"column":25,"index":6158},"parent":"C:\\Users\\t-acruau\\node_modules\\adaptivecards\\lib\\card-elements.js","resolved":"C:\\Users\\t-acruau\\node_modules\\adaptivecards\\lib\\registry.js"},{"name":"./strings","loc":{"line":81,"column":24,"index":6197},"parent":"C:\\Users\\t-acruau\\node_modules\\adaptivecards\\lib\\card-elements.js","resolved":"C:\\Users\\t-acruau\\node_modules\\adaptivecards\\lib\\strings.js"},{"name":"./controls","loc":{"line":82,"column":25,"index":6236},"parent":"C:\\Users\\t-acruau\\node_modules\\adaptivecards\\lib\\card-elements.js","resolved":"C:\\Users\\t-acruau\\node_modules\\adaptivecards\\lib\\controls\\index.js"}],"generated":{"js":"\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BackgroundImage = exports.ContainerBase = exports.StylableCardElementContainer = exports.ContainerStyleProperty = exports.ActionSet = exports.ShowCardAction = exports.HttpAction = exports.HttpHeader = exports.ToggleVisibilityAction = exports.OpenUrlAction = exports.DataQuery = exports.ExecuteAction = exports.UniversalAction = exports.SubmitAction = exports.SubmitActionBase = exports.Action = exports.TimeInput = exports.TimeProperty = exports.DateInput = exports.NumberInput = exports.FilteredChoiceSet = exports.ChoiceSetInput = exports.ChoiceSetInputDataQuery = exports.Choice = exports.ToggleInput = exports.TextInput = exports.Input = exports.Media = exports.YouTubePlayer = exports.DailymotionPlayer = exports.VimeoPlayer = exports.IFrameMediaMediaPlayer = exports.CustomMediaPlayer = exports.HTML5MediaPlayer = exports.MediaPlayer = exports.MediaSource = exports.CaptionSource = exports.ContentSource = exports.ImageSet = exports.CardElementContainer = exports.Image = exports.FactSet = exports.Fact = exports.RichTextBlock = exports.TextRun = exports.TextBlock = exports.BaseTextBlock = exports.ActionProperty = exports.CardElement = exports.renderSeparation = void 0;\nexports.SerializationContext = exports.AdaptiveCard = exports.Authentication = exports.TokenExchangeResource = exports.AuthCardButton = exports.RefreshDefinition = exports.RefreshActionProperty = exports.ContainerWithActions = exports.ColumnSet = exports.Column = exports.Container = void 0;\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nvar Enums = require(\"./enums\");\nvar shared_1 = require(\"./shared\");\nvar Utils = require(\"./utils\");\nvar host_config_1 = require(\"./host-config\");\nvar TextFormatters = require(\"./text-formatters\");\nvar card_object_1 = require(\"./card-object\");\nvar serialization_1 = require(\"./serialization\");\nvar registry_1 = require(\"./registry\");\nvar strings_1 = require(\"./strings\");\nvar controls_1 = require(\"./controls\");\nfunction clearElement(element) {\n    var _a, _b;\n    var trustedHtml = (typeof window === 'undefined') ? \"\" : ((_b = (_a = window.trustedTypes) === null || _a === void 0 ? void 0 : _a.emptyHTML) !== null && _b !== void 0 ? _b : \"\");\n    element.innerHTML = trustedHtml;\n}\nfunction renderSeparation(hostConfig, separationDefinition, orientation) {\n    if (separationDefinition.spacing > 0 ||\n        (separationDefinition.lineThickness && separationDefinition.lineThickness > 0)) {\n        var separator = document.createElement(\"div\");\n        separator.className = hostConfig.makeCssClassName(\"ac-\" +\n            (orientation === Enums.Orientation.Horizontal ? \"horizontal\" : \"vertical\") +\n            \"-separator\");\n        separator.setAttribute(\"aria-hidden\", \"true\");\n        var color = separationDefinition.lineColor\n            ? Utils.stringToCssColor(separationDefinition.lineColor)\n            : \"\";\n        if (orientation === Enums.Orientation.Horizontal) {\n            if (separationDefinition.lineThickness) {\n                separator.style.paddingTop = separationDefinition.spacing / 2 + \"px\";\n                separator.style.marginBottom = separationDefinition.spacing / 2 + \"px\";\n                separator.style.borderBottom =\n                    separationDefinition.lineThickness + \"px solid \" + color;\n            }\n            else {\n                separator.style.height = separationDefinition.spacing + \"px\";\n            }\n        }\n        else {\n            if (separationDefinition.lineThickness) {\n                separator.style.paddingLeft = separationDefinition.spacing / 2 + \"px\";\n                separator.style.marginRight = separationDefinition.spacing / 2 + \"px\";\n                separator.style.borderRight =\n                    separationDefinition.lineThickness + \"px solid \" + color;\n            }\n            else {\n                separator.style.width = separationDefinition.spacing + \"px\";\n            }\n        }\n        separator.style.overflow = \"hidden\";\n        separator.style.flex = \"0 0 auto\";\n        return separator;\n    }\n    else {\n        return undefined;\n    }\n}\nexports.renderSeparation = renderSeparation;\nvar CardElement = /** @class */ (function (_super) {\n    __extends(CardElement, _super);\n    function CardElement() {\n        //#region Schema\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._truncatedDueToOverflow = false;\n        return _this;\n    }\n    Object.defineProperty(CardElement.prototype, \"lang\", {\n        get: function () {\n            var lang = this.getValue(CardElement.langProperty);\n            if (lang) {\n                return lang;\n            }\n            else {\n                if (this.parent) {\n                    return this.parent.lang;\n                }\n                else {\n                    return undefined;\n                }\n            }\n        },\n        set: function (value) {\n            this.setValue(CardElement.langProperty, value);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(CardElement.prototype, \"isVisible\", {\n        get: function () {\n            return this.getValue(CardElement.isVisibleProperty);\n        },\n        set: function (value) {\n            // If the element is going to be hidden, reset any changes that were due\n            // to overflow truncation (this ensures that if the element is later\n            // un-hidden it has the right content)\n            if (shared_1.GlobalSettings.useAdvancedCardBottomTruncation && !value) {\n                this.undoOverflowTruncation();\n            }\n            if (this.isVisible !== value) {\n                this.setValue(CardElement.isVisibleProperty, value);\n                this.updateRenderedElementVisibility();\n                if (this._renderedElement) {\n                    raiseElementVisibilityChangedEvent(this);\n                }\n            }\n            if (this._renderedElement) {\n                this._renderedElement.setAttribute(\"aria-expanded\", value.toString());\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    CardElement.prototype.internalRenderSeparator = function () {\n        var renderedSeparator = renderSeparation(this.hostConfig, {\n            spacing: this.hostConfig.getEffectiveSpacing(this.spacing),\n            lineThickness: this.separator ? this.hostConfig.separator.lineThickness : undefined,\n            lineColor: this.separator ? this.hostConfig.separator.lineColor : undefined\n        }, this.separatorOrientation);\n        if (shared_1.GlobalSettings.alwaysBleedSeparators &&\n            renderedSeparator &&\n            this.separatorOrientation === Enums.Orientation.Horizontal) {\n            // Adjust separator's margins if the option to always bleed separators is turned on\n            var parentContainer = this.getParentContainer();\n            if (parentContainer && parentContainer.getEffectivePadding()) {\n                var parentPhysicalPadding = this.hostConfig.paddingDefinitionToSpacingDefinition(parentContainer.getEffectivePadding());\n                renderedSeparator.style.marginLeft = \"-\" + parentPhysicalPadding.left + \"px\";\n                renderedSeparator.style.marginRight = \"-\" + parentPhysicalPadding.right + \"px\";\n            }\n        }\n        return renderedSeparator;\n    };\n    CardElement.prototype.updateRenderedElementVisibility = function () {\n        var displayMode = this.isDesignMode() || this.isVisible\n            ? this._defaultRenderedElementDisplayMode\n            : \"none\";\n        if (this._renderedElement) {\n            if (displayMode) {\n                this._renderedElement.style.display = displayMode;\n            }\n            else {\n                this._renderedElement.style.removeProperty(\"display\");\n            }\n        }\n        if (this._separatorElement) {\n            if (this.parent && this.parent.isFirstElement(this)) {\n                this._separatorElement.style.display = \"none\";\n            }\n            else {\n                if (displayMode) {\n                    this._separatorElement.style.display = displayMode;\n                }\n                else {\n                    this._separatorElement.style.removeProperty(\"display\");\n                }\n            }\n        }\n    };\n    CardElement.prototype.hideElementDueToOverflow = function () {\n        if (this._renderedElement && this.isVisible) {\n            this._renderedElement.style.visibility = \"hidden\";\n            this.isVisible = false;\n            raiseElementVisibilityChangedEvent(this, false);\n        }\n    };\n    CardElement.prototype.showElementHiddenDueToOverflow = function () {\n        if (this._renderedElement && !this.isVisible) {\n            this._renderedElement.style.removeProperty(\"visibility\");\n            this.isVisible = true;\n            raiseElementVisibilityChangedEvent(this, false);\n        }\n    };\n    // Marked private to emulate internal access\n    CardElement.prototype.handleOverflow = function (maxHeight) {\n        if (this.isVisible || this.isHiddenDueToOverflow()) {\n            var handled = this.truncateOverflow(maxHeight);\n            // Even if we were unable to truncate the element to fit this time,\n            // it still could have been previously truncated\n            this._truncatedDueToOverflow = handled || this._truncatedDueToOverflow;\n            if (!handled) {\n                this.hideElementDueToOverflow();\n            }\n            else if (handled && !this.isVisible) {\n                this.showElementHiddenDueToOverflow();\n            }\n        }\n    };\n    // Marked private to emulate internal access\n    CardElement.prototype.resetOverflow = function () {\n        var sizeChanged = false;\n        if (this._truncatedDueToOverflow) {\n            this.undoOverflowTruncation();\n            this._truncatedDueToOverflow = false;\n            sizeChanged = true;\n        }\n        if (this.isHiddenDueToOverflow()) {\n            this.showElementHiddenDueToOverflow();\n        }\n        return sizeChanged;\n    };\n    CardElement.prototype.getDefaultSerializationContext = function () {\n        return new SerializationContext();\n    };\n    CardElement.prototype.createPlaceholderElement = function () {\n        var styleDefinition = this.getEffectiveStyleDefinition();\n        var foregroundCssColor = Utils.stringToCssColor(styleDefinition.foregroundColors.default.subtle);\n        var element = document.createElement(\"div\");\n        element.style.border = \"1px dashed \" + foregroundCssColor;\n        element.style.padding = \"4px\";\n        element.style.minHeight = \"32px\";\n        element.style.fontSize = \"10px\";\n        if (foregroundCssColor) {\n            element.style.color = foregroundCssColor;\n        }\n        element.innerText = strings_1.Strings.defaults.emptyElementText(this.getJsonTypeName());\n        return element;\n    };\n    CardElement.prototype.adjustRenderedElementSize = function (renderedElement) {\n        if (this.height === \"auto\") {\n            renderedElement.style.flex = \"0 0 auto\";\n        }\n        else {\n            renderedElement.style.flex = \"1 1 auto\";\n        }\n    };\n    /*\n     * Called when mouse enters or leaves the card.\n     * Inputs elements need to update their visual state in such events like showing or hiding borders etc.\n     * It calls Input.updateVisualState(eventType) for all inputs.\n     * This method on input (updateVisualState) is supposed to be called from card level on mouse events.\n     */\n    CardElement.prototype.updateInputsVisualState = function (hover) {\n        var allInputs = this.getAllInputs();\n        var inputEventType = !!hover ? InputEventType.MouseEnterOnCard : InputEventType.MouseLeaveOnCard;\n        allInputs.forEach(function (input) { return input.updateVisualState(inputEventType); });\n    };\n    CardElement.prototype.isDisplayed = function () {\n        return (this._renderedElement !== undefined &&\n            this.isVisible &&\n            this._renderedElement.offsetHeight > 0);\n    };\n    CardElement.prototype.overrideInternalRender = function () {\n        return this.internalRender();\n    };\n    CardElement.prototype.applyPadding = function () {\n        if (this.separatorElement && this.separatorOrientation === Enums.Orientation.Horizontal) {\n            if (shared_1.GlobalSettings.alwaysBleedSeparators && !this.isBleeding()) {\n                var padding = new shared_1.PaddingDefinition();\n                this.getImmediateSurroundingPadding(padding);\n                var physicalPadding = this.hostConfig.paddingDefinitionToSpacingDefinition(padding);\n                this.separatorElement.style.marginLeft = \"-\" + physicalPadding.left + \"px\";\n                this.separatorElement.style.marginRight = \"-\" + physicalPadding.right + \"px\";\n            }\n            else {\n                this.separatorElement.style.marginRight = \"0\";\n                this.separatorElement.style.marginLeft = \"0\";\n            }\n        }\n    };\n    /*\n     * Called when this element overflows the bottom of the card.\n     * maxHeight will be the amount of space still available on the card (0 if\n     * the element is fully off the card).\n     */\n    CardElement.prototype.truncateOverflow = function (_maxHeight) {\n        // Child implementations should return true if the element handled\n        // the truncation request such that its content fits within maxHeight,\n        // false if the element should fall back to being hidden\n        return false;\n    };\n    /*\n     * This should reverse any changes performed in truncateOverflow().\n     */\n    CardElement.prototype.undoOverflowTruncation = function () {\n        return;\n    };\n    CardElement.prototype.getDefaultPadding = function () {\n        return new shared_1.PaddingDefinition();\n    };\n    CardElement.prototype.getHasBackground = function (ignoreBackgroundImages) {\n        if (ignoreBackgroundImages === void 0) { ignoreBackgroundImages = false; }\n        return false;\n    };\n    CardElement.prototype.getHasBorder = function () {\n        return false;\n    };\n    CardElement.prototype.getPadding = function () {\n        return this._padding;\n    };\n    CardElement.prototype.setPadding = function (value) {\n        this._padding = value;\n    };\n    CardElement.prototype.shouldSerialize = function (context) {\n        return context.elementRegistry.findByName(this.getJsonTypeName()) !== undefined;\n    };\n    Object.defineProperty(CardElement.prototype, \"useDefaultSizing\", {\n        get: function () {\n            return true;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(CardElement.prototype, \"separatorOrientation\", {\n        get: function () {\n            return Enums.Orientation.Horizontal;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(CardElement.prototype, \"defaultStyle\", {\n        get: function () {\n            return Enums.ContainerStyle.Default;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    CardElement.prototype.parse = function (source, context) {\n        _super.prototype.parse.call(this, source, context ? context : new SerializationContext());\n    };\n    CardElement.prototype.asString = function () {\n        return \"\";\n    };\n    CardElement.prototype.isBleeding = function () {\n        return false;\n    };\n    CardElement.prototype.getEffectiveStyle = function () {\n        if (this.parent) {\n            return this.parent.getEffectiveStyle();\n        }\n        return this.defaultStyle;\n    };\n    CardElement.prototype.getEffectiveStyleDefinition = function () {\n        return this.hostConfig.containerStyles.getStyleByName(this.getEffectiveStyle());\n    };\n    CardElement.prototype.getEffectiveTextStyleDefinition = function () {\n        if (this.parent) {\n            return this.parent.getEffectiveTextStyleDefinition();\n        }\n        return this.hostConfig.textStyles.default;\n    };\n    CardElement.prototype.getForbiddenActionTypes = function () {\n        return [];\n    };\n    CardElement.prototype.getImmediateSurroundingPadding = function (result, processTop, processRight, processBottom, processLeft) {\n        if (processTop === void 0) { processTop = true; }\n        if (processRight === void 0) { processRight = true; }\n        if (processBottom === void 0) { processBottom = true; }\n        if (processLeft === void 0) { processLeft = true; }\n        if (this.parent) {\n            var doProcessTop = processTop && this.parent.isTopElement(this);\n            var doProcessRight = processRight && this.parent.isRightMostElement(this);\n            var doProcessBottom = processBottom && this.parent.isBottomElement(this);\n            var doProcessLeft = processLeft && this.parent.isLeftMostElement(this);\n            var effectivePadding = this.parent.getEffectivePadding();\n            if (effectivePadding) {\n                if (doProcessTop && effectivePadding.top !== Enums.Spacing.None) {\n                    result.top = effectivePadding.top;\n                    doProcessTop = false;\n                }\n                if (doProcessRight && effectivePadding.right !== Enums.Spacing.None) {\n                    result.right = effectivePadding.right;\n                    doProcessRight = false;\n                }\n                if (doProcessBottom && effectivePadding.bottom !== Enums.Spacing.None) {\n                    result.bottom = effectivePadding.bottom;\n                    doProcessBottom = false;\n                }\n                if (doProcessLeft && effectivePadding.left !== Enums.Spacing.None) {\n                    result.left = effectivePadding.left;\n                    doProcessLeft = false;\n                }\n            }\n            if (doProcessTop || doProcessRight || doProcessBottom || doProcessLeft) {\n                this.parent.getImmediateSurroundingPadding(result, doProcessTop, doProcessRight, doProcessBottom, doProcessLeft);\n            }\n        }\n    };\n    CardElement.prototype.getActionCount = function () {\n        return 0;\n    };\n    CardElement.prototype.getActionAt = function (index) {\n        throw new Error(strings_1.Strings.errors.indexOutOfRange(index));\n    };\n    CardElement.prototype.indexOfAction = function (action) {\n        for (var i = 0; i < this.getActionCount(); i++) {\n            if (this.getActionAt(i) === action) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    CardElement.prototype.remove = function () {\n        if (this.parent && this.parent instanceof CardElementContainer) {\n            return this.parent.removeItem(this);\n        }\n        return false;\n    };\n    CardElement.prototype.render = function () {\n        this._renderedElement = this.overrideInternalRender();\n        this._separatorElement = this.internalRenderSeparator();\n        if (this._renderedElement) {\n            if (this.id) {\n                this._renderedElement.id = this.id;\n            }\n            if (this.customCssSelector) {\n                this._renderedElement.classList.add(this.customCssSelector);\n            }\n            this._renderedElement.style.boxSizing = \"border-box\";\n            this._defaultRenderedElementDisplayMode = this._renderedElement.style.display\n                ? this._renderedElement.style.display\n                : undefined;\n            this.adjustRenderedElementSize(this._renderedElement);\n            this.updateLayout(false);\n        }\n        else if (this.isDesignMode()) {\n            this._renderedElement = this.createPlaceholderElement();\n        }\n        return this._renderedElement;\n    };\n    CardElement.prototype.updateLayout = function (_processChildren) {\n        if (_processChildren === void 0) { _processChildren = true; }\n        this.updateRenderedElementVisibility();\n        this.applyPadding();\n    };\n    CardElement.prototype.updateActionsEnabledState = function () {\n        var allActions = this.getRootElement().getAllActions();\n        for (var _i = 0, allActions_1 = allActions; _i < allActions_1.length; _i++) {\n            var action = allActions_1[_i];\n            action.updateEnabledState();\n        }\n    };\n    CardElement.prototype.indexOf = function (_cardElement) {\n        return -1;\n    };\n    CardElement.prototype.isDesignMode = function () {\n        var rootElement = this.getRootElement();\n        return rootElement instanceof AdaptiveCard && rootElement.designMode;\n    };\n    CardElement.prototype.isFirstElement = function (_element) {\n        return true;\n    };\n    CardElement.prototype.isLastElement = function (_element) {\n        return true;\n    };\n    CardElement.prototype.isAtTheVeryLeft = function () {\n        return this.parent\n            ? this.parent.isLeftMostElement(this) && this.parent.isAtTheVeryLeft()\n            : true;\n    };\n    CardElement.prototype.isAtTheVeryRight = function () {\n        return this.parent\n            ? this.parent.isRightMostElement(this) && this.parent.isAtTheVeryRight()\n            : true;\n    };\n    CardElement.prototype.isAtTheVeryTop = function () {\n        return this.parent\n            ? this.parent.isFirstElement(this) && this.parent.isAtTheVeryTop()\n            : true;\n    };\n    CardElement.prototype.isAtTheVeryBottom = function () {\n        return this.parent\n            ? this.parent.isLastElement(this) && this.parent.isAtTheVeryBottom()\n            : true;\n    };\n    CardElement.prototype.isBleedingAtTop = function () {\n        return false;\n    };\n    CardElement.prototype.isBleedingAtBottom = function () {\n        return false;\n    };\n    CardElement.prototype.isLeftMostElement = function (_element) {\n        return true;\n    };\n    CardElement.prototype.isRightMostElement = function (_element) {\n        return true;\n    };\n    CardElement.prototype.isTopElement = function (element) {\n        return this.isFirstElement(element);\n    };\n    CardElement.prototype.isBottomElement = function (element) {\n        return this.isLastElement(element);\n    };\n    CardElement.prototype.isHiddenDueToOverflow = function () {\n        return (this._renderedElement !== undefined &&\n            this._renderedElement.style.visibility === \"hidden\");\n    };\n    CardElement.prototype.getRootElement = function () {\n        return this.getRootObject();\n    };\n    CardElement.prototype.getParentContainer = function () {\n        var currentElement = this.parent;\n        while (currentElement) {\n            if (currentElement instanceof Container) {\n                return currentElement;\n            }\n            currentElement = currentElement.parent;\n        }\n        return undefined;\n    };\n    CardElement.prototype.getAllInputs = function (processActions) {\n        if (processActions === void 0) { processActions = true; }\n        return [];\n    };\n    CardElement.prototype.getAllActions = function () {\n        var result = [];\n        for (var i = 0; i < this.getActionCount(); i++) {\n            var action = this.getActionAt(i);\n            if (action) {\n                result.push(action);\n            }\n        }\n        return result;\n    };\n    CardElement.prototype.getResourceInformation = function () {\n        return [];\n    };\n    CardElement.prototype.getElementById = function (id) {\n        return this.id === id ? this : undefined;\n    };\n    CardElement.prototype.getActionById = function (_id) {\n        return undefined;\n    };\n    CardElement.prototype.getElementByIdFromAction = function (id) {\n        var result = undefined;\n        for (var i = 0; i < this.getActionCount(); i++) {\n            var action = this.getActionAt(i);\n            if (action instanceof ShowCardAction) {\n                result = action.card.getElementById(id);\n                if (result) {\n                    break;\n                }\n            }\n        }\n        return result;\n    };\n    CardElement.prototype.getEffectivePadding = function () {\n        var padding = this.getPadding();\n        return padding ? padding : this.getDefaultPadding();\n    };\n    CardElement.prototype.getEffectiveHorizontalAlignment = function () {\n        if (this.horizontalAlignment !== undefined) {\n            return this.horizontalAlignment;\n        }\n        if (this.parent) {\n            return this.parent.getEffectiveHorizontalAlignment();\n        }\n        return Enums.HorizontalAlignment.Left;\n    };\n    Object.defineProperty(CardElement.prototype, \"hostConfig\", {\n        get: function () {\n            if (this._hostConfig) {\n                return this._hostConfig;\n            }\n            else {\n                if (this.parent) {\n                    return this.parent.hostConfig;\n                }\n                else {\n                    return host_config_1.defaultHostConfig;\n                }\n            }\n        },\n        set: function (value) {\n            this._hostConfig = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(CardElement.prototype, \"index\", {\n        get: function () {\n            if (this.parent) {\n                return this.parent.indexOf(this);\n            }\n            else {\n                return 0;\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(CardElement.prototype, \"isInteractive\", {\n        get: function () {\n            return false;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(CardElement.prototype, \"isStandalone\", {\n        get: function () {\n            return true;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(CardElement.prototype, \"isInline\", {\n        get: function () {\n            return false;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(CardElement.prototype, \"hasVisibleSeparator\", {\n        get: function () {\n            if (this.parent && this.separatorElement) {\n                return !this.parent.isFirstElement(this) && (this.isVisible || this.isDesignMode());\n            }\n            else {\n                return false;\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(CardElement.prototype, \"separatorElement\", {\n        get: function () {\n            return this._separatorElement;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(CardElement.prototype, \"parent\", {\n        get: function () {\n            return this._parent;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    CardElement.langProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_1, \"lang\", true, /^[a-z]{2,3}$/gi);\n    CardElement.isVisibleProperty = new serialization_1.BoolProperty(serialization_1.Versions.v1_2, \"isVisible\", true);\n    CardElement.separatorProperty = new serialization_1.BoolProperty(serialization_1.Versions.v1_0, \"separator\", false);\n    CardElement.heightProperty = new serialization_1.ValueSetProperty(serialization_1.Versions.v1_1, \"height\", [{ value: \"auto\" }, { value: \"stretch\" }], \"auto\");\n    CardElement.horizontalAlignmentProperty = new serialization_1.EnumProperty(serialization_1.Versions.v1_0, \"horizontalAlignment\", Enums.HorizontalAlignment);\n    CardElement.spacingProperty = new serialization_1.EnumProperty(serialization_1.Versions.v1_0, \"spacing\", Enums.Spacing, Enums.Spacing.Default);\n    __decorate([\n        (0, serialization_1.property)(CardElement.horizontalAlignmentProperty)\n    ], CardElement.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        (0, serialization_1.property)(CardElement.spacingProperty)\n    ], CardElement.prototype, \"spacing\", void 0);\n    __decorate([\n        (0, serialization_1.property)(CardElement.separatorProperty)\n    ], CardElement.prototype, \"separator\", void 0);\n    __decorate([\n        (0, serialization_1.property)(CardElement.heightProperty)\n    ], CardElement.prototype, \"height\", void 0);\n    __decorate([\n        (0, serialization_1.property)(CardElement.langProperty)\n    ], CardElement.prototype, \"lang\", null);\n    __decorate([\n        (0, serialization_1.property)(CardElement.isVisibleProperty)\n    ], CardElement.prototype, \"isVisible\", null);\n    return CardElement;\n}(card_object_1.CardObject));\nexports.CardElement = CardElement;\nvar ActionProperty = /** @class */ (function (_super) {\n    __extends(ActionProperty, _super);\n    function ActionProperty(targetVersion, name, forbiddenActionTypes) {\n        if (forbiddenActionTypes === void 0) { forbiddenActionTypes = []; }\n        var _this = _super.call(this, targetVersion, name, undefined) || this;\n        _this.targetVersion = targetVersion;\n        _this.name = name;\n        _this.forbiddenActionTypes = forbiddenActionTypes;\n        return _this;\n    }\n    ActionProperty.prototype.parse = function (sender, source, context) {\n        var parent = sender;\n        return context.parseAction(parent, source[this.name], this.forbiddenActionTypes, parent.isDesignMode());\n    };\n    ActionProperty.prototype.toJSON = function (sender, target, value, context) {\n        context.serializeValue(target, this.name, value ? value.toJSON(context) : undefined, undefined, true);\n    };\n    return ActionProperty;\n}(serialization_1.PropertyDefinition));\nexports.ActionProperty = ActionProperty;\nvar BaseTextBlock = /** @class */ (function (_super) {\n    __extends(BaseTextBlock, _super);\n    function BaseTextBlock(text) {\n        var _this = _super.call(this) || this;\n        _this.ariaHidden = false;\n        if (text) {\n            _this.text = text;\n        }\n        return _this;\n    }\n    BaseTextBlock.prototype.populateSchema = function (schema) {\n        _super.prototype.populateSchema.call(this, schema);\n        // selectAction is declared on BaseTextBlock but is only exposed on TextRun,\n        // so the property is removed from the BaseTextBlock schema.\n        schema.remove(BaseTextBlock.selectActionProperty);\n    };\n    Object.defineProperty(BaseTextBlock.prototype, \"text\", {\n        get: function () {\n            return this.getValue(BaseTextBlock.textProperty);\n        },\n        set: function (value) {\n            this.setText(value);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    //#endregion\n    BaseTextBlock.prototype.getFontSize = function (fontType) {\n        switch (this.effectiveSize) {\n            case Enums.TextSize.Small:\n                return fontType.fontSizes.small;\n            case Enums.TextSize.Medium:\n                return fontType.fontSizes.medium;\n            case Enums.TextSize.Large:\n                return fontType.fontSizes.large;\n            case Enums.TextSize.ExtraLarge:\n                return fontType.fontSizes.extraLarge;\n            default:\n                return fontType.fontSizes.default;\n        }\n    };\n    BaseTextBlock.prototype.getColorDefinition = function (colorSet, color) {\n        switch (color) {\n            case Enums.TextColor.Accent:\n                return colorSet.accent;\n            case Enums.TextColor.Dark:\n                return colorSet.dark;\n            case Enums.TextColor.Light:\n                return colorSet.light;\n            case Enums.TextColor.Good:\n                return colorSet.good;\n            case Enums.TextColor.Warning:\n                return colorSet.warning;\n            case Enums.TextColor.Attention:\n                return colorSet.attention;\n            default:\n                return colorSet.default;\n        }\n    };\n    BaseTextBlock.prototype.setText = function (value) {\n        this.setValue(BaseTextBlock.textProperty, value);\n    };\n    BaseTextBlock.prototype.init = function (textDefinition) {\n        this.size = textDefinition.size;\n        this.weight = textDefinition.weight;\n        this.color = textDefinition.color;\n        this.isSubtle = textDefinition.isSubtle;\n    };\n    BaseTextBlock.prototype.asString = function () {\n        return this.text;\n    };\n    BaseTextBlock.prototype.applyStylesTo = function (targetElement) {\n        var fontType = this.hostConfig.getFontTypeDefinition(this.effectiveFontType);\n        if (fontType.fontFamily) {\n            targetElement.style.fontFamily = fontType.fontFamily;\n        }\n        var fontSize;\n        switch (this.effectiveSize) {\n            case Enums.TextSize.Small:\n                fontSize = fontType.fontSizes.small;\n                break;\n            case Enums.TextSize.Medium:\n                fontSize = fontType.fontSizes.medium;\n                break;\n            case Enums.TextSize.Large:\n                fontSize = fontType.fontSizes.large;\n                break;\n            case Enums.TextSize.ExtraLarge:\n                fontSize = fontType.fontSizes.extraLarge;\n                break;\n            default:\n                fontSize = fontType.fontSizes.default;\n                break;\n        }\n        targetElement.style.fontSize = fontSize + \"px\";\n        var colorDefinition = this.getColorDefinition(this.getEffectiveStyleDefinition().foregroundColors, this.effectiveColor);\n        var targetColor = Utils.stringToCssColor(this.effectiveIsSubtle ? colorDefinition.subtle : colorDefinition.default);\n        if (targetColor) {\n            targetElement.style.color = targetColor;\n        }\n        var fontWeight;\n        switch (this.effectiveWeight) {\n            case Enums.TextWeight.Lighter:\n                fontWeight = fontType.fontWeights.lighter;\n                break;\n            case Enums.TextWeight.Bolder:\n                fontWeight = fontType.fontWeights.bolder;\n                break;\n            default:\n                fontWeight = fontType.fontWeights.default;\n                break;\n        }\n        targetElement.style.fontWeight = fontWeight.toString();\n        if (this.ariaHidden) {\n            targetElement.setAttribute(\"aria-hidden\", \"true\");\n        }\n    };\n    BaseTextBlock.prototype.getAllActions = function () {\n        var result = _super.prototype.getAllActions.call(this);\n        if (this.selectAction) {\n            result.push(this.selectAction);\n        }\n        return result;\n    };\n    Object.defineProperty(BaseTextBlock.prototype, \"effectiveColor\", {\n        get: function () {\n            return this.color !== undefined ? this.color : this.getEffectiveTextStyleDefinition().color;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BaseTextBlock.prototype, \"effectiveFontType\", {\n        get: function () {\n            return this.fontType !== undefined\n                ? this.fontType\n                : this.getEffectiveTextStyleDefinition().fontType;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BaseTextBlock.prototype, \"effectiveIsSubtle\", {\n        get: function () {\n            return this.isSubtle !== undefined\n                ? this.isSubtle\n                : this.getEffectiveTextStyleDefinition().isSubtle;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BaseTextBlock.prototype, \"effectiveSize\", {\n        get: function () {\n            return this.size !== undefined ? this.size : this.getEffectiveTextStyleDefinition().size;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BaseTextBlock.prototype, \"effectiveWeight\", {\n        get: function () {\n            return this.weight !== undefined\n                ? this.weight\n                : this.getEffectiveTextStyleDefinition().weight;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    //#region Schema\n    BaseTextBlock.textProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_0, \"text\", true);\n    BaseTextBlock.sizeProperty = new serialization_1.EnumProperty(serialization_1.Versions.v1_0, \"size\", Enums.TextSize);\n    BaseTextBlock.weightProperty = new serialization_1.EnumProperty(serialization_1.Versions.v1_0, \"weight\", Enums.TextWeight);\n    BaseTextBlock.colorProperty = new serialization_1.EnumProperty(serialization_1.Versions.v1_0, \"color\", Enums.TextColor);\n    BaseTextBlock.isSubtleProperty = new serialization_1.BoolProperty(serialization_1.Versions.v1_0, \"isSubtle\");\n    BaseTextBlock.fontTypeProperty = new serialization_1.EnumProperty(serialization_1.Versions.v1_2, \"fontType\", Enums.FontType);\n    BaseTextBlock.selectActionProperty = new ActionProperty(serialization_1.Versions.v1_1, \"selectAction\", [\n        \"Action.ShowCard\"\n    ]);\n    __decorate([\n        (0, serialization_1.property)(BaseTextBlock.sizeProperty)\n    ], BaseTextBlock.prototype, \"size\", void 0);\n    __decorate([\n        (0, serialization_1.property)(BaseTextBlock.weightProperty)\n    ], BaseTextBlock.prototype, \"weight\", void 0);\n    __decorate([\n        (0, serialization_1.property)(BaseTextBlock.colorProperty)\n    ], BaseTextBlock.prototype, \"color\", void 0);\n    __decorate([\n        (0, serialization_1.property)(BaseTextBlock.fontTypeProperty)\n    ], BaseTextBlock.prototype, \"fontType\", void 0);\n    __decorate([\n        (0, serialization_1.property)(BaseTextBlock.isSubtleProperty)\n    ], BaseTextBlock.prototype, \"isSubtle\", void 0);\n    __decorate([\n        (0, serialization_1.property)(BaseTextBlock.textProperty)\n    ], BaseTextBlock.prototype, \"text\", null);\n    __decorate([\n        (0, serialization_1.property)(BaseTextBlock.selectActionProperty)\n    ], BaseTextBlock.prototype, \"selectAction\", void 0);\n    return BaseTextBlock;\n}(CardElement));\nexports.BaseTextBlock = BaseTextBlock;\nvar TextBlock = /** @class */ (function (_super) {\n    __extends(TextBlock, _super);\n    function TextBlock() {\n        //#region Schema\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.wrap = false;\n        _this._treatAsPlainText = true;\n        _this.useMarkdown = true;\n        return _this;\n    }\n    TextBlock.prototype.restoreOriginalContent = function () {\n        var _a, _b;\n        if (this.renderedElement !== undefined) {\n            if (this.maxLines && this.maxLines > 0) {\n                this.renderedElement.style.maxHeight =\n                    this._computedLineHeight * this.maxLines + \"px\";\n            }\n            var originalHtml = (_b = (_a = TextBlock._ttRoundtripPolicy) === null || _a === void 0 ? void 0 : _a.createHTML(this._originalInnerHtml)) !== null && _b !== void 0 ? _b : this._originalInnerHtml;\n            this.renderedElement.innerHTML = originalHtml;\n        }\n    };\n    TextBlock.prototype.truncateIfSupported = function (maxHeight) {\n        if (this.renderedElement !== undefined) {\n            // For now, only truncate TextBlocks that contain just a single\n            // paragraph -- since the maxLines calculation doesn't take into\n            // account Markdown lists\n            var children = this.renderedElement.children;\n            var isTextOnly = !children.length;\n            var truncationSupported = isTextOnly ||\n                (children.length === 1 && children[0].tagName.toLowerCase() === \"p\" && !children[0].children.length);\n            if (truncationSupported) {\n                var element = isTextOnly ? this.renderedElement : children[0];\n                Utils.truncateText(element, maxHeight, this._computedLineHeight);\n                return true;\n            }\n        }\n        return false;\n    };\n    TextBlock.prototype.setText = function (value) {\n        _super.prototype.setText.call(this, value);\n        this._processedText = undefined;\n    };\n    TextBlock.prototype.internalRender = function () {\n        var _this = this;\n        var _a, _b;\n        this._processedText = undefined;\n        if (this.text) {\n            var preProcessedText = this.preProcessPropertyValue(BaseTextBlock.textProperty);\n            var hostConfig = this.hostConfig;\n            var element = void 0;\n            if (this.forElementId) {\n                var labelElement = document.createElement(\"label\");\n                labelElement.htmlFor = this.forElementId;\n                element = labelElement;\n            }\n            else {\n                element = document.createElement(\"div\");\n            }\n            element.classList.add(hostConfig.makeCssClassName(\"ac-textBlock\"));\n            element.style.overflow = \"hidden\";\n            this.applyStylesTo(element);\n            if (this.style === \"heading\") {\n                element.setAttribute(\"role\", \"heading\");\n                var headingLevel = this.hostConfig.textBlock.headingLevel;\n                if (headingLevel !== undefined && headingLevel > 0) {\n                    element.setAttribute(\"aria-level\", headingLevel.toString());\n                }\n            }\n            if (this.selectAction && hostConfig.supportsInteractivity) {\n                element.onclick = function (e) {\n                    if (_this.selectAction && _this.selectAction.isEffectivelyEnabled()) {\n                        e.preventDefault();\n                        e.cancelBubble = true;\n                        _this.selectAction.execute();\n                    }\n                };\n                this.selectAction.setupElementForAccessibility(element);\n                if (this.selectAction.isEffectivelyEnabled()) {\n                    element.classList.add(hostConfig.makeCssClassName(\"ac-selectable\"));\n                }\n            }\n            if (!this._processedText) {\n                this._treatAsPlainText = true;\n                var formattedText = TextFormatters.formatText(this.lang, preProcessedText);\n                if (this.useMarkdown && formattedText) {\n                    if (shared_1.GlobalSettings.allowMarkForTextHighlighting) {\n                        formattedText = formattedText\n                            .replace(/<mark>/g, \"===\")\n                            .replace(/<\\/mark>/g, \"/==/\");\n                    }\n                    var markdownProcessingResult = AdaptiveCard.applyMarkdown(formattedText);\n                    if (markdownProcessingResult.didProcess &&\n                        markdownProcessingResult.outputHtml) {\n                        this._processedText = markdownProcessingResult.outputHtml;\n                        this._treatAsPlainText = false;\n                        // Only process <mark> tag if markdown processing was applied because\n                        // markdown processing is also responsible for sanitizing the input string\n                        if (shared_1.GlobalSettings.allowMarkForTextHighlighting && this._processedText) {\n                            var markStyle = \"\";\n                            var effectiveStyle = this.getEffectiveStyleDefinition();\n                            if (effectiveStyle.highlightBackgroundColor) {\n                                markStyle +=\n                                    \"background-color: \" +\n                                        effectiveStyle.highlightBackgroundColor +\n                                        \";\";\n                            }\n                            if (effectiveStyle.highlightForegroundColor) {\n                                markStyle +=\n                                    \"color: \" + effectiveStyle.highlightForegroundColor + \";\";\n                            }\n                            if (markStyle) {\n                                markStyle = 'style=\"' + markStyle + '\"';\n                            }\n                            this._processedText = this._processedText\n                                .replace(/===/g, \"<mark \" + markStyle + \">\")\n                                .replace(/\\/==\\//g, \"</mark>\");\n                        }\n                    }\n                    else {\n                        this._processedText = formattedText;\n                        this._treatAsPlainText = true;\n                    }\n                }\n                else {\n                    this._processedText = formattedText;\n                    this._treatAsPlainText = true;\n                }\n            }\n            if (!this._processedText) {\n                this._processedText = \"\";\n            }\n            if (this._treatAsPlainText) {\n                element.innerText = this._processedText;\n            }\n            else {\n                var processedHtml = (_b = (_a = TextBlock._ttMarkdownPolicy) === null || _a === void 0 ? void 0 : _a.createHTML(this._processedText)) !== null && _b !== void 0 ? _b : this._processedText;\n                element.innerHTML = processedHtml;\n            }\n            if (element.firstElementChild instanceof HTMLElement) {\n                var firstElementChild = element.firstElementChild;\n                firstElementChild.style.marginTop = \"0px\";\n                firstElementChild.style.width = \"100%\";\n                if (!this.wrap) {\n                    firstElementChild.style.overflow = \"hidden\";\n                    firstElementChild.style.textOverflow = \"ellipsis\";\n                }\n            }\n            if (element.lastElementChild instanceof HTMLElement) {\n                element.lastElementChild.style.marginBottom = \"0px\";\n            }\n            var anchors = element.getElementsByTagName(\"a\");\n            var _loop_1 = function (anchor) {\n                anchor.classList.add(hostConfig.makeCssClassName(\"ac-anchor\"));\n                anchor.target = \"_blank\";\n                anchor.onclick = function (e) {\n                    if (raiseAnchorClickedEvent(_this, anchor, e)) {\n                        e.preventDefault();\n                        e.cancelBubble = true;\n                    }\n                };\n                anchor.oncontextmenu = function (e) {\n                    if (raiseAnchorClickedEvent(_this, anchor, e)) {\n                        e.preventDefault();\n                        e.cancelBubble = true;\n                        return false;\n                    }\n                    return true;\n                };\n            };\n            for (var _i = 0, _c = Array.from(anchors); _i < _c.length; _i++) {\n                var anchor = _c[_i];\n                _loop_1(anchor);\n            }\n            if (this.wrap) {\n                element.style.wordWrap = \"break-word\";\n                if (this.maxLines && this.maxLines > 0) {\n                    element.style.overflow = \"hidden\";\n                    if (Utils.isInternetExplorer() || !shared_1.GlobalSettings.useWebkitLineClamp) {\n                        element.style.maxHeight = this._computedLineHeight * this.maxLines + \"px\";\n                    }\n                    else {\n                        // While non standard, --webkit-line-clamp works in every browser (except IE)\n                        // and is a great solution to support the maxLines feature with ellipsis\n                        // truncation. With --webkit-line-clamp there is need to use explicit line heights\n                        element.style.removeProperty(\"line-height\");\n                        element.style.display = \"-webkit-box\";\n                        element.style.webkitBoxOrient = \"vertical\";\n                        element.style.webkitLineClamp = this.maxLines.toString();\n                    }\n                }\n            }\n            else {\n                element.style.whiteSpace = \"nowrap\";\n                element.style.textOverflow = \"ellipsis\";\n            }\n            if (shared_1.GlobalSettings.useAdvancedTextBlockTruncation ||\n                shared_1.GlobalSettings.useAdvancedCardBottomTruncation) {\n                this._originalInnerHtml = element.innerHTML;\n            }\n            return element;\n        }\n        else {\n            return undefined;\n        }\n    };\n    TextBlock.prototype.truncateOverflow = function (maxHeight) {\n        if (maxHeight >= this._computedLineHeight) {\n            return this.truncateIfSupported(maxHeight);\n        }\n        return false;\n    };\n    TextBlock.prototype.undoOverflowTruncation = function () {\n        this.restoreOriginalContent();\n        if (shared_1.GlobalSettings.useAdvancedTextBlockTruncation && this.maxLines) {\n            var maxHeight = this._computedLineHeight * this.maxLines;\n            this.truncateIfSupported(maxHeight);\n        }\n    };\n    TextBlock.prototype.applyStylesTo = function (targetElement) {\n        _super.prototype.applyStylesTo.call(this, targetElement);\n        switch (this.getEffectiveHorizontalAlignment()) {\n            case Enums.HorizontalAlignment.Center:\n                targetElement.style.textAlign = \"center\";\n                break;\n            case Enums.HorizontalAlignment.Right:\n                targetElement.style.textAlign = \"end\";\n                break;\n            default:\n                targetElement.style.textAlign = \"start\";\n                break;\n        }\n        var lineHeights = this.hostConfig.lineHeights;\n        if (lineHeights) {\n            switch (this.effectiveSize) {\n                case Enums.TextSize.Small:\n                    this._computedLineHeight = lineHeights.small;\n                    break;\n                case Enums.TextSize.Medium:\n                    this._computedLineHeight = lineHeights.medium;\n                    break;\n                case Enums.TextSize.Large:\n                    this._computedLineHeight = lineHeights.large;\n                    break;\n                case Enums.TextSize.ExtraLarge:\n                    this._computedLineHeight = lineHeights.extraLarge;\n                    break;\n                default:\n                    this._computedLineHeight = lineHeights.default;\n                    break;\n            }\n        }\n        else {\n            // Looks like 1.33 is the magic number to compute line-height\n            // from font size.\n            this._computedLineHeight =\n                this.getFontSize(this.hostConfig.getFontTypeDefinition(this.effectiveFontType)) *\n                    1.33;\n        }\n        targetElement.style.lineHeight = this._computedLineHeight + \"px\";\n    };\n    TextBlock.prototype.getJsonTypeName = function () {\n        return \"TextBlock\";\n    };\n    TextBlock.prototype.getEffectiveTextStyleDefinition = function () {\n        if (this.style) {\n            return this.hostConfig.textStyles.getStyleByName(this.style);\n        }\n        return _super.prototype.getEffectiveTextStyleDefinition.call(this);\n    };\n    TextBlock.prototype.updateLayout = function (processChildren) {\n        if (processChildren === void 0) { processChildren = false; }\n        _super.prototype.updateLayout.call(this, processChildren);\n        if (shared_1.GlobalSettings.useAdvancedTextBlockTruncation && this.maxLines && this.isDisplayed()) {\n            // Reset the element's innerHTML in case the available room for\n            // content has increased\n            this.restoreOriginalContent();\n            this.truncateIfSupported(this._computedLineHeight * this.maxLines);\n        }\n    };\n    var _a, _b;\n    TextBlock.wrapProperty = new serialization_1.BoolProperty(serialization_1.Versions.v1_0, \"wrap\", false);\n    TextBlock.maxLinesProperty = new serialization_1.NumProperty(serialization_1.Versions.v1_0, \"maxLines\");\n    TextBlock.styleProperty = new serialization_1.ValueSetProperty(serialization_1.Versions.v1_5, \"style\", [\n        { value: \"default\" },\n        { value: \"columnHeader\" },\n        { value: \"heading\" }\n    ]);\n    // Markdown processing is handled outside of Adaptive Cards. It's up to the host to ensure that markdown is safely\n    // processed.\n    TextBlock._ttMarkdownPolicy = (typeof window === 'undefined') ? undefined : (_a = window.trustedTypes) === null || _a === void 0 ? void 0 : _a.createPolicy(\"adaptivecards#markdownPassthroughPolicy\", { createHTML: function (value) { return value; } });\n    // When \"advanced\" truncation is enabled (see GlobalSettings.useAdvancedCardBottomTruncation and\n    // GlobalSettings.useAdvancedTextBlockTruncation), we store the original pre-truncation content in\n    // _originalInnerHtml so that we can restore/recalculate truncation later if space availability has changed (see\n    // TextBlock.restoreOriginalContent())\n    TextBlock._ttRoundtripPolicy = (typeof window === 'undefined') ? undefined : (_b = window.trustedTypes) === null || _b === void 0 ? void 0 : _b.createPolicy(\"adaptivecards#restoreContentsPolicy\", { createHTML: function (value) { return value; } });\n    __decorate([\n        (0, serialization_1.property)(TextBlock.wrapProperty)\n    ], TextBlock.prototype, \"wrap\", void 0);\n    __decorate([\n        (0, serialization_1.property)(TextBlock.maxLinesProperty)\n    ], TextBlock.prototype, \"maxLines\", void 0);\n    __decorate([\n        (0, serialization_1.property)(TextBlock.styleProperty)\n    ], TextBlock.prototype, \"style\", void 0);\n    return TextBlock;\n}(BaseTextBlock));\nexports.TextBlock = TextBlock;\nvar TextRun = /** @class */ (function (_super) {\n    __extends(TextRun, _super);\n    function TextRun() {\n        //#region Schema\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.italic = false;\n        _this.strikethrough = false;\n        _this.highlight = false;\n        _this.underline = false;\n        return _this;\n    }\n    TextRun.prototype.populateSchema = function (schema) {\n        _super.prototype.populateSchema.call(this, schema);\n        schema.add(BaseTextBlock.selectActionProperty);\n    };\n    //#endregion\n    TextRun.prototype.internalRender = function () {\n        var _this = this;\n        if (this.text) {\n            var preProcessedText = this.preProcessPropertyValue(BaseTextBlock.textProperty);\n            var hostConfig = this.hostConfig;\n            var formattedText = TextFormatters.formatText(this.lang, preProcessedText);\n            if (!formattedText) {\n                formattedText = \"\";\n            }\n            var element = document.createElement(\"span\");\n            element.classList.add(hostConfig.makeCssClassName(\"ac-textRun\"));\n            this.applyStylesTo(element);\n            if (this.selectAction && hostConfig.supportsInteractivity) {\n                var anchor = document.createElement(\"a\");\n                anchor.classList.add(hostConfig.makeCssClassName(\"ac-anchor\"));\n                var href = this.selectAction.getHref();\n                anchor.href = href ? href : \"\";\n                anchor.target = \"_blank\";\n                anchor.onclick = function (e) {\n                    if (_this.selectAction && _this.selectAction.isEffectivelyEnabled()) {\n                        e.preventDefault();\n                        e.cancelBubble = true;\n                        _this.selectAction.execute();\n                    }\n                };\n                this.selectAction.setupElementForAccessibility(anchor);\n                anchor.innerText = formattedText;\n                element.appendChild(anchor);\n            }\n            else {\n                element.innerText = formattedText;\n            }\n            return element;\n        }\n        else {\n            return undefined;\n        }\n    };\n    TextRun.prototype.applyStylesTo = function (targetElement) {\n        _super.prototype.applyStylesTo.call(this, targetElement);\n        if (this.italic) {\n            targetElement.style.fontStyle = \"italic\";\n        }\n        if (this.strikethrough) {\n            targetElement.style.textDecoration = \"line-through\";\n        }\n        if (this.highlight) {\n            var colorDefinition = this.getColorDefinition(this.getEffectiveStyleDefinition().foregroundColors, this.effectiveColor);\n            var backgroundColor = Utils.stringToCssColor(this.effectiveIsSubtle\n                ? colorDefinition.highlightColors.subtle\n                : colorDefinition.highlightColors.default);\n            if (backgroundColor) {\n                targetElement.style.backgroundColor = backgroundColor;\n            }\n        }\n        if (this.underline) {\n            targetElement.style.textDecoration = \"underline\";\n        }\n    };\n    TextRun.prototype.getJsonTypeName = function () {\n        return \"TextRun\";\n    };\n    Object.defineProperty(TextRun.prototype, \"isStandalone\", {\n        get: function () {\n            return false;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TextRun.prototype, \"isInline\", {\n        get: function () {\n            return true;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    TextRun.italicProperty = new serialization_1.BoolProperty(serialization_1.Versions.v1_2, \"italic\", false);\n    TextRun.strikethroughProperty = new serialization_1.BoolProperty(serialization_1.Versions.v1_2, \"strikethrough\", false);\n    TextRun.highlightProperty = new serialization_1.BoolProperty(serialization_1.Versions.v1_2, \"highlight\", false);\n    TextRun.underlineProperty = new serialization_1.BoolProperty(serialization_1.Versions.v1_3, \"underline\", false);\n    __decorate([\n        (0, serialization_1.property)(TextRun.italicProperty)\n    ], TextRun.prototype, \"italic\", void 0);\n    __decorate([\n        (0, serialization_1.property)(TextRun.strikethroughProperty)\n    ], TextRun.prototype, \"strikethrough\", void 0);\n    __decorate([\n        (0, serialization_1.property)(TextRun.highlightProperty)\n    ], TextRun.prototype, \"highlight\", void 0);\n    __decorate([\n        (0, serialization_1.property)(TextRun.underlineProperty)\n    ], TextRun.prototype, \"underline\", void 0);\n    return TextRun;\n}(BaseTextBlock));\nexports.TextRun = TextRun;\nvar RichTextBlock = /** @class */ (function (_super) {\n    __extends(RichTextBlock, _super);\n    function RichTextBlock() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._inlines = [];\n        return _this;\n    }\n    RichTextBlock.prototype.internalAddInline = function (inline, forceAdd) {\n        if (forceAdd === void 0) { forceAdd = false; }\n        if (!inline.isInline) {\n            throw new Error(strings_1.Strings.errors.elementCannotBeUsedAsInline());\n        }\n        var doAdd = inline.parent === undefined || forceAdd;\n        if (!doAdd && inline.parent !== this) {\n            throw new Error(strings_1.Strings.errors.inlineAlreadyParented());\n        }\n        else {\n            inline.setParent(this);\n            this._inlines.push(inline);\n        }\n    };\n    RichTextBlock.prototype.internalParse = function (source, context) {\n        _super.prototype.internalParse.call(this, source, context);\n        this._inlines = [];\n        if (Array.isArray(source[\"inlines\"])) {\n            for (var _i = 0, _a = source[\"inlines\"]; _i < _a.length; _i++) {\n                var jsonInline = _a[_i];\n                var inline = void 0;\n                if (typeof jsonInline === \"string\") {\n                    var textRun = new TextRun();\n                    textRun.text = jsonInline;\n                    inline = textRun;\n                }\n                else {\n                    // No fallback for inlines in 1.2\n                    inline = context.parseElement(this, jsonInline, [], false);\n                }\n                if (inline) {\n                    this.internalAddInline(inline, true);\n                }\n            }\n        }\n    };\n    RichTextBlock.prototype.internalToJSON = function (target, context) {\n        _super.prototype.internalToJSON.call(this, target, context);\n        if (this._inlines.length > 0) {\n            var jsonInlines = [];\n            for (var _i = 0, _a = this._inlines; _i < _a.length; _i++) {\n                var inline = _a[_i];\n                jsonInlines.push(inline.toJSON(context));\n            }\n            context.serializeValue(target, \"inlines\", jsonInlines);\n        }\n    };\n    RichTextBlock.prototype.internalRender = function () {\n        if (this._inlines.length > 0) {\n            var element = void 0;\n            if (this.forElementId) {\n                var labelElement = document.createElement(\"label\");\n                labelElement.htmlFor = this.forElementId;\n                element = labelElement;\n            }\n            else {\n                element = document.createElement(\"div\");\n            }\n            element.className = this.hostConfig.makeCssClassName(\"ac-richTextBlock\");\n            switch (this.getEffectiveHorizontalAlignment()) {\n                case Enums.HorizontalAlignment.Center:\n                    element.style.textAlign = \"center\";\n                    break;\n                case Enums.HorizontalAlignment.Right:\n                    element.style.textAlign = \"end\";\n                    break;\n                default:\n                    element.style.textAlign = \"start\";\n                    break;\n            }\n            var renderedInlines = 0;\n            for (var _i = 0, _a = this._inlines; _i < _a.length; _i++) {\n                var inline = _a[_i];\n                var renderedInline = inline.render();\n                if (renderedInline) {\n                    element.appendChild(renderedInline);\n                    renderedInlines++;\n                }\n            }\n            if (renderedInlines > 0) {\n                return element;\n            }\n        }\n        return undefined;\n    };\n    RichTextBlock.prototype.asString = function () {\n        var result = \"\";\n        for (var _i = 0, _a = this._inlines; _i < _a.length; _i++) {\n            var inline = _a[_i];\n            result += inline.asString();\n        }\n        return result;\n    };\n    RichTextBlock.prototype.getJsonTypeName = function () {\n        return \"RichTextBlock\";\n    };\n    RichTextBlock.prototype.getInlineCount = function () {\n        return this._inlines.length;\n    };\n    RichTextBlock.prototype.getInlineAt = function (index) {\n        if (index >= 0 && index < this._inlines.length) {\n            return this._inlines[index];\n        }\n        else {\n            throw new Error(strings_1.Strings.errors.indexOutOfRange(index));\n        }\n    };\n    RichTextBlock.prototype.addInline = function (inline) {\n        if (typeof inline === \"string\") {\n            this.internalAddInline(new TextRun(inline));\n        }\n        else {\n            this.internalAddInline(inline);\n        }\n    };\n    RichTextBlock.prototype.removeInline = function (inline) {\n        var index = this._inlines.indexOf(inline);\n        if (index >= 0) {\n            this._inlines[index].setParent(undefined);\n            this._inlines.splice(index, 1);\n            return true;\n        }\n        return false;\n    };\n    return RichTextBlock;\n}(CardElement));\nexports.RichTextBlock = RichTextBlock;\nvar Fact = /** @class */ (function (_super) {\n    __extends(Fact, _super);\n    function Fact(name, value) {\n        var _this = _super.call(this) || this;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    //#endregion\n    Fact.prototype.getSchemaKey = function () {\n        return \"Fact\";\n    };\n    //#region Schema\n    Fact.titleProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_0, \"title\");\n    Fact.valueProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_0, \"value\");\n    __decorate([\n        (0, serialization_1.property)(Fact.titleProperty)\n    ], Fact.prototype, \"name\", void 0);\n    __decorate([\n        (0, serialization_1.property)(Fact.valueProperty)\n    ], Fact.prototype, \"value\", void 0);\n    return Fact;\n}(serialization_1.SerializableObject));\nexports.Fact = Fact;\nvar FactSet = /** @class */ (function (_super) {\n    __extends(FactSet, _super);\n    function FactSet() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(FactSet.prototype, \"useDefaultSizing\", {\n        //#endregion\n        get: function () {\n            return false;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    FactSet.prototype.internalRender = function () {\n        var element = undefined;\n        var hostConfig = this.hostConfig;\n        if (this.facts.length > 0) {\n            element = document.createElement(\"table\");\n            element.style.borderWidth = \"0px\";\n            element.style.borderSpacing = \"0px\";\n            element.style.borderStyle = \"none\";\n            element.style.borderCollapse = \"collapse\";\n            element.style.display = \"block\";\n            element.style.overflow = \"hidden\";\n            element.classList.add(hostConfig.makeCssClassName(\"ac-factset\"));\n            element.setAttribute(\"role\", \"presentation\");\n            for (var i = 0; i < this.facts.length; i++) {\n                var trElement = document.createElement(\"tr\");\n                if (i > 0) {\n                    trElement.style.marginTop = hostConfig.factSet.spacing + \"px\";\n                }\n                // Title column\n                var tdElement = document.createElement(\"td\");\n                tdElement.style.padding = \"0\";\n                tdElement.classList.add(hostConfig.makeCssClassName(\"ac-fact-title\"));\n                if (hostConfig.factSet.title.maxWidth) {\n                    tdElement.style.maxWidth = hostConfig.factSet.title.maxWidth + \"px\";\n                }\n                tdElement.style.verticalAlign = \"top\";\n                var textBlock = new TextBlock();\n                textBlock.setParent(this);\n                textBlock.text =\n                    !this.facts[i].name && this.isDesignMode() ? \"Title\" : this.facts[i].name;\n                textBlock.size = hostConfig.factSet.title.size;\n                textBlock.color = hostConfig.factSet.title.color;\n                textBlock.isSubtle = hostConfig.factSet.title.isSubtle;\n                textBlock.weight = hostConfig.factSet.title.weight;\n                textBlock.wrap = hostConfig.factSet.title.wrap;\n                textBlock.spacing = Enums.Spacing.None;\n                Utils.appendChild(tdElement, textBlock.render());\n                Utils.appendChild(trElement, tdElement);\n                // Spacer column\n                tdElement = document.createElement(\"td\");\n                tdElement.style.width = \"10px\";\n                Utils.appendChild(trElement, tdElement);\n                // Value column\n                tdElement = document.createElement(\"td\");\n                tdElement.style.padding = \"0\";\n                tdElement.style.verticalAlign = \"top\";\n                tdElement.classList.add(hostConfig.makeCssClassName(\"ac-fact-value\"));\n                textBlock = new TextBlock();\n                textBlock.setParent(this);\n                textBlock.text = this.facts[i].value;\n                textBlock.size = hostConfig.factSet.value.size;\n                textBlock.color = hostConfig.factSet.value.color;\n                textBlock.isSubtle = hostConfig.factSet.value.isSubtle;\n                textBlock.weight = hostConfig.factSet.value.weight;\n                textBlock.wrap = hostConfig.factSet.value.wrap;\n                textBlock.spacing = Enums.Spacing.None;\n                Utils.appendChild(tdElement, textBlock.render());\n                Utils.appendChild(trElement, tdElement);\n                Utils.appendChild(element, trElement);\n            }\n        }\n        return element;\n    };\n    FactSet.prototype.getJsonTypeName = function () {\n        return \"FactSet\";\n    };\n    //#region Schema\n    FactSet.factsProperty = new serialization_1.SerializableObjectCollectionProperty(serialization_1.Versions.v1_0, \"facts\", Fact);\n    __decorate([\n        (0, serialization_1.property)(FactSet.factsProperty)\n    ], FactSet.prototype, \"facts\", void 0);\n    return FactSet;\n}(CardElement));\nexports.FactSet = FactSet;\nvar ImageDimensionProperty = /** @class */ (function (_super) {\n    __extends(ImageDimensionProperty, _super);\n    function ImageDimensionProperty(targetVersion, name, internalName, fallbackProperty) {\n        var _this = _super.call(this, targetVersion, name) || this;\n        _this.targetVersion = targetVersion;\n        _this.name = name;\n        _this.internalName = internalName;\n        _this.fallbackProperty = fallbackProperty;\n        return _this;\n    }\n    ImageDimensionProperty.prototype.getInternalName = function () {\n        return this.internalName;\n    };\n    ImageDimensionProperty.prototype.parse = function (sender, source, context) {\n        var result = undefined;\n        var sourceValue = source[this.name];\n        if (sourceValue === undefined) {\n            return this.defaultValue;\n        }\n        var isValid = false;\n        if (typeof sourceValue === \"string\") {\n            try {\n                var size = shared_1.SizeAndUnit.parse(sourceValue, true);\n                if (size.unit === Enums.SizeUnit.Pixel) {\n                    result = size.physicalSize;\n                    isValid = true;\n                }\n            }\n            catch (_a) {\n                // Swallow the exception\n            }\n            // If the source value isn't valid per this property definition,\n            // check its validity per the fallback property, if specified\n            if (!isValid && this.fallbackProperty) {\n                isValid = this.fallbackProperty.isValidValue(sourceValue, context);\n            }\n        }\n        if (!isValid) {\n            context.logParseEvent(sender, Enums.ValidationEvent.InvalidPropertyValue, strings_1.Strings.errors.invalidPropertyValue(sourceValue, this.name));\n        }\n        return result;\n    };\n    ImageDimensionProperty.prototype.toJSON = function (sender, target, value, context) {\n        context.serializeValue(target, this.name, typeof value === \"number\" && !isNaN(value) ? value + \"px\" : undefined);\n    };\n    return ImageDimensionProperty;\n}(serialization_1.PropertyDefinition));\nvar Image = /** @class */ (function (_super) {\n    __extends(Image, _super);\n    function Image() {\n        //#region Schema\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.size = Enums.Size.Auto;\n        _this.style = Enums.ImageStyle.Default;\n        return _this;\n    }\n    Image.prototype.populateSchema = function (schema) {\n        _super.prototype.populateSchema.call(this, schema);\n        schema.remove(CardElement.heightProperty);\n    };\n    //#endregion\n    Image.prototype.applySize = function (element) {\n        if (this.pixelWidth || this.pixelHeight) {\n            if (this.pixelWidth) {\n                element.style.width = this.pixelWidth + \"px\";\n            }\n            if (this.pixelHeight) {\n                element.style.height = this.pixelHeight + \"px\";\n            }\n        }\n        else {\n            if (this.maxHeight) {\n                // If the image is constrained in height, we set its height property and\n                // auto and stretch are ignored (default to medium). THis is necessary for\n                // ImageSet which uses a maximum image height as opposed to the cards width\n                // as a constraining dimension\n                switch (this.size) {\n                    case Enums.Size.Small:\n                        element.style.height = this.hostConfig.imageSizes.small + \"px\";\n                        break;\n                    case Enums.Size.Large:\n                        element.style.height = this.hostConfig.imageSizes.large + \"px\";\n                        break;\n                    default:\n                        element.style.height = this.hostConfig.imageSizes.medium + \"px\";\n                        break;\n                }\n                element.style.maxHeight = this.maxHeight + \"px\";\n            }\n            else {\n                switch (this.size) {\n                    case Enums.Size.Stretch:\n                        element.style.width = \"100%\";\n                        break;\n                    case Enums.Size.Auto:\n                        element.style.maxWidth = \"100%\";\n                        break;\n                    case Enums.Size.Small:\n                        element.style.width = this.hostConfig.imageSizes.small + \"px\";\n                        break;\n                    case Enums.Size.Large:\n                        element.style.width = this.hostConfig.imageSizes.large + \"px\";\n                        break;\n                    case Enums.Size.Medium:\n                        element.style.width = this.hostConfig.imageSizes.medium + \"px\";\n                        break;\n                }\n                element.style.maxHeight = \"100%\";\n            }\n        }\n    };\n    Object.defineProperty(Image.prototype, \"useDefaultSizing\", {\n        get: function () {\n            return false;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Image.prototype.internalRender = function () {\n        var _this = this;\n        var element = undefined;\n        if (this.url) {\n            element = document.createElement(\"div\");\n            element.style.display = \"flex\";\n            element.style.alignItems = \"flex-start\";\n            // Cache hostConfig to avoid walking the parent hierarchy multiple times\n            var hostConfig = this.hostConfig;\n            switch (this.getEffectiveHorizontalAlignment()) {\n                case Enums.HorizontalAlignment.Center:\n                    element.style.justifyContent = \"center\";\n                    break;\n                case Enums.HorizontalAlignment.Right:\n                    element.style.justifyContent = \"flex-end\";\n                    break;\n                default:\n                    element.style.justifyContent = \"flex-start\";\n                    break;\n            }\n            var imageElement = document.createElement(\"img\");\n            this.renderedImageElement = imageElement;\n            imageElement.onload = function (_e) {\n                raiseImageLoadedEvent(_this);\n            };\n            imageElement.onerror = function (_e) {\n                if (_this.renderedElement) {\n                    var card = _this.getRootElement();\n                    clearElement(_this.renderedElement);\n                    if (card && card.designMode) {\n                        var errorElement = document.createElement(\"div\");\n                        errorElement.style.display = \"flex\";\n                        errorElement.style.alignItems = \"center\";\n                        errorElement.style.justifyContent = \"center\";\n                        errorElement.style.backgroundColor = \"#EEEEEE\";\n                        errorElement.style.color = \"black\";\n                        errorElement.innerText = \":-(\";\n                        errorElement.style.padding = \"10px\";\n                        _this.applySize(errorElement);\n                        _this.renderedElement.appendChild(errorElement);\n                    }\n                }\n                raiseImageLoadedEvent(_this);\n            };\n            imageElement.style.minWidth = \"0\";\n            imageElement.classList.add(hostConfig.makeCssClassName(\"ac-image\"));\n            if (this.selectAction && hostConfig.supportsInteractivity) {\n                imageElement.onkeypress = function (e) {\n                    if (_this.selectAction &&\n                        _this.selectAction.isEffectivelyEnabled() &&\n                        (e.code === \"Enter\" || e.code === \"Space\")) {\n                        // enter or space pressed\n                        e.preventDefault();\n                        e.cancelBubble = true;\n                        _this.selectAction.execute();\n                    }\n                };\n                imageElement.onclick = function (e) {\n                    if (_this.selectAction && _this.selectAction.isEffectivelyEnabled()) {\n                        e.preventDefault();\n                        e.cancelBubble = true;\n                        _this.selectAction.execute();\n                    }\n                };\n                this.selectAction.setupElementForAccessibility(imageElement);\n                if (this.selectAction.isEffectivelyEnabled()) {\n                    imageElement.classList.add(hostConfig.makeCssClassName(\"ac-selectable\"));\n                }\n            }\n            this.applySize(imageElement);\n            if (this.style === Enums.ImageStyle.Person) {\n                imageElement.style.borderRadius = \"50%\";\n                imageElement.style.backgroundPosition = \"50% 50%\";\n                imageElement.style.backgroundRepeat = \"no-repeat\";\n            }\n            var backgroundColor = Utils.stringToCssColor(this.backgroundColor);\n            if (backgroundColor) {\n                imageElement.style.backgroundColor = backgroundColor;\n            }\n            this.setImageSource(imageElement);\n            var altTextProperty = this.preProcessPropertyValue(Image.altTextProperty);\n            if (altTextProperty) {\n                imageElement.alt = altTextProperty;\n            }\n            element.appendChild(imageElement);\n        }\n        return element;\n    };\n    Image.prototype.getJsonTypeName = function () {\n        return \"Image\";\n    };\n    Image.prototype.getAllActions = function () {\n        var result = _super.prototype.getAllActions.call(this);\n        if (this.selectAction) {\n            result.push(this.selectAction);\n        }\n        return result;\n    };\n    Image.prototype.getActionById = function (id) {\n        var result = _super.prototype.getActionById.call(this, id);\n        if (!result && this.selectAction) {\n            result = this.selectAction.getActionById(id);\n        }\n        return result;\n    };\n    Image.prototype.getResourceInformation = function () {\n        return this.url ? [{ url: this.url, mimeType: \"image\" }] : [];\n    };\n    Image.prototype.setImageSource = function (imageElement) {\n        var imageForceLoader = new ImageForceLoader(this.forceLoad, this.url);\n        imageForceLoader.configureImage(this);\n        imageElement.src = this.preProcessPropertyValue(Image.urlProperty);\n        imageForceLoader.resetImage(this);\n    };\n    Image.urlProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_0, \"url\");\n    Image.altTextProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_0, \"altText\");\n    Image.backgroundColorProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_1, \"backgroundColor\");\n    Image.styleProperty = new serialization_1.EnumProperty(serialization_1.Versions.v1_0, \"style\", Enums.ImageStyle, Enums.ImageStyle.Default);\n    Image.sizeProperty = new serialization_1.EnumProperty(serialization_1.Versions.v1_0, \"size\", Enums.Size, Enums.Size.Auto);\n    Image.pixelWidthProperty = new ImageDimensionProperty(serialization_1.Versions.v1_1, \"width\", \"pixelWidth\");\n    Image.pixelHeightProperty = new ImageDimensionProperty(serialization_1.Versions.v1_1, \"height\", \"pixelHeight\", CardElement.heightProperty);\n    Image.selectActionProperty = new ActionProperty(serialization_1.Versions.v1_1, \"selectAction\", [\n        \"Action.ShowCard\"\n    ]);\n    Image.shouldForceLoadProperty = new serialization_1.BoolProperty(serialization_1.Versions.v1_6, \"forceLoad\", false);\n    __decorate([\n        (0, serialization_1.property)(Image.urlProperty)\n    ], Image.prototype, \"url\", void 0);\n    __decorate([\n        (0, serialization_1.property)(Image.altTextProperty)\n    ], Image.prototype, \"altText\", void 0);\n    __decorate([\n        (0, serialization_1.property)(Image.backgroundColorProperty)\n    ], Image.prototype, \"backgroundColor\", void 0);\n    __decorate([\n        (0, serialization_1.property)(Image.sizeProperty)\n    ], Image.prototype, \"size\", void 0);\n    __decorate([\n        (0, serialization_1.property)(Image.styleProperty)\n    ], Image.prototype, \"style\", void 0);\n    __decorate([\n        (0, serialization_1.property)(Image.pixelWidthProperty)\n    ], Image.prototype, \"pixelWidth\", void 0);\n    __decorate([\n        (0, serialization_1.property)(Image.pixelHeightProperty)\n    ], Image.prototype, \"pixelHeight\", void 0);\n    __decorate([\n        (0, serialization_1.property)(Image.selectActionProperty)\n    ], Image.prototype, \"selectAction\", void 0);\n    __decorate([\n        (0, serialization_1.property)(Image.shouldForceLoadProperty)\n    ], Image.prototype, \"forceLoad\", void 0);\n    return Image;\n}(CardElement));\nexports.Image = Image;\n// configures Image element to fetch a new image data from url source instead of relying on cache\n// currently rudimentary refreshing scheme is used\n// by attaching unique query string to url, we bypass the cache usage\nvar ImageForceLoader = /** @class */ (function () {\n    function ImageForceLoader(doForceLoad, url) {\n        this.doForceLoad = doForceLoad;\n        this.url = url;\n        if (url && url.length && doForceLoad) {\n            // we can do better by appending unique key such as uuid instead of epoch\n            // however the current usage is for front-end ui and networking,  \n            // since ui is running in single main thread, this is sufficient mechanism\n            // without needing to depend on external library for our small use cases.\n            this.uniqueHash = '?' + Date.now();\n            this.urlWithForceLoadOption = url + this.uniqueHash;\n        }\n    }\n    ImageForceLoader.prototype.configureImage = function (image) {\n        if (this.urlWithForceLoadOption && this.urlWithForceLoadOption.length) {\n            image.url = this.urlWithForceLoadOption;\n        }\n    };\n    ImageForceLoader.prototype.resetImage = function (image) {\n        image.url = this.url;\n    };\n    return ImageForceLoader;\n}());\nvar CardElementContainer = /** @class */ (function (_super) {\n    __extends(CardElementContainer, _super);\n    function CardElementContainer() {\n        //#region Schema\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.allowVerticalOverflow = false;\n        return _this;\n    }\n    CardElementContainer.prototype.populateSchema = function (schema) {\n        _super.prototype.populateSchema.call(this, schema);\n        if (!this.isSelectable) {\n            schema.remove(CardElementContainer.selectActionProperty);\n        }\n    };\n    //#endregion\n    CardElementContainer.prototype.isElementAllowed = function (element) {\n        return this.hostConfig.supportsInteractivity || !element.isInteractive;\n    };\n    CardElementContainer.prototype.applyPadding = function () {\n        _super.prototype.applyPadding.call(this);\n        if (!this.renderedElement) {\n            return;\n        }\n        var physicalPadding = new shared_1.SpacingDefinition();\n        if (this.getEffectivePadding()) {\n            physicalPadding = this.hostConfig.paddingDefinitionToSpacingDefinition(this.getEffectivePadding());\n        }\n        this.renderedElement.style.paddingTop = physicalPadding.top + \"px\";\n        this.renderedElement.style.paddingRight = physicalPadding.right + \"px\";\n        this.renderedElement.style.paddingBottom = physicalPadding.bottom + \"px\";\n        this.renderedElement.style.paddingLeft = physicalPadding.left + \"px\";\n        this.renderedElement.style.marginRight = \"0\";\n        this.renderedElement.style.marginLeft = \"0\";\n    };\n    Object.defineProperty(CardElementContainer.prototype, \"isSelectable\", {\n        get: function () {\n            return false;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    CardElementContainer.prototype.forbiddenChildElements = function () {\n        return [];\n    };\n    CardElementContainer.prototype.releaseDOMResources = function () {\n        _super.prototype.releaseDOMResources.call(this);\n        for (var i = 0; i < this.getItemCount(); i++) {\n            this.getItemAt(i).releaseDOMResources();\n        }\n    };\n    CardElementContainer.prototype.internalValidateProperties = function (context) {\n        _super.prototype.internalValidateProperties.call(this, context);\n        for (var i = 0; i < this.getItemCount(); i++) {\n            var item = this.getItemAt(i);\n            if (!this.hostConfig.supportsInteractivity && item.isInteractive) {\n                context.addFailure(this, Enums.ValidationEvent.InteractivityNotAllowed, strings_1.Strings.errors.interactivityNotAllowed());\n            }\n            if (!this.isElementAllowed(item)) {\n                context.addFailure(this, Enums.ValidationEvent.InteractivityNotAllowed, strings_1.Strings.errors.elementTypeNotAllowed(item.getJsonTypeName()));\n            }\n            item.internalValidateProperties(context);\n        }\n        if (this._selectAction) {\n            this._selectAction.internalValidateProperties(context);\n        }\n    };\n    CardElementContainer.prototype.render = function () {\n        var _this = this;\n        var element = _super.prototype.render.call(this);\n        if (element) {\n            var hostConfig = this.hostConfig;\n            if (this.allowVerticalOverflow) {\n                element.style.overflowX = \"hidden\";\n                element.style.overflowY = \"auto\";\n            }\n            if (element &&\n                this.isSelectable &&\n                this._selectAction &&\n                hostConfig.supportsInteractivity) {\n                element.onclick = function (e) {\n                    if (_this._selectAction && _this._selectAction.isEffectivelyEnabled()) {\n                        e.preventDefault();\n                        e.cancelBubble = true;\n                        _this._selectAction.execute();\n                    }\n                };\n                element.onkeypress = function (e) {\n                    if (_this._selectAction &&\n                        _this._selectAction.isEffectivelyEnabled() &&\n                        (e.code === \"Enter\" || e.code === \"Space\")) {\n                        // Enter or space pressed\n                        e.preventDefault();\n                        e.cancelBubble = true;\n                        _this._selectAction.execute();\n                    }\n                };\n                this._selectAction.setupElementForAccessibility(element);\n                if (this._selectAction.isEffectivelyEnabled()) {\n                    element.classList.add(hostConfig.makeCssClassName(\"ac-selectable\"));\n                }\n            }\n        }\n        return element;\n    };\n    CardElementContainer.prototype.updateLayout = function (processChildren) {\n        if (processChildren === void 0) { processChildren = true; }\n        _super.prototype.updateLayout.call(this, processChildren);\n        if (processChildren) {\n            for (var i = 0; i < this.getItemCount(); i++) {\n                this.getItemAt(i).updateLayout();\n            }\n        }\n    };\n    CardElementContainer.prototype.getAllInputs = function (processActions) {\n        if (processActions === void 0) { processActions = true; }\n        var result = [];\n        for (var i = 0; i < this.getItemCount(); i++) {\n            result.push.apply(result, this.getItemAt(i).getAllInputs(processActions));\n        }\n        return result;\n    };\n    CardElementContainer.prototype.getAllActions = function () {\n        var result = _super.prototype.getAllActions.call(this);\n        for (var i = 0; i < this.getItemCount(); i++) {\n            result.push.apply(result, this.getItemAt(i).getAllActions());\n        }\n        if (this._selectAction) {\n            result.push(this._selectAction);\n        }\n        return result;\n    };\n    CardElementContainer.prototype.getResourceInformation = function () {\n        var result = [];\n        for (var i = 0; i < this.getItemCount(); i++) {\n            result.push.apply(result, this.getItemAt(i).getResourceInformation());\n        }\n        return result;\n    };\n    CardElementContainer.prototype.getElementById = function (id) {\n        var result = _super.prototype.getElementById.call(this, id);\n        if (!result) {\n            for (var i = 0; i < this.getItemCount(); i++) {\n                result = this.getItemAt(i).getElementById(id);\n                if (result) {\n                    break;\n                }\n            }\n        }\n        return result;\n    };\n    /**\n     * @inheritdoc\n     */\n    CardElementContainer.prototype.findDOMNodeOwner = function (node) {\n        var _a;\n        var target = undefined;\n        for (var i = 0; i < this.getItemCount(); i++) {\n            // recur through child elements\n            target = this.getItemAt(i).findDOMNodeOwner(node);\n            if (target) {\n                return target;\n            }\n        }\n        // If not found in children, check the actions\n        for (var i = 0; i < this.getActionCount(); i++) {\n            target = (_a = this.getActionAt(i)) === null || _a === void 0 ? void 0 : _a.findDOMNodeOwner(node);\n            if (target) {\n                return target;\n            }\n        }\n        // if not found in children or actions, defer to parent implementation\n        return _super.prototype.findDOMNodeOwner.call(this, node);\n    };\n    CardElementContainer.selectActionProperty = new ActionProperty(serialization_1.Versions.v1_1, \"selectAction\", [\n        \"Action.ShowCard\"\n    ]);\n    __decorate([\n        (0, serialization_1.property)(CardElementContainer.selectActionProperty)\n    ], CardElementContainer.prototype, \"_selectAction\", void 0);\n    return CardElementContainer;\n}(CardElement));\nexports.CardElementContainer = CardElementContainer;\nvar ImageSet = /** @class */ (function (_super) {\n    __extends(ImageSet, _super);\n    function ImageSet() {\n        //#region Schema\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._images = [];\n        _this.imageSize = Enums.ImageSize.Medium;\n        _this.presentationStyle = Enums.ImageSetPresentationStyle.Default;\n        _this.pixelOffset = 0;\n        return _this;\n    }\n    //#endregion\n    ImageSet.prototype.internalRender = function () {\n        var element = undefined;\n        if (this._images.length > 0) {\n            element = document.createElement(\"div\");\n            element.style.display = \"flex\";\n            element.style.flexWrap = \"wrap\";\n            for (var _i = 0, _a = this._images; _i < _a.length; _i++) {\n                var image = _a[_i];\n                switch (this.imageSize) {\n                    case Enums.ImageSize.Small:\n                        image.size = Enums.Size.Small;\n                        break;\n                    case Enums.ImageSize.Large:\n                        image.size = Enums.Size.Large;\n                        break;\n                    default:\n                        image.size = Enums.Size.Medium;\n                        break;\n                }\n                image.maxHeight = this.hostConfig.imageSet.maxImageHeight;\n                var renderedImage = image.render();\n                if (renderedImage) {\n                    renderedImage.style.display = \"inline-flex\";\n                    renderedImage.style.margin = \"0px\";\n                    if (this.presentationStyle == Enums.ImageSetPresentationStyle.Default) {\n                        renderedImage.style.marginRight = \"10px\";\n                    }\n                    Utils.appendChild(element, renderedImage);\n                }\n            }\n            if (this.presentationStyle == Enums.ImageSetPresentationStyle.Stacked) {\n                this.applyStackedPresentationStyle();\n            }\n        }\n        return element;\n    };\n    ImageSet.prototype.applyStackedPresentationStyle = function () {\n        if (this._images[0].renderedImageElement) {\n            var dimension = StackedImageConfigurator.parseNumericPixelDimension(this._images[0].renderedImageElement.style.height);\n            var bgColor = this.getEffectiveBackgroundColor();\n            if (dimension) {\n                var stackedImageConfigurator = new StackedImageConfigurator(this.pixelOffset, dimension, bgColor);\n                stackedImageConfigurator.configureImagesArrayAsStackedLayout(this._images);\n            }\n        }\n    };\n    ImageSet.prototype.getEffectiveBackgroundColor = function () {\n        var parentContainer = this.getParentContainer();\n        var style = parentContainer === null || parentContainer === void 0 ? void 0 : parentContainer.getEffectiveStyle();\n        var styleDefinition = this.hostConfig.containerStyles.getStyleByName(style, this.hostConfig.containerStyles.getStyleByName(this.defaultStyle));\n        return Utils.stringToCssColor(styleDefinition.backgroundColor);\n    };\n    ImageSet.prototype.getItemCount = function () {\n        return this._images.length;\n    };\n    ImageSet.prototype.getItemAt = function (index) {\n        return this._images[index];\n    };\n    ImageSet.prototype.getFirstVisibleRenderedItem = function () {\n        return this._images && this._images.length > 0 ? this._images[0] : undefined;\n    };\n    ImageSet.prototype.getLastVisibleRenderedItem = function () {\n        return this._images && this._images.length > 0\n            ? this._images[this._images.length - 1]\n            : undefined;\n    };\n    ImageSet.prototype.removeItem = function (item) {\n        if (item instanceof Image) {\n            var itemIndex = this._images.indexOf(item);\n            if (itemIndex >= 0) {\n                this._images.splice(itemIndex, 1);\n                item.setParent(undefined);\n                this.updateLayout();\n                return true;\n            }\n        }\n        return false;\n    };\n    ImageSet.prototype.getJsonTypeName = function () {\n        return \"ImageSet\";\n    };\n    ImageSet.prototype.addImage = function (image) {\n        if (!image.parent) {\n            this._images.push(image);\n            image.setParent(this);\n        }\n        else {\n            throw new Error(\"This image already belongs to another ImageSet\");\n        }\n    };\n    ImageSet.prototype.indexOf = function (cardElement) {\n        return cardElement instanceof Image ? this._images.indexOf(cardElement) : -1;\n    };\n    ImageSet.imagesProperty = new serialization_1.SerializableObjectCollectionProperty(serialization_1.Versions.v1_0, \"images\", Image, function (sender, item) {\n        item.setParent(sender);\n    });\n    ImageSet.imageSizeProperty = new serialization_1.EnumProperty(serialization_1.Versions.v1_0, \"imageSize\", Enums.ImageSize, Enums.ImageSize.Medium);\n    ImageSet.imagePresentationStyle = new serialization_1.EnumProperty(serialization_1.Versions.v1_6, \"style\", Enums.ImageSetPresentationStyle, Enums.ImageSetPresentationStyle.Default);\n    ImageSet.pixelOffset = new serialization_1.NumProperty(serialization_1.Versions.v1_6, \"offset\", 0, undefined);\n    __decorate([\n        (0, serialization_1.property)(ImageSet.imagesProperty)\n    ], ImageSet.prototype, \"_images\", void 0);\n    __decorate([\n        (0, serialization_1.property)(ImageSet.imageSizeProperty)\n    ], ImageSet.prototype, \"imageSize\", void 0);\n    __decorate([\n        (0, serialization_1.property)(ImageSet.imagePresentationStyle)\n    ], ImageSet.prototype, \"presentationStyle\", void 0);\n    __decorate([\n        (0, serialization_1.property)(ImageSet.pixelOffset)\n    ], ImageSet.prototype, \"pixelOffset\", void 0);\n    return ImageSet;\n}(CardElementContainer));\nexports.ImageSet = ImageSet;\nvar StackedImageConfigurator = /** @class */ (function () {\n    function StackedImageConfigurator(offset, dimension, style) {\n        this.sign45 = 0.7071;\n        this.maxImageCounts = 2;\n        this.offset = 0;\n        this.normalizationConstant = 0;\n        this.border = 5;\n        this.dimension = 0;\n        this.dimension = dimension;\n        this.normalizationConstant = (dimension * this.sign45 - 0.5 * dimension) * 2;\n        // offset determines how far images are placed from each other\n        // at zero, images are separated only by the border\n        // there is no restriction on how far they are apart in positive values, their actual\n        // positioning is limited by maximum size imposed by Image renderer\n        // a negative value can decrease upto the diameter of the image since a value less than the diameter\n        // put the images past each other, and the use of such value is not reasonable request\n        // users should change image positions in such case.\n        this.offset = this.sign45 * (Math.max(offset, -dimension) - this.normalizationConstant);\n        this.style = style ? style : \"\";\n    }\n    StackedImageConfigurator.prototype.moveImageRight = function (element) {\n        element.style.marginLeft = this.offset + \"px\";\n    };\n    StackedImageConfigurator.prototype.moveImageUp = function (element) {\n        element.style.marginBottom = this.offset + this.dimension + \"px\";\n    };\n    StackedImageConfigurator.prototype.moveImageDown = function (element) {\n        element.style.marginTop = this.offset + this.dimension + \"px\";\n    };\n    StackedImageConfigurator.prototype.makeImageRound = function (element) {\n        element.style.borderRadius = \"50%\";\n        element.style.backgroundPosition = \"50% 50%\";\n        element.style.backgroundRepeat = \"no-repeat\";\n    };\n    StackedImageConfigurator.prototype.applyBorder = function (element) {\n        element.style.height = (this.dimension + this.border * 2) + \"px\";\n        element.style.border = this.border + \"px\" + \" solid \" + this.style;\n    };\n    StackedImageConfigurator.prototype.configureImageForBottomLeft = function (element) {\n        this.moveImageDown(element);\n        this.makeImageRound(element);\n        this.applyBorder(element);\n        element.style.zIndex = \"2\";\n    };\n    StackedImageConfigurator.prototype.configureImageForTopRight = function (element) {\n        this.moveImageUp(element);\n        this.moveImageRight(element);\n        this.makeImageRound(element);\n        element.style.zIndex = \"1\";\n    };\n    // stacked layout is applied when there are two images in ImageSet,\n    // first image in the ImageSet is put bottom left of ImageSet,\n    // second image is placed top right diagonally to the first image at 45 angle\n    // first image is placed over the second image should the overlap to occur.\n    StackedImageConfigurator.prototype.configureImagesArrayAsStackedLayout = function (elements) {\n        if (elements.length == 1) {\n            if (elements[0].renderedImageElement) {\n                this.makeImageRound(elements[0].renderedImageElement);\n            }\n        }\n        else if (elements.length <= this.maxImageCounts) {\n            if (elements[0].renderedImageElement && elements[1].renderedImageElement) {\n                this.configureImageForBottomLeft(elements[0].renderedImageElement);\n                this.configureImageForTopRight(elements[1].renderedImageElement);\n            }\n        }\n    };\n    StackedImageConfigurator.parseNumericPixelDimension = function (dimension) {\n        if ((dimension === null || dimension === void 0 ? void 0 : dimension.substring(dimension.length - 2)) == 'px') {\n            return parseInt(dimension.substring(0, dimension.length - 2));\n        }\n        return undefined;\n    };\n    return StackedImageConfigurator;\n}());\nvar ContentSource = /** @class */ (function (_super) {\n    __extends(ContentSource, _super);\n    //#endregion\n    function ContentSource(url, mimeType) {\n        var _this = _super.call(this) || this;\n        _this.url = url;\n        _this.mimeType = mimeType;\n        return _this;\n    }\n    ContentSource.prototype.isValid = function () {\n        return this.mimeType && this.url ? true : false;\n    };\n    //#region Schema\n    ContentSource.mimeTypeProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_1, \"mimeType\");\n    ContentSource.urlProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_1, \"url\");\n    __decorate([\n        (0, serialization_1.property)(ContentSource.mimeTypeProperty)\n    ], ContentSource.prototype, \"mimeType\", void 0);\n    __decorate([\n        (0, serialization_1.property)(ContentSource.urlProperty)\n    ], ContentSource.prototype, \"url\", void 0);\n    return ContentSource;\n}(serialization_1.SerializableObject));\nexports.ContentSource = ContentSource;\nvar CaptionSource = /** @class */ (function (_super) {\n    __extends(CaptionSource, _super);\n    //#endregion\n    function CaptionSource(url, mimeType, label) {\n        var _this = _super.call(this, url, mimeType) || this;\n        _this.label = label;\n        return _this;\n    }\n    CaptionSource.prototype.getSchemaKey = function () {\n        return \"CaptionSource\";\n    };\n    CaptionSource.prototype.render = function () {\n        var result = undefined;\n        if (this.isValid()) {\n            result = document.createElement(\"track\");\n            result.src = this.url;\n            result.kind = \"captions\";\n            result.label = this.label;\n        }\n        return result;\n    };\n    //#region Schema\n    CaptionSource.labelProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_6, \"label\");\n    __decorate([\n        (0, serialization_1.property)(CaptionSource.labelProperty)\n    ], CaptionSource.prototype, \"label\", void 0);\n    return CaptionSource;\n}(ContentSource));\nexports.CaptionSource = CaptionSource;\nvar MediaSource = /** @class */ (function (_super) {\n    __extends(MediaSource, _super);\n    function MediaSource() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    MediaSource.prototype.getSchemaKey = function () {\n        return \"MediaSource\";\n    };\n    MediaSource.prototype.render = function () {\n        var result = undefined;\n        if (this.isValid()) {\n            result = document.createElement(\"source\");\n            result.src = this.url;\n            result.type = this.mimeType;\n        }\n        return result;\n    };\n    return MediaSource;\n}(ContentSource));\nexports.MediaSource = MediaSource;\nvar MediaPlayer = /** @class */ (function () {\n    function MediaPlayer() {\n    }\n    MediaPlayer.prototype.play = function () {\n        // Do nothing in base implementation\n    };\n    Object.defineProperty(MediaPlayer.prototype, \"posterUrl\", {\n        get: function () {\n            return this._posterUrl;\n        },\n        set: function (value) {\n            this._posterUrl = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MediaPlayer.prototype, \"selectedMediaType\", {\n        get: function () {\n            return undefined;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return MediaPlayer;\n}());\nexports.MediaPlayer = MediaPlayer;\nvar HTML5MediaPlayer = /** @class */ (function (_super) {\n    __extends(HTML5MediaPlayer, _super);\n    function HTML5MediaPlayer(owner) {\n        var _this = _super.call(this) || this;\n        _this.owner = owner;\n        _this._selectedSources = [];\n        _this._captionSources = [];\n        _this.processSources();\n        return _this;\n    }\n    HTML5MediaPlayer.prototype.processSources = function () {\n        var _a;\n        this._selectedSources = [];\n        this._captionSources = [];\n        this._selectedMediaType = undefined;\n        for (var _i = 0, _b = this.owner.sources; _i < _b.length; _i++) {\n            var source = _b[_i];\n            var mimeComponents = source.mimeType ? source.mimeType.split(\"/\") : [];\n            if (mimeComponents.length === 2) {\n                if (!this._selectedMediaType) {\n                    var index = HTML5MediaPlayer.supportedMediaTypes.indexOf(mimeComponents[0]);\n                    if (index >= 0) {\n                        this._selectedMediaType = HTML5MediaPlayer.supportedMediaTypes[index];\n                    }\n                }\n                if (mimeComponents[0] === this._selectedMediaType) {\n                    this._selectedSources.push(source);\n                }\n            }\n        }\n        (_a = this._captionSources).push.apply(_a, this.owner.captionSources);\n    };\n    HTML5MediaPlayer.prototype.canPlay = function () {\n        return this._selectedSources.length > 0;\n    };\n    HTML5MediaPlayer.prototype.fetchVideoDetails = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/];\n            });\n        });\n    };\n    HTML5MediaPlayer.prototype.render = function () {\n        if (this._selectedMediaType === \"video\") {\n            this._mediaElement = document.createElement(\"video\");\n        }\n        else {\n            this._mediaElement = document.createElement(\"audio\");\n        }\n        this._mediaElement.setAttribute(\"aria-label\", this.owner.altText ? this.owner.altText : strings_1.Strings.defaults.mediaPlayerAriaLabel());\n        this._mediaElement.setAttribute(\"webkit-playsinline\", \"\");\n        this._mediaElement.setAttribute(\"playsinline\", \"\");\n        // We enable crossorigin for cases where the caption file has a different domain than\n        // the video file. If the caption file lives in a different domain than the video file\n        // and crossorigin is not set, then the caption file will fail to load.\n        this._mediaElement.setAttribute(\"crossorigin\", \"\");\n        this._mediaElement.autoplay = true;\n        this._mediaElement.controls = true;\n        if (Utils.isMobileOS()) {\n            this._mediaElement.muted = true;\n        }\n        this._mediaElement.preload = \"none\";\n        this._mediaElement.style.width = \"100%\";\n        for (var _i = 0, _a = this.owner.sources; _i < _a.length; _i++) {\n            var source = _a[_i];\n            var renderedSource = source.render();\n            Utils.appendChild(this._mediaElement, renderedSource);\n        }\n        for (var _b = 0, _c = this.owner.captionSources; _b < _c.length; _b++) {\n            var captionSource = _c[_b];\n            if (captionSource.mimeType == \"vtt\") {\n                var renderedCaptionSource = captionSource.render();\n                Utils.appendChild(this._mediaElement, renderedCaptionSource);\n            }\n        }\n        return this._mediaElement;\n    };\n    HTML5MediaPlayer.prototype.play = function () {\n        if (this._mediaElement) {\n            this._mediaElement.play();\n        }\n    };\n    Object.defineProperty(HTML5MediaPlayer.prototype, \"selectedMediaType\", {\n        get: function () {\n            return this._selectedMediaType;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    HTML5MediaPlayer.supportedMediaTypes = [\"audio\", \"video\"];\n    return HTML5MediaPlayer;\n}(MediaPlayer));\nexports.HTML5MediaPlayer = HTML5MediaPlayer;\nvar CustomMediaPlayer = /** @class */ (function (_super) {\n    __extends(CustomMediaPlayer, _super);\n    function CustomMediaPlayer(matches) {\n        return _super.call(this) || this;\n    }\n    return CustomMediaPlayer;\n}(MediaPlayer));\nexports.CustomMediaPlayer = CustomMediaPlayer;\nvar IFrameMediaMediaPlayer = /** @class */ (function (_super) {\n    __extends(IFrameMediaMediaPlayer, _super);\n    function IFrameMediaMediaPlayer(matches, iFrameTitle) {\n        var _this = _super.call(this, matches) || this;\n        _this.iFrameTitle = iFrameTitle;\n        if (matches.length >= 2) {\n            _this._videoId = matches[1];\n        }\n        return _this;\n    }\n    IFrameMediaMediaPlayer.prototype.canPlay = function () {\n        return this._videoId !== undefined;\n    };\n    IFrameMediaMediaPlayer.prototype.render = function () {\n        var container = document.createElement(\"div\");\n        container.style.position = \"relative\";\n        container.style.width = \"100%\";\n        container.style.height = \"0\";\n        container.style.paddingBottom = \"56.25%\";\n        var iFrame = document.createElement(\"iframe\");\n        iFrame.style.position = \"absolute\";\n        iFrame.style.top = \"0\";\n        iFrame.style.left = \"0\";\n        iFrame.style.width = \"100%\";\n        iFrame.style.height = \"100%\";\n        iFrame.src = this.getEmbedVideoUrl();\n        iFrame.frameBorder = \"0\";\n        if (this.iFrameTitle) {\n            iFrame.title = this.iFrameTitle;\n        }\n        iFrame.allow =\n            \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\";\n        iFrame.allowFullscreen = true;\n        container.appendChild(iFrame);\n        return container;\n    };\n    Object.defineProperty(IFrameMediaMediaPlayer.prototype, \"videoId\", {\n        get: function () {\n            return this._videoId;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return IFrameMediaMediaPlayer;\n}(CustomMediaPlayer));\nexports.IFrameMediaMediaPlayer = IFrameMediaMediaPlayer;\nvar VimeoPlayer = /** @class */ (function (_super) {\n    __extends(VimeoPlayer, _super);\n    function VimeoPlayer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    VimeoPlayer.prototype.fetchVideoDetails = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var oEmbedUrl, response, json;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        oEmbedUrl = \"https://vimeo.com/api/oembed.json?url=\".concat(this.getEmbedVideoUrl());\n                        return [4 /*yield*/, fetch(oEmbedUrl)];\n                    case 1:\n                        response = _a.sent();\n                        if (!response.ok) return [3 /*break*/, 3];\n                        return [4 /*yield*/, response.json()];\n                    case 2:\n                        json = _a.sent();\n                        this.posterUrl = json[\"thumbnail_url\"];\n                        _a.label = 3;\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    VimeoPlayer.prototype.getEmbedVideoUrl = function () {\n        return \"https://player.vimeo.com/video/\".concat(this.videoId, \"?autoplay=1\");\n    };\n    return VimeoPlayer;\n}(IFrameMediaMediaPlayer));\nexports.VimeoPlayer = VimeoPlayer;\nvar DailymotionPlayer = /** @class */ (function (_super) {\n    __extends(DailymotionPlayer, _super);\n    function DailymotionPlayer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    DailymotionPlayer.prototype.fetchVideoDetails = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var apiUrl, response, json;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        apiUrl = \"https://api.dailymotion.com/video/\".concat(this.videoId, \"?fields=thumbnail_720_url\");\n                        return [4 /*yield*/, fetch(apiUrl)];\n                    case 1:\n                        response = _a.sent();\n                        if (!response.ok) return [3 /*break*/, 3];\n                        return [4 /*yield*/, response.json()];\n                    case 2:\n                        json = _a.sent();\n                        this.posterUrl = json[\"thumbnail_720_url\"];\n                        _a.label = 3;\n                    case 3: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    DailymotionPlayer.prototype.getEmbedVideoUrl = function () {\n        return \"https://www.dailymotion.com/embed/video/\".concat(this.videoId, \"?autoplay=1\");\n    };\n    return DailymotionPlayer;\n}(IFrameMediaMediaPlayer));\nexports.DailymotionPlayer = DailymotionPlayer;\nvar YouTubePlayer = /** @class */ (function (_super) {\n    __extends(YouTubePlayer, _super);\n    function YouTubePlayer(matches, iFrameTitle) {\n        var _this = _super.call(this, matches, iFrameTitle) || this;\n        _this.iFrameTitle = iFrameTitle;\n        if (matches.length >= 3 && matches[2] !== undefined) {\n            _this._startTimeIndex = parseInt(matches[2]);\n        }\n        return _this;\n    }\n    YouTubePlayer.prototype.fetchVideoDetails = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                this.posterUrl = this.videoId\n                    ? \"https://img.youtube.com/vi/\".concat(this.videoId, \"/maxresdefault.jpg\")\n                    : undefined;\n                return [2 /*return*/];\n            });\n        });\n    };\n    YouTubePlayer.prototype.getEmbedVideoUrl = function () {\n        var url = \"https://www.youtube.com/embed/\".concat(this.videoId, \"?autoplay=1\");\n        if (this._startTimeIndex !== undefined) {\n            url += \"&start=\".concat(this._startTimeIndex);\n        }\n        return url;\n    };\n    return YouTubePlayer;\n}(IFrameMediaMediaPlayer));\nexports.YouTubePlayer = YouTubePlayer;\nvar Media = /** @class */ (function (_super) {\n    __extends(Media, _super);\n    function Media() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.sources = [];\n        _this.captionSources = [];\n        return _this;\n    }\n    Media.prototype.createMediaPlayer = function () {\n        for (var _i = 0, _a = Media.customMediaPlayers; _i < _a.length; _i++) {\n            var provider = _a[_i];\n            for (var _b = 0, _c = this.sources; _b < _c.length; _b++) {\n                var source = _c[_b];\n                if (source.url) {\n                    for (var _d = 0, _f = provider.urlPatterns; _d < _f.length; _d++) {\n                        var pattern = _f[_d];\n                        var matches = pattern.exec(source.url);\n                        if (matches !== null) {\n                            return provider.createMediaPlayer(matches);\n                        }\n                    }\n                }\n            }\n        }\n        return new HTML5MediaPlayer(this);\n    };\n    Media.prototype.handlePlayButtonInvoke = function (event) {\n        if (this.hostConfig.media.allowInlinePlayback) {\n            event.preventDefault();\n            event.cancelBubble = true;\n            if (this.renderedElement) {\n                var mediaPlayerElement = this._mediaPlayer.render();\n                clearElement(this.renderedElement);\n                this.renderedElement.appendChild(mediaPlayerElement);\n                this._mediaPlayer.play();\n                mediaPlayerElement.focus();\n            }\n        }\n        else {\n            if (Media.onPlay) {\n                event.preventDefault();\n                event.cancelBubble = true;\n                Media.onPlay(this);\n            }\n        }\n    };\n    Media.prototype.displayPoster = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var playButtonArrowWidth, playButtonArrowHeight, posterRootElement_1, posterUrl, posterImageElement_1, playButtonOuterElement, playButtonInnerElement, playButtonContainer;\n            var _this = this;\n            return __generator(this, function (_a) {\n                if (this.renderedElement) {\n                    playButtonArrowWidth = 12;\n                    playButtonArrowHeight = 15;\n                    posterRootElement_1 = document.createElement(\"div\");\n                    posterRootElement_1.className = this.hostConfig.makeCssClassName(\"ac-media-poster\");\n                    posterRootElement_1.setAttribute(\"role\", \"contentinfo\");\n                    posterRootElement_1.setAttribute(\"aria-label\", this.altText ? this.altText : strings_1.Strings.defaults.mediaPlayerAriaLabel());\n                    posterRootElement_1.style.position = \"relative\";\n                    posterRootElement_1.style.display = \"flex\";\n                    posterUrl = this.poster ? this.poster : this._mediaPlayer.posterUrl;\n                    if (!posterUrl) {\n                        posterUrl = this.hostConfig.media.defaultPoster;\n                    }\n                    if (posterUrl) {\n                        posterImageElement_1 = document.createElement(\"img\");\n                        posterImageElement_1.style.width = \"100%\";\n                        posterImageElement_1.style.height = \"100%\";\n                        posterImageElement_1.setAttribute(\"role\", \"presentation\");\n                        posterImageElement_1.onerror = function (_e) {\n                            if (posterImageElement_1.parentNode) {\n                                posterImageElement_1.parentNode.removeChild(posterImageElement_1);\n                            }\n                            posterRootElement_1.classList.add(\"empty\");\n                            posterRootElement_1.style.minHeight = \"150px\";\n                        };\n                        posterImageElement_1.src = posterUrl;\n                        posterRootElement_1.appendChild(posterImageElement_1);\n                    }\n                    else {\n                        posterRootElement_1.classList.add(\"empty\");\n                        posterRootElement_1.style.minHeight = \"150px\";\n                    }\n                    if (this.hostConfig.supportsInteractivity && this._mediaPlayer.canPlay()) {\n                        playButtonOuterElement = document.createElement(\"div\");\n                        playButtonOuterElement.tabIndex = 0;\n                        playButtonOuterElement.setAttribute(\"role\", \"button\");\n                        playButtonOuterElement.setAttribute(\"aria-label\", strings_1.Strings.defaults.mediaPlayerPlayMedia());\n                        playButtonOuterElement.className =\n                            this.hostConfig.makeCssClassName(\"ac-media-playButton\");\n                        playButtonOuterElement.style.display = \"flex\";\n                        playButtonOuterElement.style.alignItems = \"center\";\n                        playButtonOuterElement.style.justifyContent = \"center\";\n                        playButtonOuterElement.onclick = function (e) {\n                            _this.handlePlayButtonInvoke(e);\n                        };\n                        playButtonOuterElement.onkeypress = function (e) {\n                            if (e.code === \"Enter\" || e.code === \"Space\") {\n                                // space or enter\n                                _this.handlePlayButtonInvoke(e);\n                            }\n                        };\n                        playButtonInnerElement = document.createElement(\"div\");\n                        playButtonInnerElement.className = this.hostConfig.makeCssClassName(\"ac-media-playButton-arrow\");\n                        playButtonInnerElement.style.width = playButtonArrowWidth + \"px\";\n                        playButtonInnerElement.style.height = playButtonArrowHeight + \"px\";\n                        playButtonInnerElement.style.borderTopWidth = playButtonArrowHeight / 2 + \"px\";\n                        playButtonInnerElement.style.borderBottomWidth = playButtonArrowHeight / 2 + \"px\";\n                        playButtonInnerElement.style.borderLeftWidth = playButtonArrowWidth + \"px\";\n                        playButtonInnerElement.style.borderRightWidth = \"0\";\n                        playButtonInnerElement.style.borderStyle = \"solid\";\n                        playButtonInnerElement.style.borderTopColor = \"transparent\";\n                        playButtonInnerElement.style.borderRightColor = \"transparent\";\n                        playButtonInnerElement.style.borderBottomColor = \"transparent\";\n                        playButtonInnerElement.style.transform =\n                            \"translate(\" + playButtonArrowWidth / 10 + \"px,0px)\";\n                        playButtonOuterElement.appendChild(playButtonInnerElement);\n                        playButtonContainer = document.createElement(\"div\");\n                        playButtonContainer.style.position = \"absolute\";\n                        playButtonContainer.style.left = \"0\";\n                        playButtonContainer.style.top = \"0\";\n                        playButtonContainer.style.width = \"100%\";\n                        playButtonContainer.style.height = \"100%\";\n                        playButtonContainer.style.display = \"flex\";\n                        playButtonContainer.style.justifyContent = \"center\";\n                        playButtonContainer.style.alignItems = \"center\";\n                        playButtonContainer.appendChild(playButtonOuterElement);\n                        posterRootElement_1.appendChild(playButtonContainer);\n                    }\n                    clearElement(this.renderedElement);\n                    this.renderedElement.appendChild(posterRootElement_1);\n                }\n                return [2 /*return*/];\n            });\n        });\n    };\n    Media.prototype.internalRender = function () {\n        var element = document.createElement(\"div\");\n        element.className = this.hostConfig.makeCssClassName(\"ac-media\");\n        return element;\n    };\n    Media.prototype.render = function () {\n        var _this = this;\n        var result = _super.prototype.render.call(this);\n        if (result) {\n            this._mediaPlayer = this.createMediaPlayer();\n            this._mediaPlayer.fetchVideoDetails().then(function () { return _this.displayPoster(); });\n        }\n        return result;\n    };\n    Media.prototype.releaseDOMResources = function () {\n        _super.prototype.releaseDOMResources.call(this);\n        this.displayPoster();\n    };\n    Media.prototype.getJsonTypeName = function () {\n        return \"Media\";\n    };\n    Media.prototype.getResourceInformation = function () {\n        var result = [];\n        if (this._mediaPlayer) {\n            var posterUrl = this.poster ? this.poster : this.hostConfig.media.defaultPoster;\n            if (posterUrl) {\n                result.push({ url: posterUrl, mimeType: \"image\" });\n            }\n        }\n        for (var _i = 0, _a = this.sources; _i < _a.length; _i++) {\n            var mediaSource = _a[_i];\n            if (mediaSource.isValid()) {\n                result.push({\n                    /* eslint-disable @typescript-eslint/no-unnecessary-type-assertion -- `mediaSource.url` is of type `string | undefined`, but is validated by `isValid()` call */\n                    url: mediaSource.url,\n                    mimeType: mediaSource.mimeType\n                    /* eslint-enable @typescript-eslint/no-unnecessary-type-assertion */\n                });\n            }\n        }\n        for (var _b = 0, _c = this.captionSources; _b < _c.length; _b++) {\n            var captionSource = _c[_b];\n            if (captionSource.isValid()) {\n                result.push({\n                    /* eslint-disable @typescript-eslint/no-unnecessary-type-assertion -- `captionSource.url` is of type `string | undefined`, but is validated by `isValid()` call */\n                    url: captionSource.url,\n                    mimeType: captionSource.mimeType\n                    /* eslint-enable @typescript-eslint/no-unnecessary-type-assertion */\n                });\n            }\n        }\n        return result;\n    };\n    Object.defineProperty(Media.prototype, \"selectedMediaType\", {\n        get: function () {\n            return this._mediaPlayer.selectedMediaType;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Media.customMediaPlayers = [\n        {\n            urlPatterns: [\n                /^(?:https?:\\/\\/)?(?:www.)?youtube.com\\/watch\\?(?=.*v=([\\w\\d-_]+))(?=(?:.*t=(\\d+))?).*/gi,\n                /^(?:https?:\\/\\/)?youtu.be\\/([\\w\\d-_]+)(?:\\?t=(\\d+))?/gi\n            ],\n            createMediaPlayer: function (matches) {\n                return new YouTubePlayer(matches, strings_1.Strings.defaults.youTubeVideoPlayer());\n            }\n        },\n        {\n            urlPatterns: [/^(?:https?:\\/\\/)?vimeo.com\\/([\\w\\d-_]+).*/gi],\n            createMediaPlayer: function (matches) {\n                return new VimeoPlayer(matches, strings_1.Strings.defaults.vimeoVideoPlayer());\n            }\n        },\n        {\n            urlPatterns: [/^(?:https?:\\/\\/)?(?:www.)?dailymotion.com\\/video\\/([\\w\\d-_]+).*/gi],\n            createMediaPlayer: function (matches) {\n                return new DailymotionPlayer(matches, strings_1.Strings.defaults.dailymotionVideoPlayer());\n            }\n        }\n    ];\n    //#region Schema\n    Media.sourcesProperty = new serialization_1.SerializableObjectCollectionProperty(serialization_1.Versions.v1_1, \"sources\", MediaSource);\n    Media.captionSourcesProperty = new serialization_1.SerializableObjectCollectionProperty(serialization_1.Versions.v1_6, \"captionSources\", CaptionSource);\n    Media.posterProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_1, \"poster\");\n    Media.altTextProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_1, \"altText\");\n    __decorate([\n        (0, serialization_1.property)(Media.sourcesProperty)\n    ], Media.prototype, \"sources\", void 0);\n    __decorate([\n        (0, serialization_1.property)(Media.captionSourcesProperty)\n    ], Media.prototype, \"captionSources\", void 0);\n    __decorate([\n        (0, serialization_1.property)(Media.posterProperty)\n    ], Media.prototype, \"poster\", void 0);\n    __decorate([\n        (0, serialization_1.property)(Media.altTextProperty)\n    ], Media.prototype, \"altText\", void 0);\n    return Media;\n}(CardElement));\nexports.Media = Media;\nvar InputEventType;\n(function (InputEventType) {\n    InputEventType[InputEventType[\"InitialRender\"] = 0] = \"InitialRender\";\n    InputEventType[InputEventType[\"MouseEnterOnCard\"] = 1] = \"MouseEnterOnCard\";\n    InputEventType[InputEventType[\"MouseLeaveOnCard\"] = 2] = \"MouseLeaveOnCard\";\n    InputEventType[InputEventType[\"FocusLeave\"] = 3] = \"FocusLeave\";\n})(InputEventType || (InputEventType = {}));\nvar Input = /** @class */ (function (_super) {\n    __extends(Input, _super);\n    function Input() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.inputStyle = Enums.InputStyle.Default;\n        return _this;\n    }\n    Input.prototype.getAllLabelIds = function () {\n        var labelIds = [];\n        if (this.labelledBy) {\n            labelIds.push(this.labelledBy);\n        }\n        if (this._renderedLabelElement) {\n            labelIds.push(this._renderedLabelElement.id);\n        }\n        if (this._renderedErrorMessageElement) {\n            labelIds.push(this._renderedErrorMessageElement.id);\n        }\n        return labelIds;\n    };\n    Input.prototype.updateInputControlAriaLabelledBy = function () {\n        if (this._renderedInputControlElement) {\n            var labelIds = this.getAllLabelIds();\n            if (labelIds.length > 0) {\n                this._renderedInputControlElement.setAttribute(\"aria-labelledby\", labelIds.join(\" \"));\n            }\n            else {\n                this._renderedInputControlElement.removeAttribute(\"aria-labelledby\");\n            }\n        }\n    };\n    Object.defineProperty(Input.prototype, \"isNullable\", {\n        get: function () {\n            return true;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Input.prototype, \"renderedInputControlElement\", {\n        get: function () {\n            return this._renderedInputControlElement;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Input.prototype, \"inputControlContainerElement\", {\n        get: function () {\n            return this._inputControlContainerElement;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Input.prototype.overrideInternalRender = function () {\n        var _this = this;\n        var hostConfig = this.hostConfig;\n        this._outerContainerElement = document.createElement(\"div\");\n        this._outerContainerElement.style.display = \"flex\";\n        if (this.labelPosition === Enums.InputLabelPosition.Inline) {\n            this._outerContainerElement.style.flexDirection = \"row\";\n        }\n        else {\n            this._outerContainerElement.style.flexDirection = \"column\";\n        }\n        var renderedInputControlId = Utils.generateUniqueId();\n        if (this.label) {\n            var labelRichTextBlock = new RichTextBlock();\n            labelRichTextBlock.setParent(this);\n            labelRichTextBlock.forElementId = renderedInputControlId;\n            var labelInline = new TextRun(this.label);\n            labelRichTextBlock.addInline(labelInline);\n            if (this.isRequired) {\n                labelInline.init(hostConfig.inputs.label.requiredInputs);\n                var isRequiredCueInline = new TextRun(hostConfig.inputs.label.requiredInputs.suffix);\n                isRequiredCueInline.color = hostConfig.inputs.label.requiredInputs.suffixColor;\n                isRequiredCueInline.ariaHidden = true;\n                labelRichTextBlock.addInline(isRequiredCueInline);\n            }\n            else {\n                labelInline.init(hostConfig.inputs.label.optionalInputs);\n            }\n            this._renderedLabelElement = labelRichTextBlock.render();\n            if (this._renderedLabelElement) {\n                this._renderedLabelElement.id = Utils.generateUniqueId();\n                if (this.labelPosition === Enums.InputLabelPosition.Inline) {\n                    // For inline label position: label should be in center of the div and no extra spacing needed\n                    this._renderedLabelElement.style.alignSelf = \"center\";\n                }\n                else {\n                    this._renderedLabelElement.style.marginBottom =\n                        hostConfig.getEffectiveSpacing(hostConfig.inputs.label.inputSpacing) + \"px\";\n                }\n                this._outerContainerElement.appendChild(this._renderedLabelElement);\n            }\n        }\n        this._inputControlContainerElement = document.createElement(\"div\");\n        this._inputControlContainerElement.className =\n            hostConfig.makeCssClassName(\"ac-input-container\");\n        this._inputControlContainerElement.style.display = \"flex\";\n        if (this.height === \"stretch\") {\n            this._inputControlContainerElement.style.alignItems = \"stretch\";\n            this._inputControlContainerElement.style.flex = \"1 1 auto\";\n        }\n        this._renderedInputControlElement = this.internalRender();\n        if (this._renderedInputControlElement) {\n            this._renderedInputControlElement.id = renderedInputControlId;\n            this._renderedInputControlElement.style.minWidth = \"0px\";\n            if (this.isNullable && this.isRequired) {\n                this._renderedInputControlElement.setAttribute(\"aria-required\", \"true\");\n                this._renderedInputControlElement.classList.add(hostConfig.makeCssClassName(\"ac-input-required\"));\n            }\n            this._inputControlContainerElement.appendChild(this._renderedInputControlElement);\n            this._outerContainerElement.appendChild(this._inputControlContainerElement);\n            if (this._renderedLabelElement && this.labelPosition === Enums.InputLabelPosition.Inline) {\n                if (!this.labelWidth) {\n                    var defaultLabelWidth = hostConfig.inputs.label.width;\n                    this._renderedLabelElement.style.width = defaultLabelWidth.toString() + \"%\";\n                    this._inputControlContainerElement.style.width = (100 - defaultLabelWidth) + \"%\";\n                }\n                else if (this.labelWidth.unit == Enums.SizeUnit.Weight) {\n                    var labelWidthInPercent = this.labelWidth.physicalSize;\n                    this._renderedLabelElement.style.width = labelWidthInPercent.toString() + \"%\";\n                    this._inputControlContainerElement.style.width = (100 - labelWidthInPercent).toString() + \"%\";\n                }\n                else if (this.labelWidth.unit == Enums.SizeUnit.Pixel) {\n                    var labelWidthInPixel = this.labelWidth.physicalSize;\n                    this._renderedLabelElement.style.width = labelWidthInPixel.toString() + \"px\";\n                }\n            }\n            this.updateVisualState(InputEventType.InitialRender);\n            if (this._renderedInputControlElement) {\n                this._renderedInputControlElement.onblur = function (ev) {\n                    _this.updateVisualState(InputEventType.FocusLeave);\n                };\n            }\n            this.updateInputControlAriaLabelledBy();\n            return this._outerContainerElement;\n        }\n        this.resetDirtyState();\n        return undefined;\n    };\n    Input.prototype.valueChanged = function () {\n        this.getRootElement().updateActionsEnabledState();\n        if (this.isValid()) {\n            this.resetValidationFailureCue();\n        }\n        if (this.onValueChanged) {\n            this.onValueChanged(this);\n        }\n        raiseInputValueChangedEvent(this);\n    };\n    Input.prototype.resetValidationFailureCue = function () {\n        if (this.renderedInputControlElement) {\n            if (this instanceof ChoiceSetInput && this.isDynamicTypeahead()) {\n                this.removeValidationFailureCue();\n            }\n            else {\n                this.renderedInputControlElement.classList.remove(this.hostConfig.makeCssClassName(\"ac-input-validation-failed\"));\n            }\n            this.updateInputControlAriaLabelledBy();\n            if (this._renderedErrorMessageElement) {\n                this._outerContainerElement.removeChild(this._renderedErrorMessageElement);\n                this._renderedErrorMessageElement = undefined;\n            }\n        }\n    };\n    Input.prototype.showValidationErrorMessage = function () {\n        if (this.renderedElement &&\n            this.errorMessage &&\n            shared_1.GlobalSettings.displayInputValidationErrors) {\n            var errorMessageTextBlock = new TextBlock();\n            errorMessageTextBlock.setParent(this);\n            errorMessageTextBlock.text = this.errorMessage;\n            errorMessageTextBlock.wrap = true;\n            errorMessageTextBlock.init(this.hostConfig.inputs.errorMessage);\n            this._renderedErrorMessageElement = errorMessageTextBlock.render();\n            if (this._renderedErrorMessageElement) {\n                this._renderedErrorMessageElement.id = Utils.generateUniqueId();\n                this._outerContainerElement.appendChild(this._renderedErrorMessageElement);\n                this.updateInputControlAriaLabelledBy();\n            }\n        }\n    };\n    Object.defineProperty(Input.prototype, \"allowRevealOnHoverStyle\", {\n        get: function () {\n            return this.hostConfig.inputs && this.hostConfig.inputs.allowRevealOnHoverStyle;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Input.prototype.shouldHideInputAdornersForRevealOnHover = function (input, eventType) {\n        // show/hide input adorners (date picker, time picker, select dropdown picker) with inputStyle RevealOnHover\n        // 1. intial render of card: hide input adorners\n        // 2. mouse hover on the card: show input adorners\n        // 3. mouse hover outside the card: hide input adorners unless input is still in focus state\n        // 4. input loses focus: hide the input adorners unless mouse is still hovering on the card\n        // check if input still has the focus\n        var isInputInFocus = input === document.activeElement;\n        // check if mouse is still on the card\n        var inputHoverClassName = this.hostConfig.makeCssClassName(\"ac-inputStyle-revealOnHover-onhover\");\n        var isMouseOverCard = input.classList.contains(inputHoverClassName);\n        var hideInputAdorners = (eventType === InputEventType.InitialRender) ||\n            (eventType === InputEventType.FocusLeave && !isMouseOverCard) ||\n            (eventType === InputEventType.MouseLeaveOnCard && !isInputInFocus);\n        return hideInputAdorners;\n    };\n    Input.prototype.updateVisualState = function (eventType) {\n        if (!this.allowRevealOnHoverStyle ||\n            !this._renderedInputControlElement ||\n            this.inputStyle !== Enums.InputStyle.RevealOnHover) {\n            return;\n        }\n        if (eventType === InputEventType.InitialRender) {\n            // on initial render, we will show input fields as read only view\n            this._renderedInputControlElement.classList.add(this.hostConfig.makeCssClassName(\"ac-inputStyle-revealOnHover-onrender\"));\n        }\n        else if (eventType === InputEventType.MouseEnterOnCard) {\n            // on hover on the card, we will reveal the inputs by showing borders etc\n            // ac-inputStyle-revealOnHover-onhover class is also used to identify if mouse is hovering on the card\n            this._renderedInputControlElement.classList.add(this.hostConfig.makeCssClassName(\"ac-inputStyle-revealOnHover-onhover\"));\n        }\n        else if (eventType === InputEventType.MouseLeaveOnCard) {\n            this._renderedInputControlElement.classList.remove(this.hostConfig.makeCssClassName(\"ac-inputStyle-revealOnHover-onhover\"));\n        }\n    };\n    Input.prototype.focus = function () {\n        if (this._renderedInputControlElement) {\n            this._renderedInputControlElement.focus();\n        }\n    };\n    Input.prototype.isValid = function () {\n        return true;\n    };\n    Input.prototype.isDirty = function () {\n        return this.value !== this._oldValue;\n    };\n    Input.prototype.resetDirtyState = function () {\n        this._oldValue = this.value;\n    };\n    Input.prototype.internalValidateProperties = function (context) {\n        _super.prototype.internalValidateProperties.call(this, context);\n        if (!this.id) {\n            context.addFailure(this, Enums.ValidationEvent.PropertyCantBeNull, strings_1.Strings.errors.inputsMustHaveUniqueId());\n        }\n        if (this.isRequired) {\n            if (!this.label) {\n                context.addFailure(this, Enums.ValidationEvent.RequiredInputsShouldHaveLabel, \"Required inputs should have a label\");\n            }\n            if (!this.errorMessage) {\n                context.addFailure(this, Enums.ValidationEvent.RequiredInputsShouldHaveErrorMessage, \"Required inputs should have an error message\");\n            }\n        }\n    };\n    Input.prototype.validateValue = function () {\n        this.resetValidationFailureCue();\n        var result = this.isRequired ? this.isSet() && this.isValid() : this.isValid();\n        if (!result && this.renderedInputControlElement) {\n            if (this instanceof ChoiceSetInput && this.isDynamicTypeahead()) {\n                this.showValidationFailureCue();\n            }\n            else {\n                this.renderedInputControlElement.classList.add(this.hostConfig.makeCssClassName(\"ac-input-validation-failed\"));\n            }\n            this.showValidationErrorMessage();\n        }\n        return result;\n    };\n    Input.prototype.getAllInputs = function (processActions) {\n        if (processActions === void 0) { processActions = true; }\n        return [this];\n    };\n    Input.prototype.render = function () {\n        var result = _super.prototype.render.call(this);\n        this.resetDirtyState();\n        return result;\n    };\n    Object.defineProperty(Input.prototype, \"isInteractive\", {\n        get: function () {\n            return true;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    //#region Schema\n    Input.labelProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_3, \"label\", true);\n    Input.isRequiredProperty = new serialization_1.BoolProperty(serialization_1.Versions.v1_3, \"isRequired\", false);\n    Input.errorMessageProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_3, \"errorMessage\", true);\n    Input.inputStyleProperty = new serialization_1.EnumProperty(serialization_1.Versions.v1_6, \"inputStyle\", Enums.InputStyle, Enums.InputStyle.Default, [\n        { value: Enums.InputStyle.RevealOnHover },\n        { value: Enums.InputStyle.Default }\n    ]);\n    Input.labelWidthProperty = new serialization_1.CustomProperty(serialization_1.Versions.v1_6, \"labelWidth\", function (sender, prop, source, context) {\n        var result = prop.defaultValue;\n        var value = source[prop.name];\n        var invalidLabelWidth = false;\n        if (typeof value === \"number\" && !isNaN(value)) {\n            result = new shared_1.SizeAndUnit(value, Enums.SizeUnit.Weight);\n            if (result.physicalSize < 0 || result.physicalSize > 100) {\n                invalidLabelWidth = true;\n            }\n        }\n        else if (typeof value === \"string\") {\n            try {\n                result = shared_1.SizeAndUnit.parse(value);\n            }\n            catch (e) {\n                invalidLabelWidth = true;\n            }\n        }\n        else {\n            invalidLabelWidth = true;\n        }\n        if (invalidLabelWidth) {\n            context.logParseEvent(sender, Enums.ValidationEvent.InvalidPropertyValue, strings_1.Strings.errors.invalidInputLabelWidth());\n            result = undefined;\n        }\n        return result;\n    }, function (sender, property, target, value, context) {\n        if (value instanceof shared_1.SizeAndUnit) {\n            if (value.unit === Enums.SizeUnit.Pixel) {\n                context.serializeValue(target, \"labelWidth\", value.physicalSize + \"px\");\n            }\n            else {\n                context.serializeNumber(target, \"labelWidth\", value.physicalSize);\n            }\n        }\n    }, undefined);\n    Input.labelPositionProperty = new serialization_1.EnumProperty(serialization_1.Versions.v1_6, \"labelPosition\", Enums.InputLabelPosition, Enums.InputLabelPosition.Above, [\n        { value: Enums.InputLabelPosition.Inline },\n        { value: Enums.InputLabelPosition.Above }\n    ]);\n    __decorate([\n        (0, serialization_1.property)(Input.labelProperty)\n    ], Input.prototype, \"label\", void 0);\n    __decorate([\n        (0, serialization_1.property)(Input.isRequiredProperty)\n    ], Input.prototype, \"isRequired\", void 0);\n    __decorate([\n        (0, serialization_1.property)(Input.errorMessageProperty)\n    ], Input.prototype, \"errorMessage\", void 0);\n    __decorate([\n        (0, serialization_1.property)(Input.inputStyleProperty)\n    ], Input.prototype, \"inputStyle\", void 0);\n    __decorate([\n        (0, serialization_1.property)(Input.labelWidthProperty)\n    ], Input.prototype, \"labelWidth\", void 0);\n    __decorate([\n        (0, serialization_1.property)(Input.labelPositionProperty)\n    ], Input.prototype, \"labelPosition\", void 0);\n    return Input;\n}(CardElement));\nexports.Input = Input;\nvar TextInput = /** @class */ (function (_super) {\n    __extends(TextInput, _super);\n    function TextInput() {\n        //#region Schema\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.isMultiline = false;\n        _this.style = Enums.InputTextStyle.Text;\n        return _this;\n    }\n    //#endregion\n    TextInput.prototype.setupInput = function (input) {\n        var _this = this;\n        input.style.flex = \"1 1 auto\";\n        input.tabIndex = this.isDesignMode() ? -1 : 0;\n        if (this.placeholder) {\n            input.placeholder = this.placeholder;\n            input.setAttribute(\"aria-label\", this.placeholder);\n        }\n        if (this.defaultValue) {\n            input.value = this.defaultValue;\n        }\n        if (this.maxLength && this.maxLength > 0) {\n            input.maxLength = this.maxLength;\n        }\n        input.oninput = function () {\n            _this.valueChanged();\n        };\n        input.onkeypress = function (e) {\n            // Ctrl+Enter pressed\n            if (e.ctrlKey &&\n                e.code === \"Enter\" &&\n                _this.inlineAction &&\n                _this.inlineAction.isEffectivelyEnabled()) {\n                _this.inlineAction.execute();\n            }\n        };\n    };\n    TextInput.prototype.internalRender = function () {\n        var result;\n        if (this.isMultiline && this.style !== Enums.InputTextStyle.Password) {\n            result = document.createElement(\"textarea\");\n            result.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-textInput\", \"ac-multiline\");\n            if (this.height === \"stretch\") {\n                result.style.height = \"initial\";\n            }\n        }\n        else {\n            result = document.createElement(\"input\");\n            result.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-textInput\");\n            result.type = Enums.InputTextStyle[this.style].toLowerCase();\n        }\n        this.setupInput(result);\n        return result;\n    };\n    TextInput.prototype.overrideInternalRender = function () {\n        var _this = this;\n        var renderedInputControl = _super.prototype.overrideInternalRender.call(this);\n        if (this.inlineAction) {\n            var button_1 = document.createElement(\"button\");\n            button_1.className = this.hostConfig.makeCssClassName(this.inlineAction.isEffectivelyEnabled()\n                ? \"ac-inlineActionButton\"\n                : \"ac-inlineActionButton-disabled\");\n            button_1.onclick = function (e) {\n                if (_this.inlineAction && _this.inlineAction.isEffectivelyEnabled()) {\n                    e.preventDefault();\n                    e.cancelBubble = true;\n                    _this.inlineAction.execute();\n                }\n            };\n            if (this.inlineAction.iconUrl) {\n                button_1.classList.add(\"iconOnly\");\n                var icon_1 = document.createElement(\"img\");\n                icon_1.style.height = \"100%\";\n                icon_1.setAttribute(\"role\", \"presentation\");\n                // The below trick is necessary as a workaround in Chrome where the icon is initially displayed\n                // at its native size then resized to 100% of the button's height. This cfreates an unpleasant\n                // flicker. On top of that, Chrome's flex implementation fails to prperly re-layout the button\n                // after the image has loaded and been gicven its final size. The below trick also fixes that.\n                icon_1.style.display = \"none\";\n                icon_1.onload = function () {\n                    icon_1.style.removeProperty(\"display\");\n                };\n                icon_1.onerror = function () {\n                    button_1.removeChild(icon_1);\n                    button_1.classList.remove(\"iconOnly\");\n                    button_1.classList.add(\"textOnly\");\n                    button_1.textContent =\n                        _this.inlineAction && _this.inlineAction.title\n                            ? _this.inlineAction.title\n                            : strings_1.Strings.defaults.inlineActionTitle();\n                };\n                icon_1.src = this.inlineAction.iconUrl;\n                button_1.appendChild(icon_1);\n                button_1.title = this.inlineAction.title\n                    ? this.inlineAction.title\n                    : strings_1.Strings.defaults.inlineActionTitle();\n            }\n            else {\n                button_1.classList.add(\"textOnly\");\n                button_1.textContent = this.inlineAction.title\n                    ? this.inlineAction.title\n                    : strings_1.Strings.defaults.inlineActionTitle();\n            }\n            this.inlineAction.setupElementForAccessibility(button_1, true);\n            button_1.style.marginLeft = \"8px\";\n            this.inputControlContainerElement.appendChild(button_1);\n        }\n        return renderedInputControl;\n    };\n    TextInput.prototype.updateVisualState = function (eventType) {\n        if (!this.allowRevealOnHoverStyle) {\n            return;\n        }\n        if (!(this.inlineAction || this.isMultiline)) {\n            _super.prototype.updateVisualState.call(this, eventType);\n        }\n    };\n    TextInput.prototype.getJsonTypeName = function () {\n        return \"Input.Text\";\n    };\n    TextInput.prototype.getAllActions = function () {\n        var result = _super.prototype.getAllActions.call(this);\n        if (this.inlineAction) {\n            result.push(this.inlineAction);\n        }\n        return result;\n    };\n    TextInput.prototype.getActionById = function (id) {\n        var result = _super.prototype.getActionById.call(this, id);\n        if (!result && this.inlineAction) {\n            result = this.inlineAction.getActionById(id);\n        }\n        return result;\n    };\n    TextInput.prototype.isSet = function () {\n        return this.value ? true : false;\n    };\n    TextInput.prototype.isValid = function () {\n        if (!this.value) {\n            return true;\n        }\n        if (this.regex) {\n            return new RegExp(this.regex, \"g\").test(this.value);\n        }\n        return true;\n    };\n    Object.defineProperty(TextInput.prototype, \"value\", {\n        get: function () {\n            if (this.renderedInputControlElement) {\n                if (this.isMultiline) {\n                    return this.renderedInputControlElement.value;\n                }\n                else {\n                    return this.renderedInputControlElement.value;\n                }\n            }\n            else {\n                return undefined;\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    TextInput.valueProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_0, \"value\");\n    TextInput.maxLengthProperty = new serialization_1.NumProperty(serialization_1.Versions.v1_0, \"maxLength\");\n    TextInput.isMultilineProperty = new serialization_1.BoolProperty(serialization_1.Versions.v1_0, \"isMultiline\", false);\n    TextInput.placeholderProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_0, \"placeholder\");\n    TextInput.styleProperty = new serialization_1.EnumProperty(serialization_1.Versions.v1_0, \"style\", Enums.InputTextStyle, Enums.InputTextStyle.Text, [\n        { value: Enums.InputTextStyle.Text },\n        { value: Enums.InputTextStyle.Tel },\n        { value: Enums.InputTextStyle.Url },\n        { value: Enums.InputTextStyle.Email },\n        { value: Enums.InputTextStyle.Password, targetVersion: serialization_1.Versions.v1_5 }\n    ]);\n    TextInput.inlineActionProperty = new ActionProperty(serialization_1.Versions.v1_0, \"inlineAction\", [\n        \"Action.ShowCard\"\n    ]);\n    TextInput.regexProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_3, \"regex\", true);\n    __decorate([\n        (0, serialization_1.property)(TextInput.valueProperty)\n    ], TextInput.prototype, \"defaultValue\", void 0);\n    __decorate([\n        (0, serialization_1.property)(TextInput.maxLengthProperty)\n    ], TextInput.prototype, \"maxLength\", void 0);\n    __decorate([\n        (0, serialization_1.property)(TextInput.isMultilineProperty)\n    ], TextInput.prototype, \"isMultiline\", void 0);\n    __decorate([\n        (0, serialization_1.property)(TextInput.placeholderProperty)\n    ], TextInput.prototype, \"placeholder\", void 0);\n    __decorate([\n        (0, serialization_1.property)(TextInput.styleProperty)\n    ], TextInput.prototype, \"style\", void 0);\n    __decorate([\n        (0, serialization_1.property)(TextInput.inlineActionProperty)\n    ], TextInput.prototype, \"inlineAction\", void 0);\n    __decorate([\n        (0, serialization_1.property)(TextInput.regexProperty)\n    ], TextInput.prototype, \"regex\", void 0);\n    return TextInput;\n}(Input));\nexports.TextInput = TextInput;\nvar ToggleInput = /** @class */ (function (_super) {\n    __extends(ToggleInput, _super);\n    function ToggleInput() {\n        //#region Schema\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.valueOn = \"true\";\n        _this.valueOff = \"false\";\n        _this.wrap = false;\n        return _this;\n    }\n    ToggleInput.prototype.updateInputControlAriaLabelledBy = function () {\n        if (this._checkboxInputElement) {\n            var joinedLabelIds = this.getAllLabelIds().join(\" \");\n            if (this._checkboxInputLabelElement && this._checkboxInputLabelElement.id) {\n                joinedLabelIds += \" \" + this._checkboxInputLabelElement.id;\n            }\n            if (joinedLabelIds) {\n                this._checkboxInputElement.setAttribute(\"aria-labelledby\", joinedLabelIds);\n            }\n            else {\n                this._checkboxInputElement.removeAttribute(\"aria-labelledby\");\n            }\n        }\n    };\n    ToggleInput.prototype.internalRender = function () {\n        var _this = this;\n        var element = document.createElement(\"div\");\n        element.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-toggleInput\");\n        element.style.width = \"100%\";\n        element.style.display = \"flex\";\n        element.style.alignItems = \"center\";\n        this._checkboxInputElement = document.createElement(\"input\");\n        this._checkboxInputElement.id = Utils.generateUniqueId();\n        this._checkboxInputElement.type = \"checkbox\";\n        this._checkboxInputElement.style.display = \"inline-block\";\n        this._checkboxInputElement.style.verticalAlign = \"middle\";\n        this._checkboxInputElement.style.margin = \"0\";\n        this._checkboxInputElement.style.flex = \"0 0 auto\";\n        if (this.title) {\n            this._checkboxInputElement.setAttribute(\"aria-label\", this.title);\n        }\n        if (this.isRequired) {\n            this._checkboxInputElement.setAttribute(\"aria-required\", \"true\");\n        }\n        this._checkboxInputElement.tabIndex = this.isDesignMode() ? -1 : 0;\n        if (this.defaultValue === this.valueOn) {\n            this._checkboxInputElement.checked = true;\n        }\n        this._oldCheckboxValue = this._checkboxInputElement.checked;\n        this._checkboxInputElement.onchange = function () {\n            _this.valueChanged();\n        };\n        Utils.appendChild(element, this._checkboxInputElement);\n        if (this.title || this.isDesignMode()) {\n            var label = new TextBlock();\n            label.setParent(this);\n            label.forElementId = this._checkboxInputElement.id;\n            label.hostConfig = this.hostConfig;\n            label.text = !this.title ? this.getJsonTypeName() : this.title;\n            label.useMarkdown = shared_1.GlobalSettings.useMarkdownInRadioButtonAndCheckbox;\n            label.wrap = this.wrap;\n            this._checkboxInputLabelElement = label.render();\n            if (this._checkboxInputLabelElement) {\n                this._checkboxInputLabelElement.id = Utils.generateUniqueId();\n                this._checkboxInputLabelElement.style.display = \"inline-block\";\n                this._checkboxInputLabelElement.style.flex = \"1 1 auto\";\n                this._checkboxInputLabelElement.style.marginLeft = \"6px\";\n                this._checkboxInputLabelElement.style.verticalAlign = \"middle\";\n                var spacerElement = document.createElement(\"div\");\n                spacerElement.style.width = \"6px\";\n                Utils.appendChild(element, spacerElement);\n                Utils.appendChild(element, this._checkboxInputLabelElement);\n            }\n        }\n        return element;\n    };\n    Object.defineProperty(ToggleInput.prototype, \"isNullable\", {\n        get: function () {\n            return false;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ToggleInput.prototype.updateVisualState = function (eventType) {\n    };\n    ToggleInput.prototype.getJsonTypeName = function () {\n        return \"Input.Toggle\";\n    };\n    ToggleInput.prototype.focus = function () {\n        if (this._checkboxInputElement) {\n            this._checkboxInputElement.focus();\n        }\n    };\n    ToggleInput.prototype.isSet = function () {\n        if (this.isRequired) {\n            return this.value === this.valueOn;\n        }\n        return this.value ? true : false;\n    };\n    ToggleInput.prototype.isDirty = function () {\n        return this._checkboxInputElement\n            ? this._checkboxInputElement.checked !== this._oldCheckboxValue\n            : false;\n    };\n    Object.defineProperty(ToggleInput.prototype, \"value\", {\n        get: function () {\n            if (this._checkboxInputElement) {\n                return this._checkboxInputElement.checked ? this.valueOn : this.valueOff;\n            }\n            else {\n                return undefined;\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ToggleInput.valueProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_0, \"value\");\n    ToggleInput.titleProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_0, \"title\");\n    ToggleInput.valueOnProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_0, \"valueOn\", true, undefined, \"true\", function (sender) {\n        return \"true\";\n    });\n    ToggleInput.valueOffProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_0, \"valueOff\", true, undefined, \"false\", function (sender) {\n        return \"false\";\n    });\n    ToggleInput.wrapProperty = new serialization_1.BoolProperty(serialization_1.Versions.v1_2, \"wrap\", false);\n    __decorate([\n        (0, serialization_1.property)(ToggleInput.valueProperty)\n    ], ToggleInput.prototype, \"defaultValue\", void 0);\n    __decorate([\n        (0, serialization_1.property)(ToggleInput.titleProperty)\n    ], ToggleInput.prototype, \"title\", void 0);\n    __decorate([\n        (0, serialization_1.property)(ToggleInput.valueOnProperty)\n    ], ToggleInput.prototype, \"valueOn\", void 0);\n    __decorate([\n        (0, serialization_1.property)(ToggleInput.valueOffProperty)\n    ], ToggleInput.prototype, \"valueOff\", void 0);\n    __decorate([\n        (0, serialization_1.property)(ToggleInput.wrapProperty)\n    ], ToggleInput.prototype, \"wrap\", void 0);\n    return ToggleInput;\n}(Input));\nexports.ToggleInput = ToggleInput;\nvar Choice = /** @class */ (function (_super) {\n    __extends(Choice, _super);\n    function Choice(title, value) {\n        var _this = _super.call(this) || this;\n        _this.title = title;\n        _this.value = value;\n        return _this;\n    }\n    //#endregion\n    Choice.prototype.getSchemaKey = function () {\n        return \"Choice\";\n    };\n    //#region Schema\n    Choice.titleProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_0, \"title\");\n    Choice.valueProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_0, \"value\");\n    __decorate([\n        (0, serialization_1.property)(Choice.titleProperty)\n    ], Choice.prototype, \"title\", void 0);\n    __decorate([\n        (0, serialization_1.property)(Choice.valueProperty)\n    ], Choice.prototype, \"value\", void 0);\n    return Choice;\n}(serialization_1.SerializableObject));\nexports.Choice = Choice;\n/**\n * DataQuery class is declared later in the file and derives from subsequent base classes\n * Hence, it cannot be used in ChoiceSetInput.\n * Refactor is needed to separate elements and actions in separate files.\n */\nvar ChoiceSetInputDataQuery = /** @class */ (function (_super) {\n    __extends(ChoiceSetInputDataQuery, _super);\n    function ChoiceSetInputDataQuery() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    //#endregion\n    ChoiceSetInputDataQuery.prototype.getSchemaKey = function () {\n        return \"choices.data\";\n    };\n    //#region Schema\n    ChoiceSetInputDataQuery.typeProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_6, \"type\", true, new RegExp(\"^Data.Query$\"));\n    ChoiceSetInputDataQuery.datasetProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_6, \"dataset\");\n    ChoiceSetInputDataQuery.countProperty = new serialization_1.NumProperty(serialization_1.Versions.v1_6, \"count\");\n    ChoiceSetInputDataQuery.skipProperty = new serialization_1.NumProperty(serialization_1.Versions.v1_6, \"skip\");\n    __decorate([\n        (0, serialization_1.property)(ChoiceSetInputDataQuery.typeProperty)\n    ], ChoiceSetInputDataQuery.prototype, \"type\", void 0);\n    __decorate([\n        (0, serialization_1.property)(ChoiceSetInputDataQuery.datasetProperty)\n    ], ChoiceSetInputDataQuery.prototype, \"dataset\", void 0);\n    __decorate([\n        (0, serialization_1.property)(ChoiceSetInputDataQuery.countProperty)\n    ], ChoiceSetInputDataQuery.prototype, \"count\", void 0);\n    __decorate([\n        (0, serialization_1.property)(ChoiceSetInputDataQuery.skipProperty)\n    ], ChoiceSetInputDataQuery.prototype, \"skip\", void 0);\n    return ChoiceSetInputDataQuery;\n}(serialization_1.SerializableObject));\nexports.ChoiceSetInputDataQuery = ChoiceSetInputDataQuery;\nvar ChoiceSetInput = /** @class */ (function (_super) {\n    __extends(ChoiceSetInput, _super);\n    function ChoiceSetInput() {\n        //#region Schema\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.isMultiSelect = false;\n        _this.wrap = false;\n        _this.choices = [];\n        return _this;\n    }\n    Object.defineProperty(ChoiceSetInput.prototype, \"isCompact\", {\n        get: function () {\n            return !this.style || this.style === \"compact\";\n        },\n        set: function (value) {\n            this.style = value ? undefined : \"expanded\";\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ChoiceSetInput.getUniqueCategoryName = function () {\n        var uniqueCategoryName = \"__ac-category\" + ChoiceSetInput._uniqueCategoryCounter;\n        ChoiceSetInput._uniqueCategoryCounter++;\n        return uniqueCategoryName;\n    };\n    ChoiceSetInput.prototype.isDynamicTypeahead = function () {\n        return (this.hostConfig.inputs.allowDynamicallyFilteredChoiceSet &&\n            !!this.choicesData &&\n            !!this.choicesData.dataset &&\n            this.choicesData.type === \"Data.Query\");\n    };\n    ChoiceSetInput.prototype.getFilterForDynamicSearch = function () {\n        var _a;\n        return (_a = this._textInput) === null || _a === void 0 ? void 0 : _a.value;\n    };\n    ChoiceSetInput.prototype.getDropdownElement = function () {\n        var _a;\n        return (_a = this._filteredChoiceSet) === null || _a === void 0 ? void 0 : _a.dropdown;\n    };\n    ChoiceSetInput.prototype.renderChoices = function (filter, fetchedChoices) {\n        var _a;\n        (_a = this._filteredChoiceSet) === null || _a === void 0 ? void 0 : _a.processResponse(filter, fetchedChoices);\n    };\n    ChoiceSetInput.prototype.showLoadingIndicator = function () {\n        var _a;\n        (_a = this._filteredChoiceSet) === null || _a === void 0 ? void 0 : _a.showLoadingIndicator();\n    };\n    ChoiceSetInput.prototype.removeLoadingIndicator = function () {\n        var _a;\n        (_a = this._filteredChoiceSet) === null || _a === void 0 ? void 0 : _a.removeLoadingIndicator();\n    };\n    ChoiceSetInput.prototype.showErrorIndicator = function (filter, error) {\n        var _a;\n        (_a = this._filteredChoiceSet) === null || _a === void 0 ? void 0 : _a.showErrorIndicator(filter, error);\n    };\n    ChoiceSetInput.prototype.showValidationFailureCue = function () {\n        var _a;\n        (_a = this._textInput) === null || _a === void 0 ? void 0 : _a.classList.add(this.hostConfig.makeCssClassName(\"ac-input-validation-failed\"));\n    };\n    ChoiceSetInput.prototype.removeValidationFailureCue = function () {\n        var _a;\n        (_a = this._textInput) === null || _a === void 0 ? void 0 : _a.classList.remove(this.hostConfig.makeCssClassName(\"ac-input-validation-failed\"));\n    };\n    ChoiceSetInput.prototype.createPlaceholderOptionWhenValueDoesNotExist = function () {\n        if (!this.value) {\n            var placeholderOption = document.createElement(\"option\");\n            placeholderOption.selected = true;\n            placeholderOption.disabled = true;\n            placeholderOption.hidden = true;\n            placeholderOption.value = \"\";\n            if (this.placeholder) {\n                placeholderOption.text = this.placeholder;\n            }\n            return placeholderOption;\n        }\n        return undefined;\n    };\n    // Make sure `aria-current` is applied to the currently-selected item\n    ChoiceSetInput.prototype.internalApplyAriaCurrent = function () {\n        if (this._selectElement) {\n            var options = this._selectElement.options;\n            if (options) {\n                for (var _i = 0, _a = Array.from(options); _i < _a.length; _i++) {\n                    var option = _a[_i];\n                    if (option.selected) {\n                        option.setAttribute(\"aria-current\", \"true\");\n                    }\n                    else {\n                        option.removeAttribute(\"aria-current\");\n                    }\n                }\n            }\n        }\n    };\n    ChoiceSetInput.prototype.renderCompoundInput = function (cssClassName, type, defaultValues) {\n        var _this = this;\n        var element = document.createElement(\"div\");\n        element.className = this.hostConfig.makeCssClassName(\"ac-input\", cssClassName);\n        element.style.width = \"100%\";\n        element.tabIndex = this.isDesignMode() ? -1 : 0;\n        this._toggleInputs = [];\n        this._labels = [];\n        for (var _i = 0, _a = this.choices; _i < _a.length; _i++) {\n            var choice = _a[_i];\n            var input = document.createElement(\"input\");\n            input.id = Utils.generateUniqueId();\n            input.type = type;\n            input.style.margin = \"0\";\n            input.style.display = \"inline-block\";\n            input.style.verticalAlign = \"middle\";\n            input.style.flex = \"0 0 auto\";\n            input.name = this.id ? this.id : this._uniqueCategoryName;\n            if (this.isRequired) {\n                input.setAttribute(\"aria-required\", \"true\");\n            }\n            input.tabIndex = this.isDesignMode() ? -1 : 0;\n            if (choice.value) {\n                input.value = choice.value;\n            }\n            if (choice.title) {\n                input.setAttribute(\"aria-label\", choice.title);\n            }\n            if (defaultValues && choice.value) {\n                if (defaultValues.indexOf(choice.value) >= 0) {\n                    input.checked = true;\n                }\n            }\n            input.onchange = function () {\n                _this.valueChanged();\n            };\n            this._toggleInputs.push(input);\n            var compoundInput = document.createElement(\"div\");\n            compoundInput.style.display = \"flex\";\n            compoundInput.style.alignItems = \"center\";\n            Utils.appendChild(compoundInput, input);\n            var label = new TextBlock();\n            label.setParent(this);\n            label.forElementId = input.id;\n            label.hostConfig = this.hostConfig;\n            label.text = choice.title ? choice.title : \"Choice \" + this._toggleInputs.length;\n            label.useMarkdown = shared_1.GlobalSettings.useMarkdownInRadioButtonAndCheckbox;\n            label.wrap = this.wrap;\n            var labelElement = label.render();\n            this._labels.push(labelElement);\n            if (labelElement) {\n                labelElement.id = Utils.generateUniqueId();\n                labelElement.style.display = \"inline-block\";\n                labelElement.style.flex = \"1 1 auto\";\n                labelElement.style.marginLeft = \"6px\";\n                labelElement.style.verticalAlign = \"middle\";\n                var spacerElement = document.createElement(\"div\");\n                spacerElement.style.width = \"6px\";\n                Utils.appendChild(compoundInput, spacerElement);\n                Utils.appendChild(compoundInput, labelElement);\n            }\n            Utils.appendChild(element, compoundInput);\n        }\n        return element;\n    };\n    ChoiceSetInput.prototype.updateInputControlAriaLabelledBy = function () {\n        if ((this.isMultiSelect || this.style === \"expanded\") &&\n            this._toggleInputs &&\n            this._labels) {\n            var labelIds = this.getAllLabelIds();\n            for (var i = 0; i < this._toggleInputs.length; i++) {\n                var joinedLabelIds = labelIds.join(\" \");\n                var label = this._labels[i];\n                if (label && label.id) {\n                    joinedLabelIds += \" \" + label.id;\n                }\n                if (joinedLabelIds) {\n                    this._toggleInputs[i].setAttribute(\"aria-labelledby\", joinedLabelIds);\n                }\n                else {\n                    this._toggleInputs[i].removeAttribute(\"aria-labelledby\");\n                }\n            }\n        }\n        else {\n            _super.prototype.updateInputControlAriaLabelledBy.call(this);\n        }\n    };\n    ChoiceSetInput.prototype.internalRender = function () {\n        var _this = this;\n        this._uniqueCategoryName = ChoiceSetInput.getUniqueCategoryName();\n        if (this.isDynamicTypeahead()) {\n            var filteredChoiceSet_1 = new FilteredChoiceSet(ChoiceSetInput._uniqueCategoryCounter, this.choices, this.hostConfig);\n            filteredChoiceSet_1.render();\n            if (filteredChoiceSet_1.textInput) {\n                this._textInput = filteredChoiceSet_1.textInput;\n                if (this.defaultValue) {\n                    this._textInput.value = this.defaultValue;\n                }\n                if (this.placeholder && !this._textInput.value) {\n                    this._textInput.placeholder = this.placeholder;\n                    this._textInput.setAttribute(\"aria-label\", this.placeholder);\n                }\n                this._textInput.tabIndex = this.isDesignMode() ? -1 : 0;\n                var onInputChangeEventHandler = Utils.debounce(function () {\n                    filteredChoiceSet_1.processChoices();\n                    _this.valueChanged();\n                    if (_this._textInput) {\n                        // Remove aria-label when value is not empty so narration software doesn't\n                        // read the placeholder\n                        if (_this.value) {\n                            _this._textInput.removeAttribute(\"placeholder\");\n                            _this._textInput.removeAttribute(\"aria-label\");\n                        }\n                        else if (_this.placeholder) {\n                            _this._textInput.placeholder = _this.placeholder;\n                            _this._textInput.setAttribute(\"aria-label\", _this.placeholder);\n                        }\n                    }\n                }, this.hostConfig.inputs.debounceTimeInMilliSeconds);\n                this._textInput.onclick = onInputChangeEventHandler;\n                this._textInput.oninput = onInputChangeEventHandler;\n            }\n            filteredChoiceSet_1.parent = this;\n            this._filteredChoiceSet = filteredChoiceSet_1;\n            return filteredChoiceSet_1.renderedElement;\n        }\n        else if (this.isMultiSelect) {\n            // Render as a list of toggle inputs\n            return this.renderCompoundInput(\"ac-choiceSetInput-multiSelect\", \"checkbox\", this.defaultValue\n                ? this.defaultValue.split(this.hostConfig.choiceSetInputValueSeparator)\n                : undefined);\n        }\n        else {\n            if (this.style === \"expanded\") {\n                // Render as a series of radio buttons\n                return this.renderCompoundInput(\"ac-choiceSetInput-expanded\", \"radio\", this.defaultValue ? [this.defaultValue] : undefined);\n            }\n            else if (this.style === \"filtered\") {\n                // Render as a text input coupled with a datalist\n                var inputContainer = document.createElement(\"div\");\n                inputContainer.style.width = \"100%\";\n                this._textInput = document.createElement(\"input\");\n                this._textInput.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-multichoiceInput\", \"ac-choiceSetInput-filtered\");\n                this._textInput.type = \"text\";\n                this._textInput.style.width = \"100%\";\n                this._textInput.oninput = function () {\n                    _this.valueChanged();\n                    if (_this._textInput) {\n                        // Remove aria-label when value is not empty so narration software doesn't\n                        // read the placeholder\n                        if (_this.value) {\n                            _this._textInput.removeAttribute(\"placeholder\");\n                            _this._textInput.removeAttribute(\"aria-label\");\n                        }\n                        else if (_this.placeholder) {\n                            _this._textInput.placeholder = _this.placeholder;\n                            _this._textInput.setAttribute(\"aria-label\", _this.placeholder);\n                        }\n                    }\n                };\n                if (this.defaultValue) {\n                    this._textInput.value = this.defaultValue;\n                }\n                if (this.placeholder && !this._textInput.value) {\n                    this._textInput.placeholder = this.placeholder;\n                    this._textInput.setAttribute(\"aria-label\", this.placeholder);\n                }\n                this._textInput.tabIndex = this.isDesignMode() ? -1 : 0;\n                var dataList = document.createElement(\"datalist\");\n                dataList.id = Utils.generateUniqueId();\n                for (var _i = 0, _a = this.choices; _i < _a.length; _i++) {\n                    var choice = _a[_i];\n                    var option = document.createElement(\"option\");\n                    // To fix https://stackoverflow.com/questions/29882361/show-datalist-labels-but-submit-the-actual-value\n                    // value is mapped to choice.title other than choice.value\n                    if (choice.title) {\n                        option.value = choice.title;\n                        option.setAttribute(\"aria-label\", choice.title);\n                    }\n                    option.tabIndex = this.isDesignMode() ? -1 : 0;\n                    dataList.appendChild(option);\n                }\n                this._textInput.setAttribute(\"list\", dataList.id);\n                inputContainer.append(this._textInput, dataList);\n                return inputContainer;\n            }\n            else {\n                // Render as a combo box\n                this._selectElement = document.createElement(\"select\");\n                this._selectElement.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-multichoiceInput\", \"ac-choiceSetInput-compact\");\n                this._selectElement.style.width = \"100%\";\n                this._selectElement.tabIndex = this.isDesignMode() ? -1 : 0;\n                var placeholderOption = this.createPlaceholderOptionWhenValueDoesNotExist();\n                Utils.appendChild(this._selectElement, placeholderOption);\n                for (var _b = 0, _c = this.choices; _b < _c.length; _b++) {\n                    var choice = _c[_b];\n                    var option = document.createElement(\"option\");\n                    option.value = choice.value;\n                    if (choice.title) {\n                        option.text = choice.title;\n                        option.setAttribute(\"aria-label\", choice.title);\n                    }\n                    option.tabIndex = this.isDesignMode() ? -1 : 0;\n                    if (choice.value === this.defaultValue) {\n                        option.selected = true;\n                    }\n                    Utils.appendChild(this._selectElement, option);\n                }\n                this._selectElement.onchange = function () {\n                    _this.internalApplyAriaCurrent();\n                    _this.valueChanged();\n                };\n                this.internalApplyAriaCurrent();\n                return this._selectElement;\n            }\n        }\n    };\n    ChoiceSetInput.prototype.updateVisualState = function (eventType) {\n        if (!this.allowRevealOnHoverStyle) {\n            return;\n        }\n        if (!this.isMultiSelect && this.isCompact) {\n            _super.prototype.updateVisualState.call(this, eventType);\n            if (this._selectElement && this.inputStyle === Enums.InputStyle.RevealOnHover) {\n                var hideDropDownPicker = this.shouldHideInputAdornersForRevealOnHover(this._selectElement, eventType);\n                if (hideDropDownPicker) {\n                    this._selectElement.style.appearance = \"none\";\n                    this._selectElement.classList.remove(this.hostConfig.makeCssClassName(\"ac-inputStyle-revealOnHover-onfocus\"));\n                }\n                else {\n                    this._selectElement.style.appearance = \"auto\";\n                    this._selectElement.classList.add(this.hostConfig.makeCssClassName(\"ac-inputStyle-revealOnHover-onfocus\"));\n                }\n            }\n        }\n    };\n    ChoiceSetInput.prototype.getJsonTypeName = function () {\n        return \"Input.ChoiceSet\";\n    };\n    ChoiceSetInput.prototype.focus = function () {\n        if (this._toggleInputs && (this.isMultiSelect || this.style === \"expanded\")) {\n            if (this._toggleInputs.length > 0) {\n                this._toggleInputs[0].focus();\n            }\n        }\n        else if (this._textInput) {\n            this._textInput.focus();\n        }\n        else {\n            _super.prototype.focus.call(this);\n        }\n    };\n    ChoiceSetInput.prototype.internalValidateProperties = function (context) {\n        _super.prototype.internalValidateProperties.call(this, context);\n        if (this.choices.length === 0) {\n            context.addFailure(this, Enums.ValidationEvent.CollectionCantBeEmpty, strings_1.Strings.errors.choiceSetMustHaveAtLeastOneChoice());\n        }\n        for (var _i = 0, _a = this.choices; _i < _a.length; _i++) {\n            var choice = _a[_i];\n            if (!choice.title || !choice.value) {\n                context.addFailure(this, Enums.ValidationEvent.PropertyCantBeNull, strings_1.Strings.errors.choiceSetChoicesMustHaveTitleAndValue());\n            }\n        }\n    };\n    ChoiceSetInput.prototype.isSet = function () {\n        return this.value ? true : false;\n    };\n    ChoiceSetInput.prototype.isValid = function () {\n        if (this._textInput) {\n            if (this.value === \"\" || this.value === this.placeholder) {\n                return true;\n            }\n            for (var _i = 0, _a = this.choices; _i < _a.length; _i++) {\n                var choice = _a[_i];\n                if (this.value === choice.value) {\n                    return true;\n                }\n            }\n            if (this.dynamicChoices) {\n                for (var _b = 0, _c = this.dynamicChoices; _b < _c.length; _b++) {\n                    var choice = _c[_b];\n                    if (this.value === choice) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n        return _super.prototype.isValid.call(this);\n    };\n    Object.defineProperty(ChoiceSetInput.prototype, \"value\", {\n        get: function () {\n            if (!this.isMultiSelect) {\n                if (this._selectElement) {\n                    return this._selectElement.selectedIndex > 0\n                        ? this._selectElement.value\n                        : undefined;\n                }\n                else if (this._textInput) {\n                    for (var _i = 0, _a = this.choices; _i < _a.length; _i++) {\n                        var choice = _a[_i];\n                        if (choice.title && this._textInput.value === choice.title) {\n                            return choice.value;\n                        }\n                    }\n                    return this._textInput.value;\n                }\n                else if (this._toggleInputs && this._toggleInputs.length > 0) {\n                    for (var _b = 0, _c = this._toggleInputs; _b < _c.length; _b++) {\n                        var toggleInput = _c[_b];\n                        if (toggleInput.checked) {\n                            return toggleInput.value;\n                        }\n                    }\n                }\n                return undefined;\n            }\n            else {\n                if (!this._toggleInputs || this._toggleInputs.length === 0) {\n                    return undefined;\n                }\n                var result = \"\";\n                for (var _d = 0, _f = this._toggleInputs; _d < _f.length; _d++) {\n                    var toggleInput = _f[_d];\n                    if (toggleInput.checked) {\n                        if (result !== \"\") {\n                            result += this.hostConfig.choiceSetInputValueSeparator;\n                        }\n                        result += toggleInput.value;\n                    }\n                }\n                return result ? result : undefined;\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ChoiceSetInput.prototype, \"dynamicChoices\", {\n        get: function () {\n            var _a;\n            return (_a = this._filteredChoiceSet) === null || _a === void 0 ? void 0 : _a.dynamicChoices;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ChoiceSetInput.valueProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_0, \"value\");\n    ChoiceSetInput.choicesProperty = new serialization_1.SerializableObjectCollectionProperty(serialization_1.Versions.v1_0, \"choices\", Choice);\n    ChoiceSetInput.choicesDataProperty = new serialization_1.SerializableObjectProperty(serialization_1.Versions.v1_6, \"choices.data\", ChoiceSetInputDataQuery);\n    ChoiceSetInput.styleProperty = new serialization_1.ValueSetProperty(serialization_1.Versions.v1_0, \"style\", [\n        { value: \"compact\" },\n        { value: \"expanded\" },\n        { value: \"filtered\", targetVersion: serialization_1.Versions.v1_5 }\n    ], \"compact\");\n    ChoiceSetInput.isMultiSelectProperty = new serialization_1.BoolProperty(serialization_1.Versions.v1_0, \"isMultiSelect\", false);\n    ChoiceSetInput.placeholderProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_0, \"placeholder\");\n    ChoiceSetInput.wrapProperty = new serialization_1.BoolProperty(serialization_1.Versions.v1_2, \"wrap\", false);\n    //#endregion\n    ChoiceSetInput._uniqueCategoryCounter = 0;\n    __decorate([\n        (0, serialization_1.property)(ChoiceSetInput.valueProperty)\n    ], ChoiceSetInput.prototype, \"defaultValue\", void 0);\n    __decorate([\n        (0, serialization_1.property)(ChoiceSetInput.styleProperty)\n    ], ChoiceSetInput.prototype, \"style\", void 0);\n    __decorate([\n        (0, serialization_1.property)(ChoiceSetInput.isMultiSelectProperty)\n    ], ChoiceSetInput.prototype, \"isMultiSelect\", void 0);\n    __decorate([\n        (0, serialization_1.property)(ChoiceSetInput.placeholderProperty)\n    ], ChoiceSetInput.prototype, \"placeholder\", void 0);\n    __decorate([\n        (0, serialization_1.property)(ChoiceSetInput.wrapProperty)\n    ], ChoiceSetInput.prototype, \"wrap\", void 0);\n    __decorate([\n        (0, serialization_1.property)(ChoiceSetInput.choicesProperty)\n    ], ChoiceSetInput.prototype, \"choices\", void 0);\n    __decorate([\n        (0, serialization_1.property)(ChoiceSetInput.choicesDataProperty)\n    ], ChoiceSetInput.prototype, \"choicesData\", void 0);\n    return ChoiceSetInput;\n}(Input));\nexports.ChoiceSetInput = ChoiceSetInput;\nvar FilteredChoiceSet = /** @class */ (function () {\n    function FilteredChoiceSet(choiceSetId, choices, hostConfig) {\n        this._choiceSetId = choiceSetId;\n        this._choices = choices;\n        this._dynamicChoices = [];\n        this._visibleChoiceCount = 0;\n        this._highlightedChoiceId = -1;\n        this._hostConfig = hostConfig;\n    }\n    FilteredChoiceSet.prototype.render = function () {\n        var _this = this;\n        var choiceSetContainer = document.createElement(\"div\");\n        choiceSetContainer.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-choiceSetInput-filtered-container\");\n        this._textInput = document.createElement(\"input\");\n        this._textInput.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-choiceSetInput-filtered-textbox\");\n        this._textInput.type = \"text\";\n        this._textInput.onkeydown = function (event) {\n            if (event.key === \"ArrowDown\") {\n                event.preventDefault();\n                _this.highlightChoice(_this._highlightedChoiceId + 1);\n            }\n            else if (event.key === \"ArrowUp\") {\n                event.preventDefault();\n                _this.highlightChoice(_this._highlightedChoiceId - 1);\n            }\n            else if (event.key === \"Enter\") {\n                var choice = document.getElementById(\"ac-choiceSetInput-\".concat(_this._choiceSetId, \"-choice-\").concat(_this._highlightedChoiceId));\n                choice === null || choice === void 0 ? void 0 : choice.click();\n            }\n        };\n        this._dropdown = document.createElement(\"div\");\n        this._dropdown.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-choiceSetInput-filtered-dropdown\");\n        choiceSetContainer.append(this._textInput, this._dropdown);\n        this._renderedElement = choiceSetContainer;\n    };\n    FilteredChoiceSet.prototype.createChoice = function (value, filter, id) {\n        var _this = this;\n        var choice = document.createElement(\"span\");\n        choice.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-choiceSetInput-choice\");\n        choice.id = \"ac-choiceSetInput-\".concat(this._choiceSetId, \"-choice-\").concat(id);\n        choice.innerHTML = value.replace(filter, \"<b>\".concat(filter, \"</b>\"));\n        choice.tabIndex = -1;\n        choice.onclick = function () {\n            choice.classList.remove(_this.hostConfig.makeCssClassName(\"ac-choiceSetInput-choice-highlighted\"));\n            _this._highlightedChoiceId = -1;\n            if (_this._textInput) {\n                _this._textInput.value = choice.innerText;\n                _this._textInput.focus();\n            }\n            if (_this._dropdown) {\n                _this._dropdown.classList.remove(_this.hostConfig.makeCssClassName(\"ac-choiceSetInput-filtered-dropdown-open\"));\n            }\n        };\n        choice.onmousemove = function () {\n            if (_this._highlightedChoiceId !== id) {\n                _this.highlightChoice(id, false);\n            }\n        };\n        return choice;\n    };\n    FilteredChoiceSet.prototype.highlightChoice = function (id, scrollIntoView) {\n        if (scrollIntoView === void 0) { scrollIntoView = true; }\n        if (this._visibleChoiceCount > 0) {\n            var currentHighlightedChoice = document.getElementById(\"ac-choiceSetInput-\".concat(this._choiceSetId, \"-choice-\").concat(this._highlightedChoiceId));\n            var nextHighlightedChoice = document.getElementById(\"ac-choiceSetInput-\".concat(this._choiceSetId, \"-choice-\").concat(id));\n            if (nextHighlightedChoice) {\n                currentHighlightedChoice === null || currentHighlightedChoice === void 0 ? void 0 : currentHighlightedChoice.classList.remove(this.hostConfig.makeCssClassName(\"ac-choiceSetInput-choice-highlighted\"));\n                nextHighlightedChoice.classList.add(this.hostConfig.makeCssClassName(\"ac-choiceSetInput-choice-highlighted\"));\n                if (scrollIntoView) {\n                    nextHighlightedChoice.scrollIntoView();\n                }\n                this._highlightedChoiceId = id;\n            }\n            else if (currentHighlightedChoice && this._highlightedChoiceId !== 0) {\n                this.highlightChoice(0);\n            }\n            else {\n                this.highlightChoice(this._visibleChoiceCount - 1);\n            }\n        }\n    };\n    FilteredChoiceSet.prototype.filterChoices = function () {\n        var _a, _b;\n        var filter = ((_a = this._textInput) === null || _a === void 0 ? void 0 : _a.value.toLowerCase().trim()) || \"\";\n        var choices = __spreadArray(__spreadArray([], this._choices, true), this._dynamicChoices, true);\n        for (var _i = 0, choices_1 = choices; _i < choices_1.length; _i++) {\n            var choice = choices_1[_i];\n            if (choice.title) {\n                var matchIndex = choice.title.toLowerCase().indexOf(filter);\n                if (matchIndex !== -1) {\n                    var matchedText = choice.title.substring(matchIndex, matchIndex + filter.length);\n                    var choiceContainer = this.createChoice(choice.title, matchedText, this._visibleChoiceCount++);\n                    (_b = this._dropdown) === null || _b === void 0 ? void 0 : _b.appendChild(choiceContainer);\n                }\n            }\n        }\n    };\n    FilteredChoiceSet.prototype.getStatusIndicator = function (error) {\n        if (error) {\n            if (!this._errorIndicator) {\n                var errorIndicator = document.createElement(\"div\");\n                errorIndicator.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-choiceSetInput-statusIndicator\", \"ac-choiceSetInput-errorIndicator\");\n                this._errorIndicator = errorIndicator;\n            }\n            this._errorIndicator.innerText = error;\n            return this._errorIndicator;\n        }\n        else {\n            if (!this._loadingIndicator) {\n                var loadingIndicator = document.createElement(\"div\");\n                loadingIndicator.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-choiceSetInput-statusIndicator\");\n                this._loadingIndicator = loadingIndicator;\n            }\n            this._loadingIndicator.innerText =\n                this._visibleChoiceCount === 0 ? \"Loading...\" : \"Loading more...\";\n            return this._loadingIndicator;\n        }\n    };\n    FilteredChoiceSet.prototype.resetDropdown = function () {\n        if (this._dropdown) {\n            Utils.clearElementChildren(this._dropdown);\n            this._visibleChoiceCount = 0;\n            this._highlightedChoiceId = -1;\n        }\n    };\n    FilteredChoiceSet.prototype.showDropdown = function () {\n        var _a;\n        if ((_a = this._dropdown) === null || _a === void 0 ? void 0 : _a.hasChildNodes()) {\n            this._dropdown.classList.add(this.hostConfig.makeCssClassName(\"ac-choiceSetInput-filtered-dropdown-open\"));\n        }\n    };\n    FilteredChoiceSet.prototype.processChoices = function () {\n        this.resetDropdown();\n        this.filterChoices();\n        this.showDropdown();\n    };\n    FilteredChoiceSet.prototype.processResponse = function (filter, fetchedChoices) {\n        var _a;\n        if (filter === ((_a = this._textInput) === null || _a === void 0 ? void 0 : _a.value)) {\n            this.resetDropdown();\n            this._dynamicChoices = fetchedChoices;\n            this.filterChoices();\n            if (this._visibleChoiceCount === 0) {\n                this.showErrorIndicator(filter, \"No results found\");\n            }\n        }\n    };\n    FilteredChoiceSet.prototype.showLoadingIndicator = function () {\n        var _a;\n        var loadingIndicator = this.getStatusIndicator();\n        (_a = this._dropdown) === null || _a === void 0 ? void 0 : _a.appendChild(loadingIndicator);\n        this.showDropdown();\n    };\n    FilteredChoiceSet.prototype.removeLoadingIndicator = function () {\n        var _a, _b;\n        if (this._loadingIndicator && ((_a = this._dropdown) === null || _a === void 0 ? void 0 : _a.contains(this._loadingIndicator))) {\n            (_b = this._dropdown) === null || _b === void 0 ? void 0 : _b.removeChild(this._loadingIndicator);\n        }\n    };\n    FilteredChoiceSet.prototype.showErrorIndicator = function (filter, error) {\n        var _a, _b;\n        if (filter === ((_a = this._textInput) === null || _a === void 0 ? void 0 : _a.value)) {\n            this.processChoices();\n            var errorIndicator = this.getStatusIndicator(error);\n            (_b = this._dropdown) === null || _b === void 0 ? void 0 : _b.appendChild(errorIndicator);\n            errorIndicator.scrollIntoView();\n        }\n    };\n    Object.defineProperty(FilteredChoiceSet.prototype, \"dynamicChoices\", {\n        get: function () {\n            var _a;\n            return (_a = this._dynamicChoices) === null || _a === void 0 ? void 0 : _a.map(function (choice) { return choice.title; });\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(FilteredChoiceSet.prototype, \"hostConfig\", {\n        get: function () {\n            if (this._hostConfig) {\n                return this._hostConfig;\n            }\n            else {\n                if (this.parent) {\n                    return this.parent.hostConfig;\n                }\n                else {\n                    return host_config_1.defaultHostConfig;\n                }\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(FilteredChoiceSet.prototype, \"parent\", {\n        get: function () {\n            return this._parent;\n        },\n        set: function (value) {\n            this._parent = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(FilteredChoiceSet.prototype, \"renderedElement\", {\n        get: function () {\n            return this._renderedElement;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(FilteredChoiceSet.prototype, \"textInput\", {\n        get: function () {\n            return this._textInput;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(FilteredChoiceSet.prototype, \"dropdown\", {\n        get: function () {\n            return this._dropdown;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return FilteredChoiceSet;\n}());\nexports.FilteredChoiceSet = FilteredChoiceSet;\nvar NumberInput = /** @class */ (function (_super) {\n    __extends(NumberInput, _super);\n    function NumberInput() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NumberInput.prototype.internalRender = function () {\n        var _this = this;\n        this._numberInputElement = document.createElement(\"input\");\n        this._numberInputElement.setAttribute(\"type\", \"number\");\n        if (this.min !== undefined) {\n            this._numberInputElement.setAttribute(\"min\", this.min.toString());\n        }\n        if (this.max !== undefined) {\n            this._numberInputElement.setAttribute(\"max\", this.max.toString());\n        }\n        this._numberInputElement.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-numberInput\");\n        this._numberInputElement.style.width = \"100%\";\n        this._numberInputElement.tabIndex = this.isDesignMode() ? -1 : 0;\n        if (this.defaultValue !== undefined) {\n            this._numberInputElement.valueAsNumber = this.defaultValue;\n        }\n        if (this.placeholder) {\n            this._numberInputElement.placeholder = this.placeholder;\n            this._numberInputElement.setAttribute(\"aria-label\", this.placeholder);\n        }\n        this._numberInputElement.oninput = function () {\n            _this.valueChanged();\n        };\n        return this._numberInputElement;\n    };\n    NumberInput.prototype.getJsonTypeName = function () {\n        return \"Input.Number\";\n    };\n    NumberInput.prototype.isSet = function () {\n        return this.value !== undefined && !isNaN(this.value);\n    };\n    NumberInput.prototype.isValid = function () {\n        if (this.value === undefined) {\n            return !this.isRequired;\n        }\n        var result = true;\n        if (this.min !== undefined) {\n            result = result && this.value >= this.min;\n        }\n        if (this.max !== undefined) {\n            result = result && this.value <= this.max;\n        }\n        return result;\n    };\n    Object.defineProperty(NumberInput.prototype, \"value\", {\n        get: function () {\n            return this._numberInputElement ? this._numberInputElement.valueAsNumber : undefined;\n        },\n        set: function (value) {\n            if (value && this._numberInputElement) {\n                this._numberInputElement.value = value.toString();\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    //#region Schema\n    NumberInput.valueProperty = new serialization_1.NumProperty(serialization_1.Versions.v1_0, \"value\");\n    NumberInput.placeholderProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_0, \"placeholder\");\n    NumberInput.minProperty = new serialization_1.NumProperty(serialization_1.Versions.v1_0, \"min\");\n    NumberInput.maxProperty = new serialization_1.NumProperty(serialization_1.Versions.v1_0, \"max\");\n    __decorate([\n        (0, serialization_1.property)(NumberInput.valueProperty)\n    ], NumberInput.prototype, \"defaultValue\", void 0);\n    __decorate([\n        (0, serialization_1.property)(NumberInput.minProperty)\n    ], NumberInput.prototype, \"min\", void 0);\n    __decorate([\n        (0, serialization_1.property)(NumberInput.maxProperty)\n    ], NumberInput.prototype, \"max\", void 0);\n    __decorate([\n        (0, serialization_1.property)(NumberInput.placeholderProperty)\n    ], NumberInput.prototype, \"placeholder\", void 0);\n    return NumberInput;\n}(Input));\nexports.NumberInput = NumberInput;\nvar DateInput = /** @class */ (function (_super) {\n    __extends(DateInput, _super);\n    function DateInput() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    DateInput.prototype.internalRender = function () {\n        var _this = this;\n        this._dateInputElement = document.createElement(\"input\");\n        this._dateInputElement.setAttribute(\"type\", \"date\");\n        if (this.min) {\n            this._dateInputElement.setAttribute(\"min\", this.min);\n        }\n        if (this.max) {\n            this._dateInputElement.setAttribute(\"max\", this.max);\n        }\n        if (this.placeholder) {\n            this._dateInputElement.placeholder = this.placeholder;\n            this._dateInputElement.setAttribute(\"aria-label\", this.placeholder);\n        }\n        this._dateInputElement.tabIndex = this.isDesignMode() ? -1 : 0;\n        this._dateInputElement.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-dateInput\");\n        this._dateInputElement.style.width = \"100%\";\n        this._dateInputElement.oninput = function () {\n            _this.valueChanged();\n        };\n        if (this.defaultValue) {\n            this._dateInputElement.value = this.defaultValue;\n        }\n        return this._dateInputElement;\n    };\n    DateInput.prototype.updateVisualState = function (eventType) {\n        if (!this.allowRevealOnHoverStyle) {\n            return;\n        }\n        _super.prototype.updateVisualState.call(this, eventType);\n        if (this._dateInputElement && this.inputStyle === Enums.InputStyle.RevealOnHover) {\n            var hideDatePicker = this.shouldHideInputAdornersForRevealOnHover(this._dateInputElement, eventType);\n            if (hideDatePicker) {\n                this._dateInputElement.classList.remove(this.hostConfig.makeCssClassName(\"ac-inputStyle-revealOnHover-onfocus\"));\n            }\n            else {\n                this._dateInputElement.classList.add(this.hostConfig.makeCssClassName(\"ac-inputStyle-revealOnHover-onfocus\"));\n            }\n            updateInputAdornersVisibility(this._dateInputElement, hideDatePicker /*hide*/);\n        }\n    };\n    DateInput.prototype.getJsonTypeName = function () {\n        return \"Input.Date\";\n    };\n    DateInput.prototype.isSet = function () {\n        return this.value ? true : false;\n    };\n    DateInput.prototype.isValid = function () {\n        if (!this.value) {\n            return !this.isRequired;\n        }\n        var valueAsDate = new Date(this.value);\n        var result = true;\n        if (this.min) {\n            var minDate = new Date(this.min);\n            result = result && valueAsDate >= minDate;\n        }\n        if (this.max) {\n            var maxDate = new Date(this.max);\n            result = result && valueAsDate <= maxDate;\n        }\n        return result;\n    };\n    Object.defineProperty(DateInput.prototype, \"value\", {\n        get: function () {\n            return this._dateInputElement ? this._dateInputElement.value : undefined;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    //#region Schema\n    DateInput.valueProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_0, \"value\");\n    DateInput.placeholderProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_0, \"placeholder\");\n    DateInput.minProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_0, \"min\");\n    DateInput.maxProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_0, \"max\");\n    __decorate([\n        (0, serialization_1.property)(DateInput.valueProperty)\n    ], DateInput.prototype, \"defaultValue\", void 0);\n    __decorate([\n        (0, serialization_1.property)(DateInput.minProperty)\n    ], DateInput.prototype, \"min\", void 0);\n    __decorate([\n        (0, serialization_1.property)(DateInput.maxProperty)\n    ], DateInput.prototype, \"max\", void 0);\n    __decorate([\n        (0, serialization_1.property)(DateInput.placeholderProperty)\n    ], DateInput.prototype, \"placeholder\", void 0);\n    return DateInput;\n}(Input));\nexports.DateInput = DateInput;\nvar TimeProperty = /** @class */ (function (_super) {\n    __extends(TimeProperty, _super);\n    function TimeProperty(targetVersion, name) {\n        var _this = _super.call(this, targetVersion, name, function (sender, prop, source, context) {\n            var value = source[prop.name];\n            if (typeof value === \"string\" && value && /^[0-9]{2}:[0-9]{2}$/.test(value)) {\n                return value;\n            }\n            return undefined;\n        }, function (sender, prop, target, value, context) {\n            context.serializeValue(target, prop.name, value);\n        }) || this;\n        _this.targetVersion = targetVersion;\n        _this.name = name;\n        return _this;\n    }\n    return TimeProperty;\n}(serialization_1.CustomProperty));\nexports.TimeProperty = TimeProperty;\nvar TimeInput = /** @class */ (function (_super) {\n    __extends(TimeInput, _super);\n    function TimeInput() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    TimeInput.convertTimeStringToDate = function (timeString) {\n        return new Date(\"1973-09-04T\" + timeString + \":00Z\");\n    };\n    TimeInput.prototype.internalRender = function () {\n        var _this = this;\n        this._timeInputElement = document.createElement(\"input\");\n        this._timeInputElement.setAttribute(\"type\", \"time\");\n        if (this.min) {\n            this._timeInputElement.setAttribute(\"min\", this.min);\n        }\n        if (this.max) {\n            this._timeInputElement.setAttribute(\"max\", this.max);\n        }\n        this._timeInputElement.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-timeInput\");\n        this._timeInputElement.style.width = \"100%\";\n        this._timeInputElement.oninput = function () {\n            _this.valueChanged();\n        };\n        if (this.placeholder) {\n            this._timeInputElement.placeholder = this.placeholder;\n            this._timeInputElement.setAttribute(\"aria-label\", this.placeholder);\n        }\n        this._timeInputElement.tabIndex = this.isDesignMode() ? -1 : 0;\n        if (this.defaultValue) {\n            this._timeInputElement.value = this.defaultValue;\n        }\n        return this._timeInputElement;\n    };\n    TimeInput.prototype.updateVisualState = function (eventType) {\n        if (!this.allowRevealOnHoverStyle) {\n            return;\n        }\n        _super.prototype.updateVisualState.call(this, eventType);\n        if (this._timeInputElement && this.inputStyle === Enums.InputStyle.RevealOnHover) {\n            var hideTimePicker = this.shouldHideInputAdornersForRevealOnHover(this._timeInputElement, eventType);\n            if (hideTimePicker) {\n                this._timeInputElement.classList.remove(this.hostConfig.makeCssClassName(\"ac-inputStyle-revealOnHover-onfocus\"));\n            }\n            else {\n                this._timeInputElement.classList.add(this.hostConfig.makeCssClassName(\"ac-inputStyle-revealOnHover-onfocus\"));\n            }\n            updateInputAdornersVisibility(this._timeInputElement, hideTimePicker /*hide*/);\n        }\n    };\n    TimeInput.prototype.getJsonTypeName = function () {\n        return \"Input.Time\";\n    };\n    TimeInput.prototype.isSet = function () {\n        return this.value ? true : false;\n    };\n    TimeInput.prototype.isValid = function () {\n        if (!this.value) {\n            return !this.isRequired;\n        }\n        var valueAsDate = TimeInput.convertTimeStringToDate(this.value);\n        var result = true;\n        if (this.min) {\n            var minDate = TimeInput.convertTimeStringToDate(this.min);\n            result = result && valueAsDate >= minDate;\n        }\n        if (this.max) {\n            var maxDate = TimeInput.convertTimeStringToDate(this.max);\n            result = result && valueAsDate <= maxDate;\n        }\n        return result;\n    };\n    Object.defineProperty(TimeInput.prototype, \"value\", {\n        get: function () {\n            return this._timeInputElement ? this._timeInputElement.value : undefined;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    //#region Schema\n    TimeInput.valueProperty = new TimeProperty(serialization_1.Versions.v1_0, \"value\");\n    TimeInput.placeholderProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_0, \"placeholder\");\n    TimeInput.minProperty = new TimeProperty(serialization_1.Versions.v1_0, \"min\");\n    TimeInput.maxProperty = new TimeProperty(serialization_1.Versions.v1_0, \"max\");\n    __decorate([\n        (0, serialization_1.property)(TimeInput.valueProperty)\n    ], TimeInput.prototype, \"defaultValue\", void 0);\n    __decorate([\n        (0, serialization_1.property)(TimeInput.minProperty)\n    ], TimeInput.prototype, \"min\", void 0);\n    __decorate([\n        (0, serialization_1.property)(TimeInput.maxProperty)\n    ], TimeInput.prototype, \"max\", void 0);\n    __decorate([\n        (0, serialization_1.property)(TimeInput.placeholderProperty)\n    ], TimeInput.prototype, \"placeholder\", void 0);\n    return TimeInput;\n}(Input));\nexports.TimeInput = TimeInput;\nvar Action = /** @class */ (function (_super) {\n    __extends(Action, _super);\n    function Action() {\n        //#region Schema\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.style = Enums.ActionStyle.Default;\n        _this.mode = Enums.ActionMode.Primary;\n        _this._state = 0 /* Normal */;\n        _this._isFocusable = true;\n        return _this;\n    }\n    //#endregion\n    Action.prototype.renderButtonContent = function () {\n        if (this.renderedElement) {\n            // Cache hostConfig for perf\n            var hostConfig = this.hostConfig;\n            var titleElement = document.createElement(\"div\");\n            titleElement.style.overflow = \"hidden\";\n            titleElement.style.textOverflow = \"ellipsis\";\n            if (!(hostConfig.actions.iconPlacement === Enums.ActionIconPlacement.AboveTitle ||\n                hostConfig.actions.allowTitleToWrap)) {\n                titleElement.style.whiteSpace = \"nowrap\";\n            }\n            if (this.title) {\n                titleElement.innerText = this.title;\n            }\n            if (!this.iconUrl) {\n                this.renderedElement.classList.add(\"noIcon\");\n                this.renderedElement.appendChild(titleElement);\n            }\n            else {\n                var iconElement = document.createElement(\"img\");\n                iconElement.src = this.iconUrl;\n                iconElement.style.width = hostConfig.actions.iconSize + \"px\";\n                iconElement.style.height = hostConfig.actions.iconSize + \"px\";\n                iconElement.style.flex = \"0 0 auto\";\n                if (hostConfig.actions.iconPlacement === Enums.ActionIconPlacement.AboveTitle) {\n                    this.renderedElement.classList.add(\"iconAbove\");\n                    this.renderedElement.style.flexDirection = \"column\";\n                    if (this.title) {\n                        iconElement.style.marginBottom = \"6px\";\n                    }\n                }\n                else {\n                    this.renderedElement.classList.add(\"iconLeft\");\n                    iconElement.style.maxHeight = \"100%\";\n                    if (this.title) {\n                        iconElement.style.marginRight = \"6px\";\n                    }\n                }\n                this.renderedElement.appendChild(iconElement);\n                this.renderedElement.appendChild(titleElement);\n            }\n        }\n    };\n    Action.prototype.getParentContainer = function () {\n        if (this.parent instanceof Container) {\n            return this.parent;\n        }\n        return this.parent ? this.parent.getParentContainer() : undefined;\n    };\n    Action.prototype.isDesignMode = function () {\n        var rootElement = this.getRootObject();\n        return rootElement instanceof CardElement && rootElement.isDesignMode();\n    };\n    Action.prototype.updateCssClasses = function () {\n        var _a, _b;\n        if (this.parent && this.renderedElement) {\n            var hostConfig = this.parent.hostConfig;\n            this.renderedElement.className = hostConfig.makeCssClassName(this.isEffectivelyEnabled() ? \"ac-pushButton\" : \"ac-pushButton-disabled\");\n            var parentContainer = this.getParentContainer();\n            if (parentContainer) {\n                var parentContainerStyle = parentContainer.getEffectiveStyle();\n                if (parentContainerStyle) {\n                    this.renderedElement.classList.add(\"style-\" + parentContainerStyle);\n                }\n            }\n            this.renderedElement.tabIndex = !this.isDesignMode() && this.isFocusable ? 0 : -1;\n            switch (this._state) {\n                case 0 /* Normal */:\n                    // No additional classes needed\n                    break;\n                case 1 /* Expanded */:\n                    this.renderedElement.classList.add(hostConfig.makeCssClassName(\"expanded\"));\n                    break;\n                case 2 /* Subdued */:\n                    this.renderedElement.classList.add(hostConfig.makeCssClassName(\"subdued\"));\n                    break;\n            }\n            if (this.style && this.isEffectivelyEnabled()) {\n                if (this.style === Enums.ActionStyle.Positive) {\n                    (_a = this.renderedElement.classList).add.apply(_a, hostConfig.makeCssClassNames(\"primary\", \"style-positive\"));\n                }\n                else {\n                    (_b = this.renderedElement.classList).add.apply(_b, hostConfig.makeCssClassNames(\"style-\" + this.style.toLowerCase()));\n                }\n            }\n        }\n    };\n    Action.prototype.getDefaultSerializationContext = function () {\n        return new SerializationContext();\n    };\n    Action.prototype.internalGetReferencedInputs = function () {\n        return {};\n    };\n    Action.prototype.internalPrepareForExecution = function (_inputs) {\n        // Do nothing in base implementation\n    };\n    Action.prototype.internalValidateInputs = function (referencedInputs) {\n        var result = [];\n        if (referencedInputs) {\n            for (var _i = 0, _a = Object.keys(referencedInputs); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var input = referencedInputs[key];\n                if (!input.validateValue()) {\n                    result.push(input);\n                }\n            }\n        }\n        return result;\n    };\n    Action.prototype.shouldSerialize = function (context) {\n        return context.actionRegistry.findByName(this.getJsonTypeName()) !== undefined;\n    };\n    Action.prototype.raiseExecuteActionEvent = function () {\n        if (this.onExecute) {\n            this.onExecute(this);\n        }\n        raiseExecuteActionEvent(this);\n    };\n    Action.prototype.internalAfterExecute = function () {\n        var rootObject = this.getRootObject();\n        if (rootObject instanceof CardElement) {\n            rootObject.updateActionsEnabledState();\n        }\n    };\n    Action.prototype.getHref = function () {\n        return \"\";\n    };\n    Action.prototype.getAriaRole = function () {\n        var ariaRole = this.getAriaRoleFromEnum();\n        return ariaRole !== null && ariaRole !== void 0 ? ariaRole : \"button\";\n    };\n    Action.prototype.getAriaRoleFromEnum = function () {\n        switch (this.role) {\n            case Enums.ActionRole.Button:\n                return \"button\";\n            case Enums.ActionRole.Link:\n                return \"link\";\n            case Enums.ActionRole.Menu:\n                return \"menu\";\n            case Enums.ActionRole.MenuItem:\n                return \"menuitem\";\n            case Enums.ActionRole.Tab:\n                return \"tab\";\n            default:\n                return undefined;\n        }\n    };\n    Action.prototype.setupElementForAccessibility = function (element, promoteTooltipToLabel) {\n        if (promoteTooltipToLabel === void 0) { promoteTooltipToLabel = false; }\n        element.tabIndex = this.isEffectivelyEnabled() && !this.isDesignMode() ? 0 : -1;\n        element.setAttribute(\"role\", this.getAriaRole());\n        if (element instanceof HTMLButtonElement) {\n            element.disabled = !this.isEffectivelyEnabled();\n        }\n        if (!this.isEffectivelyEnabled()) {\n            element.setAttribute(\"aria-disabled\", \"true\");\n        }\n        else {\n            element.removeAttribute(\"aria-disabled\");\n            element.classList.add(this.hostConfig.makeCssClassName(\"ac-selectable\"));\n        }\n        if (this.title) {\n            element.setAttribute(\"aria-label\", this.title);\n            element.title = this.title;\n        }\n        else {\n            element.removeAttribute(\"aria-label\");\n            element.removeAttribute(\"title\");\n        }\n        if (this.tooltip) {\n            if (promoteTooltipToLabel && !this.title) {\n                element.setAttribute(\"aria-label\", this.tooltip);\n            }\n            element.title = this.tooltip;\n        }\n    };\n    Action.prototype.parse = function (source, context) {\n        return _super.prototype.parse.call(this, source, context ? context : new SerializationContext());\n    };\n    Action.prototype.render = function () {\n        var _this = this;\n        var buttonElement = document.createElement(\"button\");\n        buttonElement.type = \"button\";\n        buttonElement.style.display = \"flex\";\n        buttonElement.style.alignItems = \"center\";\n        buttonElement.style.justifyContent = \"center\";\n        buttonElement.onclick = function (e) {\n            if (_this.isEffectivelyEnabled()) {\n                e.preventDefault();\n                e.cancelBubble = true;\n                _this.execute();\n            }\n        };\n        this._renderedElement = buttonElement;\n        this.renderButtonContent();\n        this.updateCssClasses();\n        this.setupElementForAccessibility(buttonElement);\n    };\n    Action.prototype.execute = function () {\n        if (this._actionCollection) {\n            this._actionCollection.actionExecuted(this);\n        }\n        this.raiseExecuteActionEvent();\n        this.internalAfterExecute();\n    };\n    Action.prototype.prepareForExecution = function () {\n        var referencedInputs = this.getReferencedInputs();\n        var invalidInputs = this.internalValidateInputs(referencedInputs);\n        if (invalidInputs.length > 0) {\n            invalidInputs[0].focus();\n            return false;\n        }\n        this.internalPrepareForExecution(referencedInputs);\n        return true;\n    };\n    Action.prototype.remove = function () {\n        if (this._actionCollection) {\n            return this._actionCollection.removeAction(this);\n        }\n        return false;\n    };\n    Action.prototype.getAllInputs = function (processActions) {\n        if (processActions === void 0) { processActions = true; }\n        return [];\n    };\n    Action.prototype.getAllActions = function () {\n        return [this];\n    };\n    Action.prototype.getResourceInformation = function () {\n        return this.iconUrl ? [{ url: this.iconUrl, mimeType: \"image\" }] : [];\n    };\n    Action.prototype.getActionById = function (id) {\n        return this.id === id ? this : undefined;\n    };\n    Action.prototype.getReferencedInputs = function () {\n        return this.internalGetReferencedInputs();\n    };\n    /**\n     * Validates the inputs associated with this action.\n     *\n     * @returns A list of inputs that failed validation, or an empty array if no input failed validation.\n     */\n    Action.prototype.validateInputs = function () {\n        return this.internalValidateInputs(this.getReferencedInputs());\n    };\n    Action.prototype.updateEnabledState = function () {\n        // Do nothing in base implementation\n    };\n    Action.prototype.isEffectivelyEnabled = function () {\n        return this.isEnabled;\n    };\n    Object.defineProperty(Action.prototype, \"isPrimary\", {\n        get: function () {\n            return this.style === Enums.ActionStyle.Positive;\n        },\n        set: function (value) {\n            if (value) {\n                this.style = Enums.ActionStyle.Positive;\n            }\n            else {\n                if (this.style === Enums.ActionStyle.Positive) {\n                    this.style = Enums.ActionStyle.Default;\n                }\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Action.prototype, \"hostConfig\", {\n        get: function () {\n            return this.parent ? this.parent.hostConfig : host_config_1.defaultHostConfig;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Action.prototype, \"parent\", {\n        get: function () {\n            return this._parent;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Action.prototype, \"state\", {\n        get: function () {\n            return this._state;\n        },\n        set: function (value) {\n            if (this._state !== value) {\n                this._state = value;\n                this.updateCssClasses();\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Action.prototype, \"isFocusable\", {\n        get: function () {\n            return this._isFocusable;\n        },\n        set: function (value) {\n            if (this._isFocusable !== value) {\n                this._isFocusable = value;\n                this.updateCssClasses();\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Action.titleProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_0, \"title\");\n    Action.iconUrlProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_1, \"iconUrl\");\n    Action.styleProperty = new serialization_1.ValueSetProperty(serialization_1.Versions.v1_2, \"style\", [\n        { value: Enums.ActionStyle.Default },\n        { value: Enums.ActionStyle.Positive },\n        { value: Enums.ActionStyle.Destructive }\n    ], Enums.ActionStyle.Default);\n    Action.modeProperty = new serialization_1.ValueSetProperty(serialization_1.Versions.v1_5, \"mode\", [{ value: Enums.ActionMode.Primary }, { value: Enums.ActionMode.Secondary }], Enums.ActionMode.Primary);\n    Action.tooltipProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_5, \"tooltip\");\n    Action.isEnabledProperty = new serialization_1.BoolProperty(serialization_1.Versions.v1_5, \"isEnabled\", true);\n    Action.roleProperty = new serialization_1.EnumProperty(serialization_1.Versions.v1_6, \"role\", Enums.ActionRole);\n    __decorate([\n        (0, serialization_1.property)(Action.titleProperty)\n    ], Action.prototype, \"title\", void 0);\n    __decorate([\n        (0, serialization_1.property)(Action.iconUrlProperty)\n    ], Action.prototype, \"iconUrl\", void 0);\n    __decorate([\n        (0, serialization_1.property)(Action.styleProperty)\n    ], Action.prototype, \"style\", void 0);\n    __decorate([\n        (0, serialization_1.property)(Action.modeProperty)\n    ], Action.prototype, \"mode\", void 0);\n    __decorate([\n        (0, serialization_1.property)(Action.tooltipProperty)\n    ], Action.prototype, \"tooltip\", void 0);\n    __decorate([\n        (0, serialization_1.property)(Action.isEnabledProperty)\n    ], Action.prototype, \"isEnabled\", void 0);\n    __decorate([\n        (0, serialization_1.property)(Action.roleProperty)\n    ], Action.prototype, \"role\", void 0);\n    return Action;\n}(card_object_1.CardObject));\nexports.Action = Action;\nvar SubmitActionBase = /** @class */ (function (_super) {\n    __extends(SubmitActionBase, _super);\n    function SubmitActionBase() {\n        //#region Schema\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.disabledUnlessAssociatedInputsChange = false;\n        //#endregion\n        _this._isPrepared = false;\n        _this._areReferencedInputsDirty = false;\n        return _this;\n    }\n    SubmitActionBase.prototype.internalGetReferencedInputs = function () {\n        var result = {};\n        if (this.associatedInputs !== \"none\") {\n            var current = this.parent;\n            var inputs = [];\n            while (current) {\n                inputs.push.apply(inputs, current.getAllInputs(false));\n                current = current.parent;\n            }\n            for (var _i = 0, inputs_1 = inputs; _i < inputs_1.length; _i++) {\n                var input = inputs_1[_i];\n                if (input.id) {\n                    result[input.id] = input;\n                }\n            }\n        }\n        return result;\n    };\n    SubmitActionBase.prototype.internalPrepareForExecution = function (inputs) {\n        if (this._originalData) {\n            this._processedData = JSON.parse(JSON.stringify(this._originalData));\n        }\n        else {\n            this._processedData = {};\n        }\n        if (this._processedData && inputs) {\n            for (var _i = 0, _a = Object.keys(inputs); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var input = inputs[key];\n                if (input.id && input.isSet()) {\n                    this._processedData[input.id] =\n                        typeof input.value === \"string\" ? input.value : input.value.toString();\n                }\n            }\n        }\n        this._isPrepared = true;\n    };\n    SubmitActionBase.prototype.internalAfterExecute = function () {\n        if (shared_1.GlobalSettings.resetInputsDirtyStateAfterActionExecution) {\n            this.resetReferencedInputsDirtyState();\n        }\n    };\n    SubmitActionBase.prototype.resetReferencedInputsDirtyState = function () {\n        var referencedInputs = this.getReferencedInputs();\n        this._areReferencedInputsDirty = false;\n        if (referencedInputs) {\n            for (var _i = 0, _a = Object.keys(referencedInputs); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var input = referencedInputs[key];\n                input.resetDirtyState();\n            }\n        }\n    };\n    SubmitActionBase.prototype.updateEnabledState = function () {\n        this._areReferencedInputsDirty = false;\n        var referencedInputs = this.getReferencedInputs();\n        if (referencedInputs) {\n            for (var _i = 0, _a = Object.keys(referencedInputs); _i < _a.length; _i++) {\n                var key = _a[_i];\n                var input = referencedInputs[key];\n                if (input.isDirty()) {\n                    this._areReferencedInputsDirty = true;\n                    break;\n                }\n            }\n        }\n        this.updateCssClasses();\n        if (this._renderedElement) {\n            this.setupElementForAccessibility(this._renderedElement);\n        }\n    };\n    SubmitActionBase.prototype.isEffectivelyEnabled = function () {\n        var result = _super.prototype.isEffectivelyEnabled.call(this);\n        return this.disabledUnlessAssociatedInputsChange\n            ? result && this._areReferencedInputsDirty\n            : result;\n    };\n    Object.defineProperty(SubmitActionBase.prototype, \"data\", {\n        get: function () {\n            return this._isPrepared ? this._processedData : this._originalData;\n        },\n        set: function (value) {\n            this._originalData = value;\n            this._isPrepared = false;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SubmitActionBase.dataProperty = new serialization_1.PropertyDefinition(serialization_1.Versions.v1_0, \"data\");\n    SubmitActionBase.associatedInputsProperty = new serialization_1.CustomProperty(serialization_1.Versions.v1_3, \"associatedInputs\", function (sender, prop, source, context) {\n        var value = source[prop.name];\n        if (value !== undefined && typeof value === \"string\") {\n            return value.toLowerCase() === \"none\" ? \"none\" : \"auto\";\n        }\n        return undefined;\n    }, function (sender, prop, target, value, context) {\n        context.serializeValue(target, prop.name, value);\n    });\n    SubmitActionBase.disabledUnlessAssociatedInputsChangeProperty = new serialization_1.BoolProperty(serialization_1.Versions.v1_6, \"disabledUnlessAssociatedInputsChange\", false);\n    __decorate([\n        (0, serialization_1.property)(SubmitActionBase.dataProperty)\n    ], SubmitActionBase.prototype, \"_originalData\", void 0);\n    __decorate([\n        (0, serialization_1.property)(SubmitActionBase.associatedInputsProperty)\n    ], SubmitActionBase.prototype, \"associatedInputs\", void 0);\n    __decorate([\n        (0, serialization_1.property)(SubmitActionBase.disabledUnlessAssociatedInputsChangeProperty)\n    ], SubmitActionBase.prototype, \"disabledUnlessAssociatedInputsChange\", void 0);\n    return SubmitActionBase;\n}(Action));\nexports.SubmitActionBase = SubmitActionBase;\nvar SubmitAction = /** @class */ (function (_super) {\n    __extends(SubmitAction, _super);\n    function SubmitAction() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    SubmitAction.prototype.getJsonTypeName = function () {\n        return SubmitAction.JsonTypeName;\n    };\n    // Note the \"weird\" way this field is declared is to work around a breaking\n    // change introduced in TS 3.1 wrt d.ts generation. DO NOT CHANGE\n    SubmitAction.JsonTypeName = \"Action.Submit\";\n    return SubmitAction;\n}(SubmitActionBase));\nexports.SubmitAction = SubmitAction;\nvar UniversalAction = /** @class */ (function (_super) {\n    __extends(UniversalAction, _super);\n    function UniversalAction() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return UniversalAction;\n}(SubmitActionBase));\nexports.UniversalAction = UniversalAction;\nvar ExecuteAction = /** @class */ (function (_super) {\n    __extends(ExecuteAction, _super);\n    function ExecuteAction() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    //#endregion\n    ExecuteAction.prototype.getJsonTypeName = function () {\n        return ExecuteAction.JsonTypeName;\n    };\n    // Note the \"weird\" way this field is declared is to work around a breaking\n    // change introduced in TS 3.1 wrt d.ts generation. DO NOT CHANGE\n    ExecuteAction.JsonTypeName = \"Action.Execute\";\n    //#region Schema\n    ExecuteAction.verbProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_4, \"verb\");\n    __decorate([\n        (0, serialization_1.property)(ExecuteAction.verbProperty)\n    ], ExecuteAction.prototype, \"verb\", void 0);\n    return ExecuteAction;\n}(UniversalAction));\nexports.ExecuteAction = ExecuteAction;\nvar DataQuery = /** @class */ (function (_super) {\n    __extends(DataQuery, _super);\n    function DataQuery() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    //#endregion\n    DataQuery.prototype.getJsonTypeName = function () {\n        return DataQuery.JsonTypeName;\n    };\n    Object.defineProperty(DataQuery.prototype, \"isStandalone\", {\n        get: function () {\n            return false;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    // Note the \"weird\" way this field is declared is to work around a breaking\n    // change introduced in TS 3.1 wrt d.ts generation. DO NOT CHANGE\n    DataQuery.JsonTypeName = \"Data.Query\";\n    //#region Schema\n    DataQuery.datasetProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_6, \"dataset\");\n    DataQuery.filterProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_6, \"filter\");\n    DataQuery.countProperty = new serialization_1.NumProperty(serialization_1.Versions.v1_6, \"count\");\n    DataQuery.skipProperty = new serialization_1.NumProperty(serialization_1.Versions.v1_6, \"skip\");\n    __decorate([\n        (0, serialization_1.property)(DataQuery.datasetProperty)\n    ], DataQuery.prototype, \"dataset\", void 0);\n    __decorate([\n        (0, serialization_1.property)(DataQuery.filterProperty)\n    ], DataQuery.prototype, \"filter\", void 0);\n    __decorate([\n        (0, serialization_1.property)(DataQuery.countProperty)\n    ], DataQuery.prototype, \"count\", void 0);\n    __decorate([\n        (0, serialization_1.property)(DataQuery.skipProperty)\n    ], DataQuery.prototype, \"skip\", void 0);\n    return DataQuery;\n}(UniversalAction));\nexports.DataQuery = DataQuery;\nvar OpenUrlAction = /** @class */ (function (_super) {\n    __extends(OpenUrlAction, _super);\n    function OpenUrlAction() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    OpenUrlAction.prototype.getJsonTypeName = function () {\n        return OpenUrlAction.JsonTypeName;\n    };\n    OpenUrlAction.prototype.getAriaRole = function () {\n        var ariaRole = this.getAriaRoleFromEnum();\n        return ariaRole !== null && ariaRole !== void 0 ? ariaRole : \"link\";\n    };\n    OpenUrlAction.prototype.internalValidateProperties = function (context) {\n        _super.prototype.internalValidateProperties.call(this, context);\n        if (!this.url) {\n            context.addFailure(this, Enums.ValidationEvent.PropertyCantBeNull, strings_1.Strings.errors.propertyMustBeSet(\"url\"));\n        }\n    };\n    OpenUrlAction.prototype.getHref = function () {\n        return this.url;\n    };\n    //#region Schema\n    OpenUrlAction.urlProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_0, \"url\");\n    //#endregion\n    // Note the \"weird\" way this field is declared is to work around a breaking\n    // change introduced in TS 3.1 wrt d.ts generation. DO NOT CHANGE\n    OpenUrlAction.JsonTypeName = \"Action.OpenUrl\";\n    __decorate([\n        (0, serialization_1.property)(OpenUrlAction.urlProperty)\n    ], OpenUrlAction.prototype, \"url\", void 0);\n    return OpenUrlAction;\n}(Action));\nexports.OpenUrlAction = OpenUrlAction;\nvar ToggleVisibilityAction = /** @class */ (function (_super) {\n    __extends(ToggleVisibilityAction, _super);\n    function ToggleVisibilityAction() {\n        //#region Schema\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.targetElements = {};\n        return _this;\n    }\n    ToggleVisibilityAction.prototype.updateAriaControlsAttribute = function () {\n        // apply aria labels to make it clear which elements this action will toggle\n        if (this.targetElements) {\n            var elementIds = Object.keys(this.targetElements);\n            if (this._renderedElement) {\n                if (elementIds.length > 0) {\n                    this._renderedElement.setAttribute(\"aria-controls\", elementIds.join(\" \"));\n                }\n                else {\n                    this._renderedElement.removeAttribute(\"aria-controls\");\n                }\n            }\n        }\n    };\n    ToggleVisibilityAction.prototype.internalValidateProperties = function (context) {\n        _super.prototype.internalValidateProperties.call(this, context);\n        if (!this.targetElements) {\n            context.addFailure(this, Enums.ValidationEvent.PropertyCantBeNull, strings_1.Strings.errors.propertyMustBeSet(\"targetElements\"));\n        }\n    };\n    ToggleVisibilityAction.prototype.getJsonTypeName = function () {\n        return ToggleVisibilityAction.JsonTypeName;\n    };\n    ToggleVisibilityAction.prototype.render = function () {\n        _super.prototype.render.call(this);\n        this.updateAriaControlsAttribute();\n    };\n    ToggleVisibilityAction.prototype.execute = function () {\n        _super.prototype.execute.call(this);\n        if (this.parent) {\n            for (var _i = 0, _a = Object.keys(this.targetElements); _i < _a.length; _i++) {\n                var elementId = _a[_i];\n                var targetElement = this.parent.getRootElement().getElementById(elementId);\n                if (targetElement) {\n                    if (typeof this.targetElements[elementId] === \"boolean\") {\n                        targetElement.isVisible = this.targetElements[elementId];\n                    }\n                    else {\n                        targetElement.isVisible = !targetElement.isVisible;\n                    }\n                }\n            }\n        }\n    };\n    ToggleVisibilityAction.prototype.addTargetElement = function (elementId, isVisible) {\n        if (isVisible === void 0) { isVisible = undefined; }\n        this.targetElements[elementId] = isVisible;\n        this.updateAriaControlsAttribute();\n    };\n    ToggleVisibilityAction.prototype.removeTargetElement = function (elementId) {\n        delete this.targetElements[elementId];\n        this.updateAriaControlsAttribute();\n    };\n    ToggleVisibilityAction.targetElementsProperty = new serialization_1.CustomProperty(serialization_1.Versions.v1_2, \"targetElements\", function (sender, prop, source, context) {\n        var result = {};\n        if (Array.isArray(source[prop.name])) {\n            for (var _i = 0, _a = source[prop.name]; _i < _a.length; _i++) {\n                var item = _a[_i];\n                if (typeof item === \"string\") {\n                    result[item] = undefined;\n                }\n                else if (typeof item === \"object\") {\n                    var elementId = item[\"elementId\"];\n                    if (typeof elementId === \"string\") {\n                        result[elementId] = Utils.parseBool(item[\"isVisible\"]);\n                    }\n                }\n            }\n        }\n        return result;\n    }, function (sender, prop, target, value, context) {\n        var targetElements = [];\n        for (var _i = 0, _a = Object.keys(value); _i < _a.length; _i++) {\n            var id = _a[_i];\n            if (typeof value[id] === \"boolean\") {\n                targetElements.push({\n                    elementId: id,\n                    isVisible: value[id]\n                });\n            }\n            else {\n                targetElements.push(id);\n            }\n        }\n        context.serializeArray(target, prop.name, targetElements);\n    }, {}, function (sender) {\n        return {};\n    });\n    //#endregion\n    // Note the \"weird\" way this field is declared is to work around a breaking\n    // change introduced in TS 3.1 wrt d.ts generation. DO NOT CHANGE\n    ToggleVisibilityAction.JsonTypeName = \"Action.ToggleVisibility\";\n    __decorate([\n        (0, serialization_1.property)(ToggleVisibilityAction.targetElementsProperty)\n    ], ToggleVisibilityAction.prototype, \"targetElements\", void 0);\n    return ToggleVisibilityAction;\n}(Action));\nexports.ToggleVisibilityAction = ToggleVisibilityAction;\nvar StringWithSubstitutionProperty = /** @class */ (function (_super) {\n    __extends(StringWithSubstitutionProperty, _super);\n    function StringWithSubstitutionProperty(targetVersion, name) {\n        var _this = _super.call(this, targetVersion, name, undefined, function () {\n            return new shared_1.StringWithSubstitutions();\n        }) || this;\n        _this.targetVersion = targetVersion;\n        _this.name = name;\n        return _this;\n    }\n    StringWithSubstitutionProperty.prototype.parse = function (sender, source, context) {\n        var result = new shared_1.StringWithSubstitutions();\n        result.set(Utils.parseString(source[this.name]));\n        return result;\n    };\n    StringWithSubstitutionProperty.prototype.toJSON = function (sender, target, value, context) {\n        context.serializeValue(target, this.name, value.getOriginal());\n    };\n    return StringWithSubstitutionProperty;\n}(serialization_1.PropertyDefinition));\nvar HttpHeader = /** @class */ (function (_super) {\n    __extends(HttpHeader, _super);\n    //#endregion\n    function HttpHeader(name, value) {\n        if (name === void 0) { name = \"\"; }\n        if (value === void 0) { value = \"\"; }\n        var _this = _super.call(this) || this;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    HttpHeader.prototype.getSchemaKey = function () {\n        return \"HttpHeader\";\n    };\n    HttpHeader.prototype.getReferencedInputs = function (inputs, referencedInputs) {\n        this._value.getReferencedInputs(inputs, referencedInputs);\n    };\n    HttpHeader.prototype.prepareForExecution = function (inputs) {\n        this._value.substituteInputValues(inputs, shared_1.ContentTypes.applicationXWwwFormUrlencoded);\n    };\n    Object.defineProperty(HttpHeader.prototype, \"value\", {\n        get: function () {\n            return this._value.get();\n        },\n        set: function (newValue) {\n            this._value.set(newValue);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    //#region Schema\n    HttpHeader.nameProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_0, \"name\");\n    HttpHeader.valueProperty = new StringWithSubstitutionProperty(serialization_1.Versions.v1_0, \"value\");\n    __decorate([\n        (0, serialization_1.property)(HttpHeader.nameProperty)\n    ], HttpHeader.prototype, \"name\", void 0);\n    __decorate([\n        (0, serialization_1.property)(HttpHeader.valueProperty)\n    ], HttpHeader.prototype, \"_value\", void 0);\n    return HttpHeader;\n}(serialization_1.SerializableObject));\nexports.HttpHeader = HttpHeader;\nvar HttpAction = /** @class */ (function (_super) {\n    __extends(HttpAction, _super);\n    function HttpAction() {\n        //#region Schema\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._ignoreInputValidation = false;\n        return _this;\n    }\n    HttpAction.prototype.internalGetReferencedInputs = function () {\n        var allInputs = this.parent ? this.parent.getRootElement().getAllInputs() : [];\n        var result = {};\n        this._url.getReferencedInputs(allInputs, result);\n        for (var _i = 0, _a = this.headers; _i < _a.length; _i++) {\n            var header = _a[_i];\n            header.getReferencedInputs(allInputs, result);\n        }\n        this._body.getReferencedInputs(allInputs, result);\n        return result;\n    };\n    HttpAction.prototype.internalPrepareForExecution = function (inputs) {\n        if (inputs) {\n            this._url.substituteInputValues(inputs, shared_1.ContentTypes.applicationXWwwFormUrlencoded);\n            var contentType = shared_1.ContentTypes.applicationJson;\n            for (var _i = 0, _a = this.headers; _i < _a.length; _i++) {\n                var header = _a[_i];\n                header.prepareForExecution(inputs);\n                if (header.name && header.name.toLowerCase() === \"content-type\") {\n                    contentType = header.value;\n                }\n            }\n            this._body.substituteInputValues(inputs, contentType);\n        }\n    };\n    HttpAction.prototype.getJsonTypeName = function () {\n        return HttpAction.JsonTypeName;\n    };\n    HttpAction.prototype.internalValidateProperties = function (context) {\n        _super.prototype.internalValidateProperties.call(this, context);\n        if (!this.url) {\n            context.addFailure(this, Enums.ValidationEvent.PropertyCantBeNull, strings_1.Strings.errors.propertyMustBeSet(\"url\"));\n        }\n        if (this.headers.length > 0) {\n            for (var _i = 0, _a = this.headers; _i < _a.length; _i++) {\n                var header = _a[_i];\n                if (!header.name) {\n                    context.addFailure(this, Enums.ValidationEvent.PropertyCantBeNull, strings_1.Strings.errors.actionHttpHeadersMustHaveNameAndValue());\n                }\n            }\n        }\n    };\n    Object.defineProperty(HttpAction.prototype, \"ignoreInputValidation\", {\n        get: function () {\n            return this._ignoreInputValidation;\n        },\n        set: function (value) {\n            this._ignoreInputValidation = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(HttpAction.prototype, \"url\", {\n        get: function () {\n            return this._url.get();\n        },\n        set: function (value) {\n            this._url.set(value);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(HttpAction.prototype, \"body\", {\n        get: function () {\n            return this._body.get();\n        },\n        set: function (value) {\n            this._body.set(value);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    HttpAction.urlProperty = new StringWithSubstitutionProperty(serialization_1.Versions.v1_0, \"url\");\n    HttpAction.bodyProperty = new StringWithSubstitutionProperty(serialization_1.Versions.v1_0, \"body\");\n    HttpAction.methodProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_0, \"method\");\n    HttpAction.headersProperty = new serialization_1.SerializableObjectCollectionProperty(serialization_1.Versions.v1_0, \"headers\", HttpHeader);\n    HttpAction.ignoreInputValidationProperty = new serialization_1.BoolProperty(serialization_1.Versions.v1_3, \"ignoreInputValidation\", false);\n    //#endregion\n    // Note the \"weird\" way this field is declared is to work around a breaking\n    // change introduced in TS 3.1 wrt d.ts generation. DO NOT CHANGE\n    HttpAction.JsonTypeName = \"Action.Http\";\n    __decorate([\n        (0, serialization_1.property)(HttpAction.urlProperty)\n    ], HttpAction.prototype, \"_url\", void 0);\n    __decorate([\n        (0, serialization_1.property)(HttpAction.bodyProperty)\n    ], HttpAction.prototype, \"_body\", void 0);\n    __decorate([\n        (0, serialization_1.property)(HttpAction.methodProperty)\n    ], HttpAction.prototype, \"method\", void 0);\n    __decorate([\n        (0, serialization_1.property)(HttpAction.headersProperty)\n    ], HttpAction.prototype, \"headers\", void 0);\n    __decorate([\n        (0, serialization_1.property)(HttpAction.ignoreInputValidationProperty)\n    ], HttpAction.prototype, \"_ignoreInputValidation\", void 0);\n    return HttpAction;\n}(Action));\nexports.HttpAction = HttpAction;\nvar ShowCardAction = /** @class */ (function (_super) {\n    __extends(ShowCardAction, _super);\n    function ShowCardAction() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.card = new InlineAdaptiveCard();\n        return _this;\n    }\n    ShowCardAction.prototype.updateCssClasses = function () {\n        _super.prototype.updateCssClasses.call(this);\n        if (this.renderedElement) {\n            var effectiveHostConfig = this.parent ? this.parent.hostConfig : host_config_1.defaultHostConfig;\n            this.renderedElement.classList.add(effectiveHostConfig.makeCssClassName(\"expandable\"));\n            this.renderedElement.setAttribute(\"aria-expanded\", (this.state === 1 /* Expanded */).toString());\n        }\n    };\n    ShowCardAction.prototype.internalParse = function (source, context) {\n        _super.prototype.internalParse.call(this, source, context);\n        var jsonCard = source[\"card\"];\n        if (jsonCard) {\n            this.card.parse(jsonCard, context);\n        }\n        else {\n            context.logParseEvent(this, Enums.ValidationEvent.PropertyCantBeNull, strings_1.Strings.errors.showCardMustHaveCard());\n        }\n    };\n    ShowCardAction.prototype.internalToJSON = function (target, context) {\n        _super.prototype.internalToJSON.call(this, target, context);\n        if (this.card) {\n            context.serializeValue(target, \"card\", this.card.toJSON(context));\n        }\n    };\n    ShowCardAction.prototype.raiseExecuteActionEvent = function () {\n        if (this.hostConfig.actions.showCard.actionMode === Enums.ShowCardActionMode.Popup) {\n            // Only raise the event in Popup mode.\n            _super.prototype.raiseExecuteActionEvent.call(this);\n        }\n    };\n    ShowCardAction.prototype.releaseDOMResources = function () {\n        _super.prototype.releaseDOMResources.call(this);\n        this.card.releaseDOMResources();\n    };\n    ShowCardAction.prototype.getJsonTypeName = function () {\n        return ShowCardAction.JsonTypeName;\n    };\n    ShowCardAction.prototype.internalValidateProperties = function (context) {\n        _super.prototype.internalValidateProperties.call(this, context);\n        this.card.internalValidateProperties(context);\n    };\n    ShowCardAction.prototype.setParent = function (value) {\n        _super.prototype.setParent.call(this, value);\n        this.card.setParent(value);\n    };\n    ShowCardAction.prototype.getAllInputs = function (processActions) {\n        if (processActions === void 0) { processActions = true; }\n        return this.card.getAllInputs(processActions);\n    };\n    ShowCardAction.prototype.getAllActions = function () {\n        var result = _super.prototype.getAllActions.call(this);\n        result.push.apply(result, this.card.getAllActions());\n        return result;\n    };\n    ShowCardAction.prototype.getResourceInformation = function () {\n        var result = _super.prototype.getResourceInformation.call(this);\n        result.push.apply(result, this.card.getResourceInformation());\n        return result;\n    };\n    ShowCardAction.prototype.getActionById = function (id) {\n        var result = _super.prototype.getActionById.call(this, id);\n        if (!result) {\n            result = this.card.getActionById(id);\n        }\n        return result;\n    };\n    // Note the \"weird\" way this field is declared is to work around a breaking\n    // change introduced in TS 3.1 wrt d.ts generation. DO NOT CHANGE\n    ShowCardAction.JsonTypeName = \"Action.ShowCard\";\n    return ShowCardAction;\n}(Action));\nexports.ShowCardAction = ShowCardAction;\nvar OverflowAction = /** @class */ (function (_super) {\n    __extends(OverflowAction, _super);\n    function OverflowAction(actions) {\n        var _this = _super.call(this) || this;\n        _this._actions = actions;\n        _this.title = strings_1.Strings.defaults.overflowButtonText();\n        _this.tooltip = strings_1.Strings.defaults.overflowButtonTooltip();\n        return _this;\n    }\n    OverflowAction.prototype.getActions = function () {\n        return this._actions;\n    };\n    OverflowAction.prototype.getAllActions = function () {\n        var result = _super.prototype.getAllActions.call(this);\n        result.push.apply(result, this._actions);\n        return result;\n    };\n    OverflowAction.prototype.getJsonTypeName = function () {\n        return ShowCardAction.JsonTypeName;\n    };\n    OverflowAction.prototype.execute = function () {\n        var _this = this;\n        var _a;\n        var shouldDisplayPopupMenu = !raiseDisplayOverflowActionMenuEvent(this, this.renderedElement);\n        if (shouldDisplayPopupMenu && this.renderedElement) {\n            var contextMenu_1 = new controls_1.PopupMenu();\n            contextMenu_1.hostConfig = this.hostConfig;\n            var _loop_2 = function (i) {\n                var menuItem = new controls_1.MenuItem(i.toString(), (_a = this_1._actions[i].title) !== null && _a !== void 0 ? _a : \"\");\n                menuItem.isEnabled = this_1._actions[i].isEnabled;\n                menuItem.onClick = function () {\n                    var actionToExecute = _this._actions[i];\n                    contextMenu_1.closePopup(false);\n                    if (actionToExecute.isEnabled) {\n                        actionToExecute.execute();\n                    }\n                };\n                contextMenu_1.items.add(menuItem);\n            };\n            var this_1 = this;\n            for (var i = 0; i < this._actions.length; i++) {\n                _loop_2(i);\n            }\n            contextMenu_1.onClose = function () {\n                var _a;\n                (_a = _this.renderedElement) === null || _a === void 0 ? void 0 : _a.setAttribute(\"aria-expanded\", \"false\");\n            };\n            this.renderedElement.setAttribute(\"aria-expanded\", \"true\");\n            contextMenu_1.popup(this.renderedElement);\n        }\n    };\n    OverflowAction.prototype.setupElementForAccessibility = function (element, promoteTooltipToLabel) {\n        if (promoteTooltipToLabel === void 0) { promoteTooltipToLabel = false; }\n        _super.prototype.setupElementForAccessibility.call(this, element, promoteTooltipToLabel);\n        element.setAttribute(\"aria-label\", strings_1.Strings.defaults.overflowButtonTooltip());\n        element.setAttribute(\"aria-expanded\", \"false\");\n    };\n    OverflowAction.JsonTypeName = \"Action.Overflow\";\n    return OverflowAction;\n}(Action));\nvar ActionCollection = /** @class */ (function () {\n    function ActionCollection(owner) {\n        this._items = [];\n        this._renderedActions = [];\n        this._owner = owner;\n    }\n    ActionCollection.prototype.isActionAllowed = function (action) {\n        var forbiddenTypes = this._owner.getForbiddenActionTypes();\n        if (forbiddenTypes) {\n            for (var _i = 0, forbiddenTypes_1 = forbiddenTypes; _i < forbiddenTypes_1.length; _i++) {\n                var forbiddenType = forbiddenTypes_1[_i];\n                if (action.constructor === forbiddenType) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    };\n    ActionCollection.prototype.refreshContainer = function () {\n        clearElement(this._actionCardContainer);\n        if (!this._actionCard) {\n            this._actionCardContainer.style.marginTop = \"0px\";\n            return;\n        }\n        this._actionCardContainer.style.marginTop =\n            this.renderedActionCount > 0\n                ? this._owner.hostConfig.actions.showCard.inlineTopMargin + \"px\"\n                : \"0px\";\n        var padding = this._owner.getEffectivePadding();\n        this._owner.getImmediateSurroundingPadding(padding);\n        var physicalPadding = this._owner.hostConfig.paddingDefinitionToSpacingDefinition(padding);\n        if (this._actionCard) {\n            this._actionCard.style.paddingLeft = physicalPadding.left + \"px\";\n            this._actionCard.style.paddingRight = physicalPadding.right + \"px\";\n            this._actionCard.style.marginLeft = \"-\" + physicalPadding.left + \"px\";\n            this._actionCard.style.marginRight = \"-\" + physicalPadding.right + \"px\";\n            if (physicalPadding.bottom !== 0 && !this._owner.isDesignMode()) {\n                this._actionCard.style.paddingBottom = physicalPadding.bottom + \"px\";\n                this._actionCard.style.marginBottom = \"-\" + physicalPadding.bottom + \"px\";\n            }\n            Utils.appendChild(this._actionCardContainer, this._actionCard);\n        }\n    };\n    ActionCollection.prototype.layoutChanged = function () {\n        this._owner.getRootElement().updateLayout();\n    };\n    ActionCollection.prototype.showActionCard = function (action, suppressStyle, raiseEvent) {\n        if (suppressStyle === void 0) { suppressStyle = false; }\n        if (raiseEvent === void 0) { raiseEvent = true; }\n        action.card.suppressStyle = suppressStyle;\n        // Always re-render a ShowCard action in design mode; reuse already rendered ShowCard (if available) otherwise\n        var renderedCard = action.card.renderedElement && !this._owner.isDesignMode()\n            ? action.card.renderedElement\n            : action.card.render();\n        this._actionCard = renderedCard;\n        this._expandedAction = action;\n        this.refreshContainer();\n        if (raiseEvent) {\n            this.layoutChanged();\n            raiseInlineCardExpandedEvent(action, true);\n        }\n    };\n    ActionCollection.prototype.collapseExpandedAction = function () {\n        for (var _i = 0, _a = this._renderedActions; _i < _a.length; _i++) {\n            var action = _a[_i];\n            action.state = 0 /* Normal */;\n        }\n        var previouslyExpandedAction = this._expandedAction;\n        this._expandedAction = undefined;\n        this._actionCard = undefined;\n        this.refreshContainer();\n        if (previouslyExpandedAction) {\n            this.layoutChanged();\n            raiseInlineCardExpandedEvent(previouslyExpandedAction, false);\n        }\n    };\n    ActionCollection.prototype.expandShowCardAction = function (action, raiseEvent) {\n        var _this = this;\n        var afterSelectedAction = false;\n        for (var _i = 0, _a = this._renderedActions; _i < _a.length; _i++) {\n            var renderedAction = _a[_i];\n            // Remove actions after selected action from tabOrder if the actions are oriented horizontally, to skip focus directly to expanded card\n            if (this._owner.hostConfig.actions.actionsOrientation == Enums.Orientation.Horizontal &&\n                afterSelectedAction) {\n                renderedAction.isFocusable = false;\n            }\n            if (renderedAction !== action) {\n                renderedAction.state = 2 /* Subdued */;\n            }\n            else {\n                renderedAction.state = 1 /* Expanded */;\n                afterSelectedAction = true;\n                if (renderedAction.renderedElement) {\n                    renderedAction.renderedElement.onblur = function (_e) {\n                        for (var _i = 0, _a = _this._renderedActions; _i < _a.length; _i++) {\n                            var ra = _a[_i];\n                            ra.isFocusable = true;\n                        }\n                    };\n                }\n            }\n        }\n        this.showActionCard(action, !(this._owner.isAtTheVeryLeft() && this._owner.isAtTheVeryRight()), raiseEvent);\n    };\n    ActionCollection.prototype.releaseDOMResources = function () {\n        for (var _i = 0, _a = this._renderedActions; _i < _a.length; _i++) {\n            var action = _a[_i];\n            action.releaseDOMResources();\n        }\n    };\n    ActionCollection.prototype.actionExecuted = function (action) {\n        if (!(action instanceof ShowCardAction)) {\n            this.collapseExpandedAction();\n        }\n        else {\n            if (action === this._expandedAction) {\n                this.collapseExpandedAction();\n            }\n            else if (this._owner.hostConfig.actions.showCard.actionMode ===\n                Enums.ShowCardActionMode.Inline) {\n                this.expandShowCardAction(action, true);\n            }\n        }\n    };\n    ActionCollection.prototype.parse = function (source, context) {\n        this.clear();\n        if (Array.isArray(source)) {\n            for (var _i = 0, source_1 = source; _i < source_1.length; _i++) {\n                var jsonAction = source_1[_i];\n                var forbiddenActions = [];\n                // If the action owner is a ContainerWithActions, we should check for forbidden actions\n                if (this._owner instanceof ContainerWithActions) {\n                    forbiddenActions = this._owner.getForbiddenActionNames();\n                }\n                var action = context.parseAction(this._owner, jsonAction, forbiddenActions, !this._owner.isDesignMode());\n                if (action) {\n                    this.addAction(action);\n                }\n            }\n        }\n    };\n    ActionCollection.prototype.toJSON = function (target, propertyName, context) {\n        context.serializeArray(target, propertyName, this._items);\n    };\n    ActionCollection.prototype.getActionAt = function (id) {\n        return this._items[id];\n    };\n    ActionCollection.prototype.getActionCount = function () {\n        return this._items.length;\n    };\n    ActionCollection.prototype.getActionById = function (id) {\n        var result = undefined;\n        for (var _i = 0, _a = this._items; _i < _a.length; _i++) {\n            var item = _a[_i];\n            result = item.getActionById(id);\n            if (result) {\n                break;\n            }\n        }\n        return result;\n    };\n    ActionCollection.prototype.validateProperties = function (context) {\n        if (this._owner.hostConfig.actions.maxActions &&\n            this._items.length > this._owner.hostConfig.actions.maxActions) {\n            context.addFailure(this._owner, Enums.ValidationEvent.TooManyActions, strings_1.Strings.errors.tooManyActions(this._owner.hostConfig.actions.maxActions));\n        }\n        if (this._items.length > 0 && !this._owner.hostConfig.supportsInteractivity) {\n            context.addFailure(this._owner, Enums.ValidationEvent.InteractivityNotAllowed, strings_1.Strings.errors.interactivityNotAllowed());\n        }\n        for (var _i = 0, _a = this._items; _i < _a.length; _i++) {\n            var item = _a[_i];\n            if (!this.isActionAllowed(item)) {\n                context.addFailure(this._owner, Enums.ValidationEvent.ActionTypeNotAllowed, strings_1.Strings.errors.actionTypeNotAllowed(item.getJsonTypeName()));\n            }\n            item.internalValidateProperties(context);\n        }\n    };\n    ActionCollection.prototype.render = function (orientation) {\n        // Cache hostConfig for better perf\n        var hostConfig = this._owner.hostConfig;\n        if (!hostConfig.supportsInteractivity) {\n            return undefined;\n        }\n        var element = document.createElement(\"div\");\n        var maxActions = hostConfig.actions.maxActions\n            ? Math.min(hostConfig.actions.maxActions, this._items.length)\n            : this._items.length;\n        this._actionCardContainer = document.createElement(\"div\");\n        this._renderedActions = [];\n        if (hostConfig.actions.preExpandSingleShowCardAction &&\n            maxActions === 1 &&\n            this._items[0] instanceof ShowCardAction &&\n            this.isActionAllowed(this._items[0])) {\n            this.showActionCard(this._items[0], true);\n            this._renderedActions.push(this._items[0]);\n        }\n        else {\n            var buttonStrip = document.createElement(\"div\");\n            buttonStrip.className = hostConfig.makeCssClassName(\"ac-actionSet\");\n            buttonStrip.style.display = \"flex\";\n            if (orientation === Enums.Orientation.Horizontal) {\n                buttonStrip.style.flexDirection = \"row\";\n                if (this._owner.horizontalAlignment &&\n                    hostConfig.actions.actionAlignment !== Enums.ActionAlignment.Stretch) {\n                    switch (this._owner.horizontalAlignment) {\n                        case Enums.HorizontalAlignment.Center:\n                            buttonStrip.style.justifyContent = \"center\";\n                            break;\n                        case Enums.HorizontalAlignment.Right:\n                            buttonStrip.style.justifyContent = \"flex-end\";\n                            break;\n                        default:\n                            buttonStrip.style.justifyContent = \"flex-start\";\n                            break;\n                    }\n                }\n                else {\n                    switch (hostConfig.actions.actionAlignment) {\n                        case Enums.ActionAlignment.Center:\n                            buttonStrip.style.justifyContent = \"center\";\n                            break;\n                        case Enums.ActionAlignment.Right:\n                            buttonStrip.style.justifyContent = \"flex-end\";\n                            break;\n                        default:\n                            buttonStrip.style.justifyContent = \"flex-start\";\n                            break;\n                    }\n                }\n            }\n            else {\n                buttonStrip.style.flexDirection = \"column\";\n                if (this._owner.horizontalAlignment &&\n                    hostConfig.actions.actionAlignment !== Enums.ActionAlignment.Stretch) {\n                    switch (this._owner.horizontalAlignment) {\n                        case Enums.HorizontalAlignment.Center:\n                            buttonStrip.style.alignItems = \"center\";\n                            break;\n                        case Enums.HorizontalAlignment.Right:\n                            buttonStrip.style.alignItems = \"flex-end\";\n                            break;\n                        default:\n                            buttonStrip.style.alignItems = \"flex-start\";\n                            break;\n                    }\n                }\n                else {\n                    switch (hostConfig.actions.actionAlignment) {\n                        case Enums.ActionAlignment.Center:\n                            buttonStrip.style.alignItems = \"center\";\n                            break;\n                        case Enums.ActionAlignment.Right:\n                            buttonStrip.style.alignItems = \"flex-end\";\n                            break;\n                        case Enums.ActionAlignment.Stretch:\n                            buttonStrip.style.alignItems = \"stretch\";\n                            break;\n                        default:\n                            buttonStrip.style.alignItems = \"flex-start\";\n                            break;\n                    }\n                }\n            }\n            var allowedActions = this._items.filter(this.isActionAllowed.bind(this));\n            var primaryActions_1 = [];\n            var secondaryActions_1 = [];\n            if (!this._owner.isDesignMode()) {\n                allowedActions.forEach(function (action) {\n                    return action.mode === Enums.ActionMode.Secondary\n                        ? secondaryActions_1.push(action)\n                        : primaryActions_1.push(action);\n                });\n                // If primaryActions.length > maxActions, extra actions are moved to overflow\n                var overflowPrimaryActions = primaryActions_1.splice(hostConfig.actions.maxActions);\n                if (shared_1.GlobalSettings.allowMoreThanMaxActionsInOverflowMenu) {\n                    secondaryActions_1.push.apply(secondaryActions_1, overflowPrimaryActions);\n                }\n                var shouldRenderOverflowActionButton = true;\n                if (secondaryActions_1.length > 0) {\n                    if (!this._overflowAction) {\n                        this._overflowAction = new OverflowAction(secondaryActions_1);\n                        this._overflowAction.setParent(this._owner);\n                        this._overflowAction[\"_actionCollection\"] = this;\n                    }\n                    var isRootAction = this._owner instanceof AdaptiveCard && !this._owner.parent;\n                    shouldRenderOverflowActionButton = !raiseRenderOverflowActionsEvent(this._overflowAction, isRootAction);\n                }\n                if (this._overflowAction && shouldRenderOverflowActionButton) {\n                    primaryActions_1.push(this._overflowAction);\n                }\n            }\n            else {\n                primaryActions_1 = allowedActions;\n            }\n            for (var i = 0; i < primaryActions_1.length; i++) {\n                var action = primaryActions_1[i];\n                action.render();\n                if (action.renderedElement) {\n                    if (hostConfig.actions.actionsOrientation === Enums.Orientation.Horizontal &&\n                        hostConfig.actions.actionAlignment === Enums.ActionAlignment.Stretch) {\n                        action.renderedElement.style.flex = \"0 1 100%\";\n                    }\n                    else {\n                        action.renderedElement.style.flex = \"0 1 auto\";\n                    }\n                    buttonStrip.appendChild(action.renderedElement);\n                    this._renderedActions.push(action);\n                    if (i < primaryActions_1.length - 1 && hostConfig.actions.buttonSpacing > 0) {\n                        var spacer = document.createElement(\"div\");\n                        if (orientation === Enums.Orientation.Horizontal) {\n                            spacer.style.flex = \"0 0 auto\";\n                            spacer.style.width = hostConfig.actions.buttonSpacing + \"px\";\n                        }\n                        else {\n                            spacer.style.height = hostConfig.actions.buttonSpacing + \"px\";\n                        }\n                        Utils.appendChild(buttonStrip, spacer);\n                    }\n                }\n            }\n            var buttonStripContainer = document.createElement(\"div\");\n            buttonStripContainer.style.overflow = \"hidden\";\n            buttonStripContainer.appendChild(buttonStrip);\n            Utils.appendChild(element, buttonStripContainer);\n        }\n        Utils.appendChild(element, this._actionCardContainer);\n        for (var _i = 0, _a = this._renderedActions; _i < _a.length; _i++) {\n            var renderedAction = _a[_i];\n            if (renderedAction.state === 1 /* Expanded */) {\n                this.expandShowCardAction(renderedAction, false);\n                break;\n            }\n        }\n        return this._renderedActions.length > 0 ? element : undefined;\n    };\n    ActionCollection.prototype.addAction = function (action) {\n        if (!action) {\n            throw new Error(\"The action parameter cannot be null.\");\n        }\n        if ((!action.parent || action.parent === this._owner) && this._items.indexOf(action) < 0) {\n            this._items.push(action);\n            if (!action.parent) {\n                action.setParent(this._owner);\n            }\n            action[\"_actionCollection\"] = this;\n        }\n        else {\n            throw new Error(strings_1.Strings.errors.actionAlreadyParented());\n        }\n    };\n    ActionCollection.prototype.removeAction = function (action) {\n        if (this.expandedAction && this._expandedAction === action) {\n            this.collapseExpandedAction();\n        }\n        var actionIndex = this._items.indexOf(action);\n        if (actionIndex >= 0) {\n            this._items.splice(actionIndex, 1);\n            action.setParent(undefined);\n            action[\"_actionCollection\"] = undefined;\n            for (var i = 0; i < this._renderedActions.length; i++) {\n                if (this._renderedActions[i] === action) {\n                    this._renderedActions.splice(i, 1);\n                    break;\n                }\n            }\n            return true;\n        }\n        return false;\n    };\n    ActionCollection.prototype.clear = function () {\n        this._items = [];\n        this._renderedActions = [];\n        this._expandedAction = undefined;\n    };\n    ActionCollection.prototype.getAllInputs = function (processActions) {\n        if (processActions === void 0) { processActions = true; }\n        var result = [];\n        if (processActions) {\n            for (var _i = 0, _a = this._items; _i < _a.length; _i++) {\n                var action = _a[_i];\n                result.push.apply(result, action.getAllInputs());\n            }\n        }\n        return result;\n    };\n    ActionCollection.prototype.getResourceInformation = function () {\n        var result = [];\n        for (var _i = 0, _a = this._items; _i < _a.length; _i++) {\n            var action = _a[_i];\n            result.push.apply(result, action.getResourceInformation());\n        }\n        return result;\n    };\n    Object.defineProperty(ActionCollection.prototype, \"renderedActionCount\", {\n        get: function () {\n            return this._renderedActions.length;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ActionCollection.prototype, \"expandedAction\", {\n        get: function () {\n            return this._expandedAction;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return ActionCollection;\n}());\nvar ActionSet = /** @class */ (function (_super) {\n    __extends(ActionSet, _super);\n    function ActionSet() {\n        var _this = _super.call(this) || this;\n        _this._actionCollection = new ActionCollection(_this);\n        return _this;\n    }\n    ActionSet.prototype.internalParse = function (source, context) {\n        _super.prototype.internalParse.call(this, source, context);\n        this._actionCollection.parse(source[\"actions\"], context);\n    };\n    ActionSet.prototype.internalToJSON = function (target, context) {\n        _super.prototype.internalToJSON.call(this, target, context);\n        this._actionCollection.toJSON(target, \"actions\", context);\n    };\n    ActionSet.prototype.internalRender = function () {\n        return this._actionCollection.render(this.orientation !== undefined\n            ? this.orientation\n            : this.hostConfig.actions.actionsOrientation);\n    };\n    ActionSet.prototype.releaseDOMResources = function () {\n        _super.prototype.releaseDOMResources.call(this);\n        this._actionCollection.releaseDOMResources();\n    };\n    ActionSet.prototype.isBleedingAtBottom = function () {\n        if (this._actionCollection.renderedActionCount === 0) {\n            return _super.prototype.isBleedingAtBottom.call(this);\n        }\n        else {\n            if (this._actionCollection.getActionCount() === 1) {\n                return (this._actionCollection.expandedAction !== undefined &&\n                    !this.hostConfig.actions.preExpandSingleShowCardAction);\n            }\n            else {\n                return this._actionCollection.expandedAction !== undefined;\n            }\n        }\n    };\n    ActionSet.prototype.getJsonTypeName = function () {\n        return \"ActionSet\";\n    };\n    ActionSet.prototype.getActionCount = function () {\n        return this._actionCollection.getActionCount();\n    };\n    ActionSet.prototype.getActionAt = function (index) {\n        if (index >= 0 && index < this.getActionCount()) {\n            return this._actionCollection.getActionAt(index);\n        }\n        else {\n            return _super.prototype.getActionAt.call(this, index);\n        }\n    };\n    ActionSet.prototype.getActionById = function (id) {\n        var result = this._actionCollection.getActionById(id);\n        return result ? result : _super.prototype.getActionById.call(this, id);\n    };\n    ActionSet.prototype.getAllActions = function () {\n        var result = _super.prototype.getAllActions.call(this);\n        for (var i = 0; i < this.getActionCount(); i++) {\n            var action = this.getActionAt(i);\n            if (action) {\n                result.push(action);\n            }\n        }\n        return result;\n    };\n    ActionSet.prototype.internalValidateProperties = function (context) {\n        _super.prototype.internalValidateProperties.call(this, context);\n        this._actionCollection.validateProperties(context);\n    };\n    ActionSet.prototype.addAction = function (action) {\n        this._actionCollection.addAction(action);\n    };\n    ActionSet.prototype.getAllInputs = function (processActions) {\n        if (processActions === void 0) { processActions = true; }\n        return processActions ? this._actionCollection.getAllInputs() : [];\n    };\n    ActionSet.prototype.getResourceInformation = function () {\n        return this._actionCollection.getResourceInformation();\n    };\n    /**\n     * @inheritdoc\n     */\n    ActionSet.prototype.findDOMNodeOwner = function (node) {\n        var target = undefined;\n        for (var i = 0; i < this.getActionCount(); i++) {\n            var action = this.getActionAt(i);\n            if (action) {\n                // recur through each Action\n                target = action.findDOMNodeOwner(node);\n                if (target) {\n                    return target;\n                }\n            }\n        }\n        // if not found in any Action, defer to parent implementation\n        return _super.prototype.findDOMNodeOwner.call(this, node);\n    };\n    ActionSet.prototype.getElementById = function (id) {\n        var result = _super.prototype.getElementById.call(this, id);\n        if (!result) {\n            result = this.getElementByIdFromAction(id);\n        }\n        return result;\n    };\n    Object.defineProperty(ActionSet.prototype, \"isInteractive\", {\n        get: function () {\n            return true;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    //#region Schema\n    ActionSet.orientationProperty = new serialization_1.EnumProperty(serialization_1.Versions.v1_1, \"orientation\", Enums.Orientation);\n    __decorate([\n        (0, serialization_1.property)(ActionSet.orientationProperty)\n    ], ActionSet.prototype, \"orientation\", void 0);\n    return ActionSet;\n}(CardElement));\nexports.ActionSet = ActionSet;\nvar ContainerStyleProperty = /** @class */ (function (_super) {\n    __extends(ContainerStyleProperty, _super);\n    function ContainerStyleProperty(targetVersion, name, defaultValue, onGetInitialValue) {\n        var _this = _super.call(this, targetVersion, name, [\n            { value: Enums.ContainerStyle.Default },\n            { value: Enums.ContainerStyle.Emphasis },\n            { targetVersion: serialization_1.Versions.v1_2, value: Enums.ContainerStyle.Accent },\n            { targetVersion: serialization_1.Versions.v1_2, value: Enums.ContainerStyle.Good },\n            { targetVersion: serialization_1.Versions.v1_2, value: Enums.ContainerStyle.Attention },\n            { targetVersion: serialization_1.Versions.v1_2, value: Enums.ContainerStyle.Warning }\n        ], defaultValue, onGetInitialValue) || this;\n        _this.targetVersion = targetVersion;\n        _this.name = name;\n        _this.defaultValue = defaultValue;\n        _this.onGetInitialValue = onGetInitialValue;\n        return _this;\n    }\n    return ContainerStyleProperty;\n}(serialization_1.ValueSetProperty));\nexports.ContainerStyleProperty = ContainerStyleProperty;\nvar StylableCardElementContainer = /** @class */ (function (_super) {\n    __extends(StylableCardElementContainer, _super);\n    function StylableCardElementContainer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(StylableCardElementContainer.prototype, \"style\", {\n        get: function () {\n            if (this.allowCustomStyle) {\n                var style = this.getValue(StylableCardElementContainer.styleProperty);\n                if (style && this.hostConfig.containerStyles.getStyleByName(style)) {\n                    return style;\n                }\n            }\n            return undefined;\n        },\n        set: function (value) {\n            this.setValue(StylableCardElementContainer.styleProperty, value);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(StylableCardElementContainer.prototype, \"allowCustomStyle\", {\n        //#endregion\n        get: function () {\n            return true;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(StylableCardElementContainer.prototype, \"hasExplicitStyle\", {\n        get: function () {\n            return this.getValue(StylableCardElementContainer.styleProperty) !== undefined;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    StylableCardElementContainer.prototype.applyBorder = function () {\n        // No border in base implementation\n    };\n    StylableCardElementContainer.prototype.applyBackground = function () {\n        if (this.renderedElement) {\n            var styleDefinition = this.hostConfig.containerStyles.getStyleByName(this.style, this.hostConfig.containerStyles.getStyleByName(this.defaultStyle));\n            if (styleDefinition.backgroundColor) {\n                var bgColor = Utils.stringToCssColor(styleDefinition.backgroundColor);\n                if (bgColor) {\n                    this.renderedElement.style.backgroundColor = bgColor;\n                }\n            }\n        }\n    };\n    StylableCardElementContainer.prototype.applyPadding = function () {\n        _super.prototype.applyPadding.call(this);\n        if (!this.renderedElement) {\n            return;\n        }\n        var physicalPadding = new shared_1.SpacingDefinition();\n        if (this.getEffectivePadding()) {\n            physicalPadding = this.hostConfig.paddingDefinitionToSpacingDefinition(this.getEffectivePadding());\n        }\n        this.renderedElement.style.paddingTop = physicalPadding.top + \"px\";\n        this.renderedElement.style.paddingRight = physicalPadding.right + \"px\";\n        this.renderedElement.style.paddingBottom = physicalPadding.bottom + \"px\";\n        this.renderedElement.style.paddingLeft = physicalPadding.left + \"px\";\n        if (this.isBleeding()) {\n            // Bleed into the first parent that does have padding\n            var padding = new shared_1.PaddingDefinition();\n            this.getImmediateSurroundingPadding(padding);\n            var surroundingPadding = this.hostConfig.paddingDefinitionToSpacingDefinition(padding);\n            this.renderedElement.style.marginRight = \"-\" + surroundingPadding.right + \"px\";\n            this.renderedElement.style.marginLeft = \"-\" + surroundingPadding.left + \"px\";\n            if (!this.isDesignMode()) {\n                this.renderedElement.style.marginTop = \"-\" + surroundingPadding.top + \"px\";\n                this.renderedElement.style.marginBottom = \"-\" + surroundingPadding.bottom + \"px\";\n            }\n            if (this.separatorElement &&\n                this.separatorOrientation === Enums.Orientation.Horizontal) {\n                this.separatorElement.style.marginLeft = \"-\" + surroundingPadding.left + \"px\";\n                this.separatorElement.style.marginRight = \"-\" + surroundingPadding.right + \"px\";\n            }\n        }\n        else {\n            this.renderedElement.style.marginRight = \"0\";\n            this.renderedElement.style.marginLeft = \"0\";\n            this.renderedElement.style.marginTop = \"0\";\n            this.renderedElement.style.marginBottom = \"0\";\n            if (this.separatorElement &&\n                this.separatorOrientation === Enums.Orientation.Horizontal) {\n                this.separatorElement.style.marginRight = \"0\";\n                this.separatorElement.style.marginLeft = \"0\";\n            }\n        }\n    };\n    StylableCardElementContainer.prototype.getHasBackground = function (ignoreBackgroundImages) {\n        if (ignoreBackgroundImages === void 0) { ignoreBackgroundImages = false; }\n        var currentElement = this.parent;\n        while (currentElement) {\n            var currentElementHasBackgroundImage = false;\n            if (ignoreBackgroundImages) {\n                currentElementHasBackgroundImage = false;\n            }\n            else {\n                currentElementHasBackgroundImage =\n                    currentElement instanceof Container\n                        ? currentElement.backgroundImage.isValid()\n                        : false;\n            }\n            if (currentElement instanceof StylableCardElementContainer) {\n                if (this.hasExplicitStyle &&\n                    (currentElement.getEffectiveStyle() !== this.getEffectiveStyle() ||\n                        currentElementHasBackgroundImage)) {\n                    return true;\n                }\n            }\n            currentElement = currentElement.parent;\n        }\n        return false;\n    };\n    StylableCardElementContainer.prototype.getDefaultPadding = function () {\n        return this.getHasBackground() || this.getHasBorder()\n            ? new shared_1.PaddingDefinition(Enums.Spacing.Padding, Enums.Spacing.Padding, Enums.Spacing.Padding, Enums.Spacing.Padding)\n            : _super.prototype.getDefaultPadding.call(this);\n    };\n    StylableCardElementContainer.prototype.internalValidateProperties = function (context) {\n        _super.prototype.internalValidateProperties.call(this, context);\n        var explicitStyle = this.getValue(StylableCardElementContainer.styleProperty);\n        if (explicitStyle !== undefined) {\n            var styleDefinition = this.hostConfig.containerStyles.getStyleByName(explicitStyle);\n            if (!styleDefinition) {\n                context.addFailure(this, Enums.ValidationEvent.InvalidPropertyValue, strings_1.Strings.errors.invalidPropertyValue(explicitStyle, \"style\"));\n            }\n        }\n    };\n    StylableCardElementContainer.prototype.render = function () {\n        var renderedElement = _super.prototype.render.call(this);\n        if (renderedElement && this.getHasBackground()) {\n            this.applyBackground();\n        }\n        this.applyBorder();\n        return renderedElement;\n    };\n    StylableCardElementContainer.prototype.getEffectiveStyle = function () {\n        var effectiveStyle = this.style;\n        return effectiveStyle ? effectiveStyle : _super.prototype.getEffectiveStyle.call(this);\n    };\n    //#region Schema\n    StylableCardElementContainer.styleProperty = new ContainerStyleProperty(serialization_1.Versions.v1_0, \"style\");\n    __decorate([\n        (0, serialization_1.property)(StylableCardElementContainer.styleProperty)\n    ], StylableCardElementContainer.prototype, \"style\", null);\n    return StylableCardElementContainer;\n}(CardElementContainer));\nexports.StylableCardElementContainer = StylableCardElementContainer;\nvar ContainerBase = /** @class */ (function (_super) {\n    __extends(ContainerBase, _super);\n    function ContainerBase() {\n        //#region Schema\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._bleed = false;\n        return _this;\n    }\n    //#endregion\n    ContainerBase.prototype.adjustRenderedElementSize = function (renderedElement) {\n        _super.prototype.adjustRenderedElementSize.call(this, renderedElement);\n        if (this.minPixelHeight) {\n            renderedElement.style.minHeight = this.minPixelHeight + \"px\";\n        }\n    };\n    ContainerBase.prototype.getHasExpandedAction = function () {\n        return false;\n    };\n    ContainerBase.prototype.getBleed = function () {\n        return this._bleed;\n    };\n    ContainerBase.prototype.setBleed = function (value) {\n        this._bleed = value;\n    };\n    Object.defineProperty(ContainerBase.prototype, \"renderedActionCount\", {\n        get: function () {\n            return 0;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ContainerBase.prototype.isBleeding = function () {\n        return (this.getHasBackground() || this.hostConfig.alwaysAllowBleed) && this.getBleed();\n    };\n    ContainerBase.bleedProperty = new serialization_1.BoolProperty(serialization_1.Versions.v1_2, \"bleed\", false);\n    ContainerBase.minHeightProperty = new serialization_1.PixelSizeProperty(serialization_1.Versions.v1_2, \"minHeight\");\n    __decorate([\n        (0, serialization_1.property)(ContainerBase.bleedProperty)\n    ], ContainerBase.prototype, \"_bleed\", void 0);\n    __decorate([\n        (0, serialization_1.property)(ContainerBase.minHeightProperty)\n    ], ContainerBase.prototype, \"minPixelHeight\", void 0);\n    return ContainerBase;\n}(StylableCardElementContainer));\nexports.ContainerBase = ContainerBase;\nvar BackgroundImage = /** @class */ (function (_super) {\n    __extends(BackgroundImage, _super);\n    function BackgroundImage() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    //#endregion\n    BackgroundImage.prototype.getSchemaKey = function () {\n        return \"BackgroundImage\";\n    };\n    BackgroundImage.prototype.internalParse = function (source, context) {\n        if (typeof source === \"string\") {\n            this.resetDefaultValues();\n            this.url = source;\n        }\n        else {\n            return _super.prototype.internalParse.call(this, source, context);\n        }\n    };\n    BackgroundImage.prototype.apply = function (element) {\n        if (this.url && element.renderedElement) {\n            element.renderedElement.style.backgroundImage =\n                \"url('\" +\n                    element.preProcessPropertyValue(BackgroundImage.urlProperty, this.url) +\n                    \"')\";\n            switch (this.fillMode) {\n                case Enums.FillMode.Repeat:\n                    element.renderedElement.style.backgroundRepeat = \"repeat\";\n                    break;\n                case Enums.FillMode.RepeatHorizontally:\n                    element.renderedElement.style.backgroundRepeat = \"repeat-x\";\n                    break;\n                case Enums.FillMode.RepeatVertically:\n                    element.renderedElement.style.backgroundRepeat = \"repeat-y\";\n                    break;\n                case Enums.FillMode.Cover:\n                default:\n                    element.renderedElement.style.backgroundRepeat = \"no-repeat\";\n                    element.renderedElement.style.backgroundSize = \"cover\";\n                    break;\n            }\n            switch (this.horizontalAlignment) {\n                case Enums.HorizontalAlignment.Left:\n                    break;\n                case Enums.HorizontalAlignment.Center:\n                    element.renderedElement.style.backgroundPositionX = \"center\";\n                    break;\n                case Enums.HorizontalAlignment.Right:\n                    element.renderedElement.style.backgroundPositionX = \"right\";\n                    break;\n            }\n            switch (this.verticalAlignment) {\n                case Enums.VerticalAlignment.Top:\n                    break;\n                case Enums.VerticalAlignment.Center:\n                    element.renderedElement.style.backgroundPositionY = \"center\";\n                    break;\n                case Enums.VerticalAlignment.Bottom:\n                    element.renderedElement.style.backgroundPositionY = \"bottom\";\n                    break;\n            }\n        }\n    };\n    BackgroundImage.prototype.isValid = function () {\n        return this.url ? true : false;\n    };\n    //#region Schema\n    BackgroundImage.urlProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_0, \"url\");\n    BackgroundImage.fillModeProperty = new serialization_1.EnumProperty(serialization_1.Versions.v1_2, \"fillMode\", Enums.FillMode, Enums.FillMode.Cover);\n    BackgroundImage.horizontalAlignmentProperty = new serialization_1.EnumProperty(serialization_1.Versions.v1_2, \"horizontalAlignment\", Enums.HorizontalAlignment, Enums.HorizontalAlignment.Left);\n    BackgroundImage.verticalAlignmentProperty = new serialization_1.EnumProperty(serialization_1.Versions.v1_2, \"verticalAlignment\", Enums.VerticalAlignment, Enums.VerticalAlignment.Top);\n    __decorate([\n        (0, serialization_1.property)(BackgroundImage.urlProperty)\n    ], BackgroundImage.prototype, \"url\", void 0);\n    __decorate([\n        (0, serialization_1.property)(BackgroundImage.fillModeProperty)\n    ], BackgroundImage.prototype, \"fillMode\", void 0);\n    __decorate([\n        (0, serialization_1.property)(BackgroundImage.horizontalAlignmentProperty)\n    ], BackgroundImage.prototype, \"horizontalAlignment\", void 0);\n    __decorate([\n        (0, serialization_1.property)(BackgroundImage.verticalAlignmentProperty)\n    ], BackgroundImage.prototype, \"verticalAlignment\", void 0);\n    return BackgroundImage;\n}(serialization_1.SerializableObject));\nexports.BackgroundImage = BackgroundImage;\nvar Container = /** @class */ (function (_super) {\n    __extends(Container, _super);\n    function Container() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        //#endregion\n        _this._items = [];\n        _this._renderedItems = [];\n        return _this;\n    }\n    Object.defineProperty(Container.prototype, \"backgroundImage\", {\n        get: function () {\n            return this.getValue(Container.backgroundImageProperty);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Container.prototype.insertItemAt = function (item, index, forceInsert) {\n        if (!item.parent || forceInsert) {\n            if (item.isStandalone) {\n                if (index < 0 || index >= this._items.length) {\n                    this._items.push(item);\n                }\n                else {\n                    this._items.splice(index, 0, item);\n                }\n                item.setParent(this);\n            }\n            else {\n                throw new Error(strings_1.Strings.errors.elementTypeNotStandalone(item.getJsonTypeName()));\n            }\n        }\n        else {\n            throw new Error(strings_1.Strings.errors.elementAlreadyParented());\n        }\n    };\n    Container.prototype.getItemsCollectionPropertyName = function () {\n        return \"items\";\n    };\n    Container.prototype.applyBackground = function () {\n        if (this.backgroundImage.isValid() && this.renderedElement) {\n            this.backgroundImage.apply(this);\n        }\n        _super.prototype.applyBackground.call(this);\n    };\n    Container.prototype.applyRTL = function (element) {\n        if (this.rtl !== undefined) {\n            element.dir = this.rtl ? \"rtl\" : \"ltr\";\n        }\n    };\n    Container.prototype.internalRender = function () {\n        this._renderedItems = [];\n        // Cache hostConfig to avoid walking the parent hierarchy several times\n        var hostConfig = this.hostConfig;\n        var element = document.createElement(\"div\");\n        this.applyRTL(element);\n        element.classList.add(hostConfig.makeCssClassName(\"ac-container\"));\n        element.style.display = \"flex\";\n        element.style.flexDirection = \"column\";\n        if (shared_1.GlobalSettings.useAdvancedCardBottomTruncation) {\n            // Forces the container to be at least as tall as its content.\n            //\n            // Fixes a quirk in Chrome where, for nested flex elements, the\n            // inner element's height would never exceed the outer element's\n            // height. This caused overflow truncation to break -- containers\n            // would always be measured as not overflowing, since their heights\n            // were constrained by their parents as opposed to truly reflecting\n            // the height of their content.\n            //\n            // See the \"Browser Rendering Notes\" section of this answer:\n            // https://stackoverflow.com/questions/36247140/why-doesnt-flex-item-shrink-past-content-size\n            element.style.minHeight = \"-webkit-min-content\";\n        }\n        switch (this.getEffectiveVerticalContentAlignment()) {\n            case Enums.VerticalAlignment.Center:\n                element.style.justifyContent = \"center\";\n                break;\n            case Enums.VerticalAlignment.Bottom:\n                element.style.justifyContent = \"flex-end\";\n                break;\n            default:\n                element.style.justifyContent = \"flex-start\";\n                break;\n        }\n        if (this._items.length > 0) {\n            for (var _i = 0, _a = this._items; _i < _a.length; _i++) {\n                var item = _a[_i];\n                var renderedItem = this.isElementAllowed(item) ? item.render() : undefined;\n                if (renderedItem) {\n                    if (this._renderedItems.length > 0 && item.separatorElement) {\n                        item.separatorElement.style.flex = \"0 0 auto\";\n                        Utils.appendChild(element, item.separatorElement);\n                    }\n                    Utils.appendChild(element, renderedItem);\n                    this._renderedItems.push(item);\n                }\n            }\n        }\n        else {\n            if (this.isDesignMode()) {\n                var placeholderElement = this.createPlaceholderElement();\n                placeholderElement.style.width = \"100%\";\n                placeholderElement.style.height = \"100%\";\n                element.appendChild(placeholderElement);\n            }\n        }\n        return element;\n    };\n    Container.prototype.truncateOverflow = function (maxHeight) {\n        if (this.renderedElement) {\n            // Add 1 to account for rounding differences between browsers\n            var boundary_1 = this.renderedElement.offsetTop + maxHeight + 1;\n            var handleElement_1 = function (cardElement) {\n                var elt = cardElement.renderedElement;\n                if (elt) {\n                    switch (Utils.getFitStatus(elt, boundary_1)) {\n                        case Enums.ContainerFitStatus.FullyInContainer:\n                            var sizeChanged = cardElement[\"resetOverflow\"]();\n                            // If the element's size changed after resetting content,\n                            // we have to check if it still fits fully in the card\n                            if (sizeChanged) {\n                                handleElement_1(cardElement);\n                            }\n                            break;\n                        case Enums.ContainerFitStatus.Overflowing:\n                            var containerMaxHeight = boundary_1 - elt.offsetTop;\n                            cardElement[\"handleOverflow\"](containerMaxHeight);\n                            break;\n                        case Enums.ContainerFitStatus.FullyOutOfContainer:\n                            cardElement[\"handleOverflow\"](0);\n                            break;\n                    }\n                }\n            };\n            for (var _i = 0, _a = this._items; _i < _a.length; _i++) {\n                var item = _a[_i];\n                handleElement_1(item);\n            }\n            return true;\n        }\n        return false;\n    };\n    Container.prototype.undoOverflowTruncation = function () {\n        for (var _i = 0, _a = this._items; _i < _a.length; _i++) {\n            var item = _a[_i];\n            item[\"resetOverflow\"]();\n        }\n    };\n    Container.prototype.getHasBackground = function (ignoreBackgroundImages) {\n        if (ignoreBackgroundImages === void 0) { ignoreBackgroundImages = false; }\n        var result = ignoreBackgroundImages ? false : this.backgroundImage.isValid();\n        return result || _super.prototype.getHasBackground.call(this, ignoreBackgroundImages);\n    };\n    Container.prototype.internalParse = function (source, context) {\n        _super.prototype.internalParse.call(this, source, context);\n        this.clear();\n        this.setShouldFallback(false);\n        var jsonItems = source[this.getItemsCollectionPropertyName()];\n        if (Array.isArray(jsonItems)) {\n            for (var _i = 0, jsonItems_1 = jsonItems; _i < jsonItems_1.length; _i++) {\n                var item = jsonItems_1[_i];\n                var element = context.parseElement(this, item, this.forbiddenChildElements(), !this.isDesignMode());\n                if (element) {\n                    this.insertItemAt(element, -1, true);\n                }\n            }\n        }\n    };\n    Container.prototype.internalToJSON = function (target, context) {\n        _super.prototype.internalToJSON.call(this, target, context);\n        var collectionPropertyName = this.getItemsCollectionPropertyName();\n        context.serializeArray(target, collectionPropertyName, this._items);\n    };\n    Object.defineProperty(Container.prototype, \"isSelectable\", {\n        get: function () {\n            return true;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Container.prototype.getEffectivePadding = function () {\n        if (shared_1.GlobalSettings.removePaddingFromContainersWithBackgroundImage &&\n            !this.getHasBackground(true)) {\n            return new shared_1.PaddingDefinition();\n        }\n        return _super.prototype.getEffectivePadding.call(this);\n    };\n    Container.prototype.getEffectiveVerticalContentAlignment = function () {\n        if (this.verticalContentAlignment !== undefined) {\n            return this.verticalContentAlignment;\n        }\n        var parentContainer = this.getParentContainer();\n        return parentContainer\n            ? parentContainer.getEffectiveVerticalContentAlignment()\n            : Enums.VerticalAlignment.Top;\n    };\n    Container.prototype.getItemCount = function () {\n        return this._items.length;\n    };\n    Container.prototype.getItemAt = function (index) {\n        return this._items[index];\n    };\n    Container.prototype.getFirstVisibleRenderedItem = function () {\n        if (this.renderedElement && this._renderedItems && this._renderedItems.length > 0) {\n            for (var _i = 0, _a = this._renderedItems; _i < _a.length; _i++) {\n                var item = _a[_i];\n                if (item.isVisible) {\n                    return item;\n                }\n            }\n        }\n        return undefined;\n    };\n    Container.prototype.getLastVisibleRenderedItem = function () {\n        if (this.renderedElement && this._renderedItems && this._renderedItems.length > 0) {\n            for (var i = this._renderedItems.length - 1; i >= 0; i--) {\n                if (this._renderedItems[i].isVisible) {\n                    return this._renderedItems[i];\n                }\n            }\n        }\n        return undefined;\n    };\n    Container.prototype.getJsonTypeName = function () {\n        return \"Container\";\n    };\n    Container.prototype.isFirstElement = function (element) {\n        var designMode = this.isDesignMode();\n        for (var _i = 0, _a = this._items; _i < _a.length; _i++) {\n            var item = _a[_i];\n            if (item.isVisible || designMode) {\n                return item === element;\n            }\n        }\n        return false;\n    };\n    Container.prototype.isLastElement = function (element) {\n        var designMode = this.isDesignMode();\n        for (var i = this._items.length - 1; i >= 0; i--) {\n            if (this._items[i].isVisible || designMode) {\n                return this._items[i] === element;\n            }\n        }\n        return false;\n    };\n    Container.prototype.isRtl = function () {\n        if (this.rtl !== undefined) {\n            return this.rtl;\n        }\n        else {\n            var parentContainer = this.getParentContainer();\n            return parentContainer ? parentContainer.isRtl() : false;\n        }\n    };\n    Container.prototype.isBleedingAtTop = function () {\n        var firstRenderedItem = this.getFirstVisibleRenderedItem();\n        return (this.isBleeding() || (firstRenderedItem ? firstRenderedItem.isBleedingAtTop() : false));\n    };\n    Container.prototype.isBleedingAtBottom = function () {\n        var lastRenderedItem = this.getLastVisibleRenderedItem();\n        return (this.isBleeding() ||\n            (lastRenderedItem\n                ? lastRenderedItem.isBleedingAtBottom() &&\n                    lastRenderedItem.getEffectiveStyle() === this.getEffectiveStyle()\n                : false));\n    };\n    Container.prototype.indexOf = function (cardElement) {\n        return this._items.indexOf(cardElement);\n    };\n    Container.prototype.addItem = function (item) {\n        this.insertItemAt(item, -1, false);\n    };\n    Container.prototype.insertItemBefore = function (item, insertBefore) {\n        this.insertItemAt(item, this._items.indexOf(insertBefore), false);\n    };\n    Container.prototype.insertItemAfter = function (item, insertAfter) {\n        this.insertItemAt(item, this._items.indexOf(insertAfter) + 1, false);\n    };\n    Container.prototype.removeItem = function (item) {\n        var itemIndex = this._items.indexOf(item);\n        if (itemIndex >= 0) {\n            this._items.splice(itemIndex, 1);\n            item.setParent(undefined);\n            this.updateLayout();\n            return true;\n        }\n        return false;\n    };\n    Container.prototype.clear = function () {\n        this._items = [];\n        this._renderedItems = [];\n    };\n    Container.prototype.getResourceInformation = function () {\n        var result = _super.prototype.getResourceInformation.call(this);\n        if (this.backgroundImage.isValid()) {\n            result.push({\n                // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion -- validated by `isValid()`\n                url: this.backgroundImage.url,\n                mimeType: \"image\"\n            });\n        }\n        return result;\n    };\n    Container.prototype.getActionById = function (id) {\n        var result = _super.prototype.getActionById.call(this, id);\n        if (!result) {\n            if (this.selectAction) {\n                result = this.selectAction.getActionById(id);\n            }\n            if (!result) {\n                for (var _i = 0, _a = this._items; _i < _a.length; _i++) {\n                    var item = _a[_i];\n                    result = item.getActionById(id);\n                    if (result) {\n                        break;\n                    }\n                }\n            }\n        }\n        return result;\n    };\n    Object.defineProperty(Container.prototype, \"padding\", {\n        get: function () {\n            return this.getPadding();\n        },\n        set: function (value) {\n            this.setPadding(value);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Container.prototype, \"selectAction\", {\n        get: function () {\n            return this._selectAction;\n        },\n        set: function (value) {\n            this._selectAction = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Container.prototype, \"bleed\", {\n        get: function () {\n            return this.getBleed();\n        },\n        set: function (value) {\n            this.setBleed(value);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    //#region Schema\n    Container.backgroundImageProperty = new serialization_1.SerializableObjectProperty(serialization_1.Versions.v1_0, \"backgroundImage\", BackgroundImage);\n    Container.verticalContentAlignmentProperty = new serialization_1.EnumProperty(serialization_1.Versions.v1_1, \"verticalContentAlignment\", Enums.VerticalAlignment);\n    Container.rtlProperty = new serialization_1.BoolProperty(serialization_1.Versions.v1_0, \"rtl\");\n    __decorate([\n        (0, serialization_1.property)(Container.backgroundImageProperty)\n    ], Container.prototype, \"backgroundImage\", null);\n    __decorate([\n        (0, serialization_1.property)(Container.verticalContentAlignmentProperty)\n    ], Container.prototype, \"verticalContentAlignment\", void 0);\n    __decorate([\n        (0, serialization_1.property)(Container.rtlProperty)\n    ], Container.prototype, \"rtl\", void 0);\n    return Container;\n}(ContainerBase));\nexports.Container = Container;\nvar Column = /** @class */ (function (_super) {\n    __extends(Column, _super);\n    function Column(width) {\n        if (width === void 0) { width = \"stretch\"; }\n        var _this = _super.call(this) || this;\n        _this.width = \"stretch\";\n        //#endregion\n        _this._computedWeight = 0;\n        _this.width = width;\n        return _this;\n    }\n    Column.prototype.adjustRenderedElementSize = function (renderedElement) {\n        var minDesignTimeColumnHeight = 20;\n        if (this.isDesignMode()) {\n            renderedElement.style.minWidth = \"20px\";\n            renderedElement.style.minHeight =\n                (!this.minPixelHeight\n                    ? minDesignTimeColumnHeight\n                    : Math.max(this.minPixelHeight, minDesignTimeColumnHeight)) + \"px\";\n        }\n        else {\n            renderedElement.style.minWidth = \"0\";\n            if (this.minPixelHeight) {\n                renderedElement.style.minHeight = this.minPixelHeight + \"px\";\n            }\n        }\n        if (this.width === \"auto\") {\n            renderedElement.style.flex = \"0 1 auto\";\n        }\n        else if (this.width === \"stretch\") {\n            renderedElement.style.flex = \"1 1 50px\";\n        }\n        else if (this.width instanceof shared_1.SizeAndUnit) {\n            if (this.width.unit === Enums.SizeUnit.Pixel) {\n                renderedElement.style.flex = \"0 0 auto\";\n                renderedElement.style.width = this.width.physicalSize + \"px\";\n            }\n            else {\n                renderedElement.style.flex =\n                    \"1 1 \" +\n                        (this._computedWeight > 0 ? this._computedWeight : this.width.physicalSize) +\n                        \"%\";\n            }\n        }\n    };\n    Column.prototype.shouldSerialize = function (_context) {\n        return true;\n    };\n    Object.defineProperty(Column.prototype, \"separatorOrientation\", {\n        get: function () {\n            return Enums.Orientation.Vertical;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Column.prototype.getJsonTypeName = function () {\n        return \"Column\";\n    };\n    Object.defineProperty(Column.prototype, \"hasVisibleSeparator\", {\n        get: function () {\n            if (this.parent && this.parent instanceof ColumnSet) {\n                return this.separatorElement !== undefined && !this.parent.isLeftMostElement(this);\n            }\n            else {\n                return false;\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Column.prototype, \"isStandalone\", {\n        get: function () {\n            return false;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    //#region Schema\n    Column.widthProperty = new serialization_1.CustomProperty(serialization_1.Versions.v1_0, \"width\", function (sender, prop, source, context) {\n        var result = prop.defaultValue;\n        var value = source[prop.name];\n        var invalidWidth = false;\n        if (typeof value === \"number\" && !isNaN(value)) {\n            result = new shared_1.SizeAndUnit(value, Enums.SizeUnit.Weight);\n        }\n        else if (value === \"auto\" || value === \"stretch\") {\n            result = value;\n        }\n        else if (typeof value === \"string\") {\n            try {\n                result = shared_1.SizeAndUnit.parse(value);\n                if (result.unit === Enums.SizeUnit.Pixel &&\n                    prop.targetVersion.compareTo(context.targetVersion) > 0) {\n                    invalidWidth = true;\n                }\n            }\n            catch (e) {\n                invalidWidth = true;\n            }\n        }\n        else {\n            invalidWidth = true;\n        }\n        if (invalidWidth) {\n            context.logParseEvent(sender, Enums.ValidationEvent.InvalidPropertyValue, strings_1.Strings.errors.invalidColumnWidth(value));\n            result = \"auto\";\n        }\n        return result;\n    }, function (sender, property, target, value, context) {\n        if (value instanceof shared_1.SizeAndUnit) {\n            if (value.unit === Enums.SizeUnit.Pixel) {\n                context.serializeValue(target, \"width\", value.physicalSize + \"px\");\n            }\n            else {\n                context.serializeNumber(target, \"width\", value.physicalSize);\n            }\n        }\n        else {\n            context.serializeValue(target, \"width\", value);\n        }\n    }, \"stretch\");\n    __decorate([\n        (0, serialization_1.property)(Column.widthProperty)\n    ], Column.prototype, \"width\", void 0);\n    return Column;\n}(Container));\nexports.Column = Column;\nvar ColumnSet = /** @class */ (function (_super) {\n    __extends(ColumnSet, _super);\n    function ColumnSet() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._columns = [];\n        return _this;\n    }\n    ColumnSet.prototype.createColumnInstance = function (source, context) {\n        return context.parseCardObject(this, source, [], !this.isDesignMode(), function (typeName) {\n            return !typeName || typeName === \"Column\" ? new Column() : undefined;\n        }, function (typeName, _errorType) {\n            context.logParseEvent(undefined, Enums.ValidationEvent.ElementTypeNotAllowed, strings_1.Strings.errors.elementTypeNotAllowed(typeName));\n        });\n    };\n    ColumnSet.prototype.internalRender = function () {\n        this._renderedColumns = [];\n        if (this._columns.length > 0) {\n            // Cache hostConfig to avoid walking the parent hierarchy several times\n            var hostConfig = this.hostConfig;\n            var element = document.createElement(\"div\");\n            element.className = hostConfig.makeCssClassName(\"ac-columnSet\");\n            element.style.display = \"flex\";\n            if (shared_1.GlobalSettings.useAdvancedCardBottomTruncation) {\n                // See comment in Container.internalRender()\n                element.style.minHeight = \"-webkit-min-content\";\n            }\n            switch (this.getEffectiveHorizontalAlignment()) {\n                case Enums.HorizontalAlignment.Center:\n                    element.style.justifyContent = \"center\";\n                    break;\n                case Enums.HorizontalAlignment.Right:\n                    element.style.justifyContent = \"flex-end\";\n                    break;\n                default:\n                    element.style.justifyContent = \"flex-start\";\n                    break;\n            }\n            var totalWeight = 0;\n            for (var _i = 0, _a = this._columns; _i < _a.length; _i++) {\n                var column = _a[_i];\n                if (column.width instanceof shared_1.SizeAndUnit &&\n                    column.width.unit === Enums.SizeUnit.Weight) {\n                    totalWeight += column.width.physicalSize;\n                }\n            }\n            for (var _b = 0, _c = this._columns; _b < _c.length; _b++) {\n                var column = _c[_b];\n                if (column.width instanceof shared_1.SizeAndUnit &&\n                    column.width.unit === Enums.SizeUnit.Weight &&\n                    totalWeight > 0) {\n                    var computedWeight = (100 / totalWeight) * column.width.physicalSize;\n                    // Best way to emulate \"internal\" access I know of\n                    column[\"_computedWeight\"] = computedWeight;\n                }\n                var renderedColumn = column.render();\n                if (renderedColumn) {\n                    if (this._renderedColumns.length > 0 && column.separatorElement) {\n                        column.separatorElement.style.flex = \"0 0 auto\";\n                        Utils.appendChild(element, column.separatorElement);\n                    }\n                    Utils.appendChild(element, renderedColumn);\n                    this._renderedColumns.push(column);\n                }\n            }\n            return this._renderedColumns.length > 0 ? element : undefined;\n        }\n        else {\n            return undefined;\n        }\n    };\n    ColumnSet.prototype.truncateOverflow = function (maxHeight) {\n        for (var _i = 0, _a = this._columns; _i < _a.length; _i++) {\n            var column = _a[_i];\n            column[\"handleOverflow\"](maxHeight);\n        }\n        return true;\n    };\n    ColumnSet.prototype.undoOverflowTruncation = function () {\n        for (var _i = 0, _a = this._columns; _i < _a.length; _i++) {\n            var column = _a[_i];\n            column[\"resetOverflow\"]();\n        }\n    };\n    Object.defineProperty(ColumnSet.prototype, \"isSelectable\", {\n        get: function () {\n            return true;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ColumnSet.prototype.internalParse = function (source, context) {\n        _super.prototype.internalParse.call(this, source, context);\n        this._columns = [];\n        this._renderedColumns = [];\n        var jsonColumns = source[\"columns\"];\n        if (Array.isArray(jsonColumns)) {\n            for (var _i = 0, jsonColumns_1 = jsonColumns; _i < jsonColumns_1.length; _i++) {\n                var item = jsonColumns_1[_i];\n                var column = this.createColumnInstance(item, context);\n                if (column) {\n                    this._columns.push(column);\n                }\n            }\n        }\n    };\n    ColumnSet.prototype.internalToJSON = function (target, context) {\n        _super.prototype.internalToJSON.call(this, target, context);\n        context.serializeArray(target, \"columns\", this._columns);\n    };\n    ColumnSet.prototype.isFirstElement = function (element) {\n        for (var _i = 0, _a = this._columns; _i < _a.length; _i++) {\n            var column = _a[_i];\n            if (column.isVisible) {\n                return column === element;\n            }\n        }\n        return false;\n    };\n    ColumnSet.prototype.isBleedingAtTop = function () {\n        if (this.isBleeding()) {\n            return true;\n        }\n        if (this._renderedColumns && this._renderedColumns.length > 0) {\n            for (var _i = 0, _a = this._columns; _i < _a.length; _i++) {\n                var column = _a[_i];\n                if (column.isBleedingAtTop()) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    ColumnSet.prototype.isBleedingAtBottom = function () {\n        if (this.isBleeding()) {\n            return true;\n        }\n        if (this._renderedColumns && this._renderedColumns.length > 0) {\n            for (var _i = 0, _a = this._columns; _i < _a.length; _i++) {\n                var column = _a[_i];\n                if (column.isBleedingAtBottom()) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    ColumnSet.prototype.getItemCount = function () {\n        return this._columns.length;\n    };\n    ColumnSet.prototype.getFirstVisibleRenderedItem = function () {\n        if (this.renderedElement && this._renderedColumns && this._renderedColumns.length > 0) {\n            return this._renderedColumns[0];\n        }\n        else {\n            return undefined;\n        }\n    };\n    ColumnSet.prototype.getLastVisibleRenderedItem = function () {\n        if (this.renderedElement && this._renderedColumns && this._renderedColumns.length > 0) {\n            return this._renderedColumns[this._renderedColumns.length - 1];\n        }\n        else {\n            return undefined;\n        }\n    };\n    ColumnSet.prototype.getColumnAt = function (index) {\n        return this._columns[index];\n    };\n    ColumnSet.prototype.getItemAt = function (index) {\n        return this.getColumnAt(index);\n    };\n    ColumnSet.prototype.getJsonTypeName = function () {\n        return \"ColumnSet\";\n    };\n    ColumnSet.prototype.internalValidateProperties = function (context) {\n        _super.prototype.internalValidateProperties.call(this, context);\n        var weightedColumns = 0;\n        var stretchedColumns = 0;\n        for (var _i = 0, _a = this._columns; _i < _a.length; _i++) {\n            var column = _a[_i];\n            if (typeof column.width === \"number\") {\n                weightedColumns++;\n            }\n            else if (column.width === \"stretch\") {\n                stretchedColumns++;\n            }\n        }\n        if (weightedColumns > 0 && stretchedColumns > 0) {\n            context.addFailure(this, Enums.ValidationEvent.Hint, strings_1.Strings.hints.dontUseWeightedAndStrecthedColumnsInSameSet());\n        }\n    };\n    ColumnSet.prototype.addColumn = function (column) {\n        if (!column.parent) {\n            this._columns.push(column);\n            column.setParent(this);\n        }\n        else {\n            throw new Error(strings_1.Strings.errors.columnAlreadyBelongsToAnotherSet());\n        }\n    };\n    ColumnSet.prototype.removeItem = function (item) {\n        if (item instanceof Column) {\n            var itemIndex = this._columns.indexOf(item);\n            if (itemIndex >= 0) {\n                this._columns.splice(itemIndex, 1);\n                item.setParent(undefined);\n                this.updateLayout();\n                return true;\n            }\n        }\n        return false;\n    };\n    ColumnSet.prototype.indexOf = function (cardElement) {\n        return cardElement instanceof Column ? this._columns.indexOf(cardElement) : -1;\n    };\n    ColumnSet.prototype.isLeftMostElement = function (element) {\n        return this._columns.indexOf(element) === 0;\n    };\n    ColumnSet.prototype.isRightMostElement = function (element) {\n        return this._columns.indexOf(element) === this._columns.length - 1;\n    };\n    ColumnSet.prototype.isTopElement = function (element) {\n        return this._columns.indexOf(element) >= 0;\n    };\n    ColumnSet.prototype.isBottomElement = function (element) {\n        return this._columns.indexOf(element) >= 0;\n    };\n    ColumnSet.prototype.getActionById = function (id) {\n        var result = undefined;\n        for (var _i = 0, _a = this._columns; _i < _a.length; _i++) {\n            var column = _a[_i];\n            result = column.getActionById(id);\n            if (result) {\n                break;\n            }\n        }\n        return result;\n    };\n    Object.defineProperty(ColumnSet.prototype, \"bleed\", {\n        get: function () {\n            return this.getBleed();\n        },\n        set: function (value) {\n            this.setBleed(value);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ColumnSet.prototype, \"padding\", {\n        get: function () {\n            return this.getPadding();\n        },\n        set: function (value) {\n            this.setPadding(value);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ColumnSet.prototype, \"selectAction\", {\n        get: function () {\n            return this._selectAction;\n        },\n        set: function (value) {\n            this._selectAction = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return ColumnSet;\n}(ContainerBase));\nexports.ColumnSet = ColumnSet;\nfunction raiseImageLoadedEvent(image) {\n    var card = image.getRootElement();\n    var onImageLoadedHandler = card && card.onImageLoaded ? card.onImageLoaded : AdaptiveCard.onImageLoaded;\n    if (onImageLoadedHandler) {\n        onImageLoadedHandler(image);\n    }\n}\nfunction raiseAnchorClickedEvent(element, anchor, ev) {\n    var card = element.getRootElement();\n    var onAnchorClickedHandler = card && card.onAnchorClicked ? card.onAnchorClicked : AdaptiveCard.onAnchorClicked;\n    return onAnchorClickedHandler !== undefined\n        ? onAnchorClickedHandler(element, anchor, ev)\n        : false;\n}\nfunction raiseExecuteActionEvent(action) {\n    var card = action.parent ? action.parent.getRootElement() : undefined;\n    var onExecuteActionHandler = card && card.onExecuteAction ? card.onExecuteAction : AdaptiveCard.onExecuteAction;\n    if (action.prepareForExecution() && onExecuteActionHandler) {\n        onExecuteActionHandler(action);\n    }\n}\nfunction raiseInlineCardExpandedEvent(action, isExpanded) {\n    var card = action.parent ? action.parent.getRootElement() : undefined;\n    var onInlineCardExpandedHandler = card && card.onInlineCardExpanded\n        ? card.onInlineCardExpanded\n        : AdaptiveCard.onInlineCardExpanded;\n    if (onInlineCardExpandedHandler) {\n        onInlineCardExpandedHandler(action, isExpanded);\n    }\n}\nfunction raiseInputValueChangedEvent(input) {\n    var card = input.getRootElement();\n    var onInputValueChangedHandler = card && card.onInputValueChanged\n        ? card.onInputValueChanged\n        : AdaptiveCard.onInputValueChanged;\n    if (onInputValueChangedHandler) {\n        onInputValueChangedHandler(input);\n    }\n}\nfunction raiseElementVisibilityChangedEvent(element, shouldUpdateLayout) {\n    if (shouldUpdateLayout === void 0) { shouldUpdateLayout = true; }\n    var rootElement = element.getRootElement();\n    if (shouldUpdateLayout) {\n        rootElement.updateLayout();\n    }\n    var card = rootElement;\n    var onElementVisibilityChangedHandler = card && card.onElementVisibilityChanged\n        ? card.onElementVisibilityChanged\n        : AdaptiveCard.onElementVisibilityChanged;\n    if (onElementVisibilityChangedHandler !== undefined) {\n        onElementVisibilityChangedHandler(element);\n    }\n}\nfunction updateInputAdornersVisibility(input, hide) {\n    if (!!hide) {\n        // hides the time/date picker icon\n        input.readOnly = true;\n        // hides the cross button icon\n        input.required = true;\n    }\n    else {\n        // shows the time/date picker icon\n        input.readOnly = false;\n        // shows the cross button icon\n        input.required = false;\n    }\n}\n/**\n * @returns return false to continue with default context menu; return true to skip SDK default context menu\n */\nfunction raiseDisplayOverflowActionMenuEvent(action, target) {\n    var card = action.parent ? action.parent.getRootElement() : undefined;\n    var onDisplayOverflowActionMenuHandler = card && card.onDisplayOverflowActionMenu\n        ? card.onDisplayOverflowActionMenu\n        : AdaptiveCard.onDisplayOverflowActionMenu;\n    return onDisplayOverflowActionMenuHandler !== undefined\n        ? onDisplayOverflowActionMenuHandler(action.getActions(), target)\n        : false;\n}\n/**\n * @returns return false to continue with default action button; return true to skip SDK default action button\n */\nfunction raiseRenderOverflowActionsEvent(action, isAtRootLevelActions) {\n    var card = action.parent ? action.parent.getRootElement() : undefined;\n    var onRenderOverflowActionsHandler = card && card.onRenderOverflowActions\n        ? card.onRenderOverflowActions\n        : AdaptiveCard.onRenderOverflowActions;\n    return onRenderOverflowActionsHandler !== undefined\n        ? onRenderOverflowActionsHandler(action.getActions(), isAtRootLevelActions)\n        : false;\n}\nvar ContainerWithActions = /** @class */ (function (_super) {\n    __extends(ContainerWithActions, _super);\n    function ContainerWithActions() {\n        var _this = _super.call(this) || this;\n        _this._actionCollection = new ActionCollection(_this);\n        return _this;\n    }\n    ContainerWithActions.prototype.internalParse = function (source, context) {\n        _super.prototype.internalParse.call(this, source, context);\n        this.parseActions(source, context);\n    };\n    ContainerWithActions.prototype.parseActions = function (source, context) {\n        this._actionCollection.parse(source[\"actions\"], context);\n    };\n    ContainerWithActions.prototype.internalToJSON = function (target, context) {\n        _super.prototype.internalToJSON.call(this, target, context);\n        this._actionCollection.toJSON(target, \"actions\", context);\n    };\n    ContainerWithActions.prototype.internalRender = function () {\n        var element = _super.prototype.internalRender.call(this);\n        if (element) {\n            var renderedActions = this._actionCollection.render(this.hostConfig.actions.actionsOrientation);\n            if (renderedActions) {\n                Utils.appendChild(element, renderSeparation(this.hostConfig, {\n                    spacing: this.hostConfig.getEffectiveSpacing(this.hostConfig.actions.spacing)\n                }, Enums.Orientation.Horizontal));\n                Utils.appendChild(element, renderedActions);\n            }\n            if (this.renderIfEmpty) {\n                return element;\n            }\n            else {\n                return element.children.length > 0 ? element : undefined;\n            }\n        }\n        else {\n            return undefined;\n        }\n    };\n    ContainerWithActions.prototype.getHasExpandedAction = function () {\n        if (this.renderedActionCount === 0) {\n            return false;\n        }\n        else if (this.renderedActionCount === 1) {\n            return (this._actionCollection.expandedAction !== undefined &&\n                !this.hostConfig.actions.preExpandSingleShowCardAction);\n        }\n        else {\n            return this._actionCollection.expandedAction !== undefined;\n        }\n    };\n    Object.defineProperty(ContainerWithActions.prototype, \"renderedActionCount\", {\n        get: function () {\n            return this._actionCollection.renderedActionCount;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ContainerWithActions.prototype, \"renderIfEmpty\", {\n        get: function () {\n            return false;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ContainerWithActions.prototype.releaseDOMResources = function () {\n        _super.prototype.releaseDOMResources.call(this);\n        this._actionCollection.releaseDOMResources();\n    };\n    ContainerWithActions.prototype.getActionCount = function () {\n        return this._actionCollection.getActionCount();\n    };\n    ContainerWithActions.prototype.getActionAt = function (index) {\n        if (index >= 0 && index < this.getActionCount()) {\n            return this._actionCollection.getActionAt(index);\n        }\n        else {\n            return _super.prototype.getActionAt.call(this, index);\n        }\n    };\n    ContainerWithActions.prototype.getActionById = function (id) {\n        var result = this._actionCollection.getActionById(id);\n        return result ? result : _super.prototype.getActionById.call(this, id);\n    };\n    ContainerWithActions.prototype.internalValidateProperties = function (context) {\n        _super.prototype.internalValidateProperties.call(this, context);\n        if (this._actionCollection) {\n            this._actionCollection.validateProperties(context);\n        }\n    };\n    ContainerWithActions.prototype.isLastElement = function (element) {\n        return _super.prototype.isLastElement.call(this, element) && this._actionCollection.getActionCount() === 0;\n    };\n    ContainerWithActions.prototype.addAction = function (action) {\n        this._actionCollection.addAction(action);\n    };\n    ContainerWithActions.prototype.clear = function () {\n        _super.prototype.clear.call(this);\n        this._actionCollection.clear();\n    };\n    ContainerWithActions.prototype.getAllInputs = function (processActions) {\n        if (processActions === void 0) { processActions = true; }\n        var result = _super.prototype.getAllInputs.call(this, processActions);\n        if (processActions) {\n            result.push.apply(result, this._actionCollection.getAllInputs(processActions));\n        }\n        return result;\n    };\n    ContainerWithActions.prototype.getResourceInformation = function () {\n        var result = _super.prototype.getResourceInformation.call(this);\n        result.push.apply(result, this._actionCollection.getResourceInformation());\n        return result;\n    };\n    ContainerWithActions.prototype.isBleedingAtBottom = function () {\n        if (this._actionCollection.renderedActionCount === 0) {\n            return _super.prototype.isBleedingAtBottom.call(this);\n        }\n        else {\n            if (this._actionCollection.getActionCount() === 1) {\n                return (this._actionCollection.expandedAction !== undefined &&\n                    !this.hostConfig.actions.preExpandSingleShowCardAction);\n            }\n            else {\n                return this._actionCollection.expandedAction !== undefined;\n            }\n        }\n    };\n    ContainerWithActions.prototype.getForbiddenActionNames = function () {\n        return [];\n    };\n    ContainerWithActions.prototype.getElementById = function (id) {\n        var result = _super.prototype.getElementById.call(this, id);\n        if (!result) {\n            result = this.getElementByIdFromAction(id);\n        }\n        return result;\n    };\n    Object.defineProperty(ContainerWithActions.prototype, \"isStandalone\", {\n        get: function () {\n            return false;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return ContainerWithActions;\n}(Container));\nexports.ContainerWithActions = ContainerWithActions;\nvar RefreshActionProperty = /** @class */ (function (_super) {\n    __extends(RefreshActionProperty, _super);\n    function RefreshActionProperty(targetVersion, name) {\n        var _this = _super.call(this, targetVersion, name, undefined) || this;\n        _this.targetVersion = targetVersion;\n        _this.name = name;\n        return _this;\n    }\n    RefreshActionProperty.prototype.parse = function (sender, source, context) {\n        var action = context.parseAction(sender.parent, source[this.name], [], false);\n        if (action !== undefined) {\n            if (action instanceof ExecuteAction) {\n                return action;\n            }\n            context.logParseEvent(sender, Enums.ValidationEvent.ActionTypeNotAllowed, strings_1.Strings.errors.actionTypeNotAllowed(action.getJsonTypeName()));\n        }\n        context.logParseEvent(sender, Enums.ValidationEvent.PropertyCantBeNull, strings_1.Strings.errors.propertyMustBeSet(\"action\"));\n        return undefined;\n    };\n    RefreshActionProperty.prototype.toJSON = function (sender, target, value, context) {\n        context.serializeValue(target, this.name, value ? value.toJSON(context) : undefined, undefined, true);\n    };\n    return RefreshActionProperty;\n}(serialization_1.PropertyDefinition));\nexports.RefreshActionProperty = RefreshActionProperty;\nvar RefreshDefinition = /** @class */ (function (_super) {\n    __extends(RefreshDefinition, _super);\n    function RefreshDefinition() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(RefreshDefinition.prototype, \"action\", {\n        get: function () {\n            return this.getValue(RefreshDefinition.actionProperty);\n        },\n        set: function (value) {\n            this.setValue(RefreshDefinition.actionProperty, value);\n            if (value) {\n                value.setParent(this.parent);\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    RefreshDefinition.prototype.getSchemaKey = function () {\n        return \"RefreshDefinition\";\n    };\n    //#region Schema\n    RefreshDefinition.actionProperty = new RefreshActionProperty(serialization_1.Versions.v1_4, \"action\");\n    RefreshDefinition.userIdsProperty = new serialization_1.StringArrayProperty(serialization_1.Versions.v1_4, \"userIds\");\n    __decorate([\n        (0, serialization_1.property)(RefreshDefinition.actionProperty)\n    ], RefreshDefinition.prototype, \"action\", null);\n    __decorate([\n        (0, serialization_1.property)(RefreshDefinition.userIdsProperty)\n    ], RefreshDefinition.prototype, \"userIds\", void 0);\n    return RefreshDefinition;\n}(serialization_1.SerializableObject));\nexports.RefreshDefinition = RefreshDefinition;\nvar AuthCardButton = /** @class */ (function (_super) {\n    __extends(AuthCardButton, _super);\n    function AuthCardButton() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    AuthCardButton.prototype.getSchemaKey = function () {\n        return \"AuthCardButton\";\n    };\n    //#region Schema\n    AuthCardButton.typeProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_4, \"type\");\n    AuthCardButton.titleProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_4, \"title\");\n    AuthCardButton.imageProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_4, \"image\");\n    AuthCardButton.valueProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_4, \"value\");\n    __decorate([\n        (0, serialization_1.property)(AuthCardButton.typeProperty)\n    ], AuthCardButton.prototype, \"type\", void 0);\n    __decorate([\n        (0, serialization_1.property)(AuthCardButton.titleProperty)\n    ], AuthCardButton.prototype, \"title\", void 0);\n    __decorate([\n        (0, serialization_1.property)(AuthCardButton.imageProperty)\n    ], AuthCardButton.prototype, \"image\", void 0);\n    __decorate([\n        (0, serialization_1.property)(AuthCardButton.valueProperty)\n    ], AuthCardButton.prototype, \"value\", void 0);\n    return AuthCardButton;\n}(serialization_1.SerializableObject));\nexports.AuthCardButton = AuthCardButton;\nvar TokenExchangeResource = /** @class */ (function (_super) {\n    __extends(TokenExchangeResource, _super);\n    function TokenExchangeResource() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    TokenExchangeResource.prototype.getSchemaKey = function () {\n        return \"TokenExchangeResource\";\n    };\n    //#region Schema\n    TokenExchangeResource.idProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_4, \"id\");\n    TokenExchangeResource.uriProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_4, \"uri\");\n    TokenExchangeResource.providerIdProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_4, \"providerId\");\n    __decorate([\n        (0, serialization_1.property)(TokenExchangeResource.idProperty)\n    ], TokenExchangeResource.prototype, \"id\", void 0);\n    __decorate([\n        (0, serialization_1.property)(TokenExchangeResource.uriProperty)\n    ], TokenExchangeResource.prototype, \"uri\", void 0);\n    __decorate([\n        (0, serialization_1.property)(TokenExchangeResource.providerIdProperty)\n    ], TokenExchangeResource.prototype, \"providerId\", void 0);\n    return TokenExchangeResource;\n}(serialization_1.SerializableObject));\nexports.TokenExchangeResource = TokenExchangeResource;\nvar Authentication = /** @class */ (function (_super) {\n    __extends(Authentication, _super);\n    function Authentication() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Authentication.prototype.getSchemaKey = function () {\n        return \"Authentication\";\n    };\n    //#region Schema\n    Authentication.textProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_4, \"text\");\n    Authentication.connectionNameProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_4, \"connectionName\");\n    Authentication.buttonsProperty = new serialization_1.SerializableObjectCollectionProperty(serialization_1.Versions.v1_4, \"buttons\", AuthCardButton);\n    Authentication.tokenExchangeResourceProperty = new serialization_1.SerializableObjectProperty(serialization_1.Versions.v1_4, \"tokenExchangeResource\", TokenExchangeResource, true);\n    __decorate([\n        (0, serialization_1.property)(Authentication.textProperty)\n    ], Authentication.prototype, \"text\", void 0);\n    __decorate([\n        (0, serialization_1.property)(Authentication.connectionNameProperty)\n    ], Authentication.prototype, \"connectionName\", void 0);\n    __decorate([\n        (0, serialization_1.property)(Authentication.buttonsProperty)\n    ], Authentication.prototype, \"buttons\", void 0);\n    __decorate([\n        (0, serialization_1.property)(Authentication.tokenExchangeResourceProperty)\n    ], Authentication.prototype, \"tokenExchangeResource\", void 0);\n    return Authentication;\n}(serialization_1.SerializableObject));\nexports.Authentication = Authentication;\n// @dynamic\nvar AdaptiveCard = /** @class */ (function (_super) {\n    __extends(AdaptiveCard, _super);\n    function AdaptiveCard() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.designMode = false;\n        return _this;\n    }\n    Object.defineProperty(AdaptiveCard.prototype, \"refresh\", {\n        get: function () {\n            return this.getValue(AdaptiveCard.refreshProperty);\n        },\n        set: function (value) {\n            this.setValue(AdaptiveCard.refreshProperty, value);\n            if (value) {\n                value.parent = this;\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AdaptiveCard, \"processMarkdown\", {\n        get: function () {\n            throw new Error(strings_1.Strings.errors.processMarkdownEventRemoved());\n        },\n        // eslint-disable-next-line @typescript-eslint/naming-convention\n        set: function (_value) {\n            throw new Error(strings_1.Strings.errors.processMarkdownEventRemoved());\n        },\n        enumerable: false,\n        configurable: true\n    });\n    AdaptiveCard.applyMarkdown = function (text) {\n        var result = {\n            didProcess: false\n        };\n        if (AdaptiveCard.onProcessMarkdown) {\n            AdaptiveCard.onProcessMarkdown(text, result);\n        }\n        else if (window.markdownit) {\n            // Check for markdownit\n            var markdownIt = window.markdownit;\n            result.outputHtml = markdownIt().render(text);\n            result.didProcess = true;\n        }\n        else if (!AdaptiveCard._haveWarnedAboutNoMarkdownProcessing) {\n            // eslint-disable-next-line no-console\n            console.warn(strings_1.Strings.errors.markdownProcessingNotEnabled);\n            AdaptiveCard._haveWarnedAboutNoMarkdownProcessing = true;\n        }\n        return result;\n    };\n    AdaptiveCard.prototype.isVersionSupported = function () {\n        if (this.bypassVersionCheck) {\n            return true;\n        }\n        else {\n            var unsupportedVersion = !this.version ||\n                !this.version.isValid ||\n                this.maxVersion.major < this.version.major ||\n                (this.maxVersion.major === this.version.major &&\n                    this.maxVersion.minor < this.version.minor);\n            return !unsupportedVersion;\n        }\n    };\n    AdaptiveCard.prototype.getDefaultSerializationContext = function () {\n        return new SerializationContext(this.version);\n    };\n    AdaptiveCard.prototype.getItemsCollectionPropertyName = function () {\n        return \"body\";\n    };\n    AdaptiveCard.prototype.internalParse = function (source, context) {\n        this._fallbackCard = undefined;\n        var fallbackElement = context.parseElement(undefined, source[\"fallback\"], this.forbiddenChildElements(), !this.isDesignMode());\n        if (fallbackElement) {\n            this._fallbackCard = new AdaptiveCard();\n            this._fallbackCard.addItem(fallbackElement);\n        }\n        _super.prototype.internalParse.call(this, source, context);\n    };\n    AdaptiveCard.prototype.internalToJSON = function (target, context) {\n        this.setValue(AdaptiveCard.versionProperty, context.targetVersion);\n        _super.prototype.internalToJSON.call(this, target, context);\n    };\n    AdaptiveCard.prototype.internalRender = function () {\n        var renderedElement = _super.prototype.internalRender.call(this);\n        if (shared_1.GlobalSettings.useAdvancedCardBottomTruncation && renderedElement) {\n            // Unlike containers, the root card element should be allowed to\n            // be shorter than its content (otherwise the overflow truncation\n            // logic would never get triggered)\n            renderedElement.style.removeProperty(\"minHeight\");\n        }\n        return renderedElement;\n    };\n    AdaptiveCard.prototype.getHasBackground = function (ignoreBackgroundImages) {\n        if (ignoreBackgroundImages === void 0) { ignoreBackgroundImages = false; }\n        return true;\n    };\n    AdaptiveCard.prototype.getDefaultPadding = function () {\n        return new shared_1.PaddingDefinition(Enums.Spacing.Padding, Enums.Spacing.Padding, Enums.Spacing.Padding, Enums.Spacing.Padding);\n    };\n    AdaptiveCard.prototype.shouldSerialize = function (_context) {\n        return true;\n    };\n    Object.defineProperty(AdaptiveCard.prototype, \"renderIfEmpty\", {\n        get: function () {\n            return true;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AdaptiveCard.prototype, \"bypassVersionCheck\", {\n        get: function () {\n            return false;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AdaptiveCard.prototype, \"allowCustomStyle\", {\n        get: function () {\n            return this.hostConfig.adaptiveCard && this.hostConfig.adaptiveCard.allowCustomStyle;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AdaptiveCard.prototype, \"hasBackground\", {\n        get: function () {\n            return true;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    AdaptiveCard.prototype.getJsonTypeName = function () {\n        return \"AdaptiveCard\";\n    };\n    AdaptiveCard.prototype.internalValidateProperties = function (context) {\n        _super.prototype.internalValidateProperties.call(this, context);\n        if (this.getValue(CardElement.typeNameProperty) !== \"AdaptiveCard\") {\n            context.addFailure(this, Enums.ValidationEvent.MissingCardType, strings_1.Strings.errors.invalidCardType());\n        }\n        if (!this.bypassVersionCheck && !this.version) {\n            context.addFailure(this, Enums.ValidationEvent.PropertyCantBeNull, strings_1.Strings.errors.propertyMustBeSet(\"version\"));\n        }\n        else if (!this.isVersionSupported()) {\n            context.addFailure(this, Enums.ValidationEvent.UnsupportedCardVersion, strings_1.Strings.errors.unsupportedCardVersion(this.version.toString(), this.maxVersion.toString()));\n        }\n    };\n    AdaptiveCard.prototype.render = function (target) {\n        var _this = this;\n        var renderedCard;\n        if (this.shouldFallback() && this._fallbackCard) {\n            this._fallbackCard.hostConfig = this.hostConfig;\n            renderedCard = this._fallbackCard.render();\n        }\n        else {\n            renderedCard = _super.prototype.render.call(this);\n            if (renderedCard) {\n                renderedCard.classList.add(this.hostConfig.makeCssClassName(\"ac-adaptiveCard\"));\n                // Having a tabIndex on the root container for a card can mess up accessibility in some scenarios.\n                // However, we've shipped this behavior before, and so can't just turn it off in a point release. For\n                // now, to unblock accessibility scenarios for our customers, we've got an option to turn it off. In a\n                // future release, we should strongly consider flipping the default such that we *don't* emit a tabIndex\n                // by default.\n                if (shared_1.GlobalSettings.setTabIndexAtCardRoot) {\n                    renderedCard.tabIndex = 0;\n                }\n                if (this.speak) {\n                    renderedCard.setAttribute(\"aria-label\", this.speak);\n                }\n                renderedCard.onmouseenter = function (ev) {\n                    _this.updateInputsVisualState(true /* hover */);\n                };\n                renderedCard.onmouseleave = function (ev) {\n                    _this.updateInputsVisualState(false /* hover */);\n                };\n                this.getRootElement().updateActionsEnabledState();\n            }\n        }\n        if (target) {\n            Utils.appendChild(target, renderedCard);\n            this.updateLayout();\n        }\n        var inputElements = this.getAllInputs();\n        document.onclick = function (event) {\n            inputElements.forEach(function (input) {\n                var _a, _b;\n                if (input instanceof ChoiceSetInput &&\n                    !((_a = input.renderedElement) === null || _a === void 0 ? void 0 : _a.contains(event.target))) {\n                    (_b = input\n                        .getDropdownElement()) === null || _b === void 0 ? void 0 : _b.classList.remove(_this.hostConfig.makeCssClassName(\"ac-choiceSetInput-filtered-dropdown-open\"));\n                }\n            });\n        };\n        return renderedCard;\n    };\n    AdaptiveCard.prototype.updateLayout = function (processChildren) {\n        if (processChildren === void 0) { processChildren = true; }\n        _super.prototype.updateLayout.call(this, processChildren);\n        if (shared_1.GlobalSettings.useAdvancedCardBottomTruncation && this.isDisplayed()) {\n            var padding = this.hostConfig.getEffectiveSpacing(Enums.Spacing.Default);\n            // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n            this[\"handleOverflow\"](this.renderedElement.offsetHeight - padding);\n        }\n    };\n    AdaptiveCard.prototype.shouldFallback = function () {\n        return _super.prototype.shouldFallback.call(this) || !this.isVersionSupported();\n    };\n    Object.defineProperty(AdaptiveCard.prototype, \"hasVisibleSeparator\", {\n        get: function () {\n            return false;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    AdaptiveCard.schemaUrl = \"http://adaptivecards.io/schemas/adaptive-card.json\";\n    //#region Schema\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    AdaptiveCard.$schemaProperty = new serialization_1.CustomProperty(serialization_1.Versions.v1_0, \"$schema\", function (sender, property, source, context) {\n        return AdaptiveCard.schemaUrl;\n    }, function (sender, prop, target, value, context) {\n        context.serializeValue(target, prop.name, AdaptiveCard.schemaUrl);\n    });\n    AdaptiveCard.versionProperty = new serialization_1.CustomProperty(serialization_1.Versions.v1_0, \"version\", function (sender, prop, source, context) {\n        var version = serialization_1.Version.parse(source[prop.name], context);\n        if (version === undefined) {\n            version = serialization_1.Versions.latest;\n            context.logParseEvent(sender, Enums.ValidationEvent.InvalidPropertyValue, strings_1.Strings.errors.invalidCardVersion(version.toString()));\n        }\n        return version;\n    }, function (sender, prop, target, value, context) {\n        if (value !== undefined) {\n            context.serializeValue(target, prop.name, value.toString());\n        }\n    }, serialization_1.Versions.v1_0);\n    AdaptiveCard.fallbackTextProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_0, \"fallbackText\");\n    AdaptiveCard.speakProperty = new serialization_1.StringProperty(serialization_1.Versions.v1_0, \"speak\");\n    AdaptiveCard.refreshProperty = new serialization_1.SerializableObjectProperty(serialization_1.Versions.v1_4, \"refresh\", RefreshDefinition, true);\n    AdaptiveCard.authenticationProperty = new serialization_1.SerializableObjectProperty(serialization_1.Versions.v1_4, \"authentication\", Authentication, true);\n    //#endregion\n    AdaptiveCard._haveWarnedAboutNoMarkdownProcessing = false;\n    __decorate([\n        (0, serialization_1.property)(AdaptiveCard.versionProperty)\n    ], AdaptiveCard.prototype, \"version\", void 0);\n    __decorate([\n        (0, serialization_1.property)(AdaptiveCard.fallbackTextProperty)\n    ], AdaptiveCard.prototype, \"fallbackText\", void 0);\n    __decorate([\n        (0, serialization_1.property)(AdaptiveCard.speakProperty)\n    ], AdaptiveCard.prototype, \"speak\", void 0);\n    __decorate([\n        (0, serialization_1.property)(AdaptiveCard.refreshProperty)\n    ], AdaptiveCard.prototype, \"refresh\", null);\n    __decorate([\n        (0, serialization_1.property)(AdaptiveCard.authenticationProperty)\n    ], AdaptiveCard.prototype, \"authentication\", void 0);\n    return AdaptiveCard;\n}(ContainerWithActions));\nexports.AdaptiveCard = AdaptiveCard;\nvar InlineAdaptiveCard = /** @class */ (function (_super) {\n    __extends(InlineAdaptiveCard, _super);\n    function InlineAdaptiveCard() {\n        //#region Schema\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.suppressStyle = false;\n        return _this;\n    }\n    InlineAdaptiveCard.prototype.getSchemaKey = function () {\n        return \"InlineAdaptiveCard\";\n    };\n    InlineAdaptiveCard.prototype.populateSchema = function (schema) {\n        _super.prototype.populateSchema.call(this, schema);\n        schema.remove(AdaptiveCard.$schemaProperty, AdaptiveCard.versionProperty);\n    };\n    //#endregion\n    InlineAdaptiveCard.prototype.getDefaultPadding = function () {\n        return new shared_1.PaddingDefinition(this.suppressStyle ? Enums.Spacing.None : Enums.Spacing.Padding, Enums.Spacing.Padding, this.suppressStyle ? Enums.Spacing.None : Enums.Spacing.Padding, Enums.Spacing.Padding);\n    };\n    Object.defineProperty(InlineAdaptiveCard.prototype, \"bypassVersionCheck\", {\n        get: function () {\n            return true;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(InlineAdaptiveCard.prototype, \"defaultStyle\", {\n        get: function () {\n            if (this.suppressStyle) {\n                return Enums.ContainerStyle.Default;\n            }\n            else {\n                return this.hostConfig.actions.showCard.style\n                    ? this.hostConfig.actions.showCard.style\n                    : Enums.ContainerStyle.Emphasis;\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    InlineAdaptiveCard.prototype.render = function (target) {\n        var renderedCard = _super.prototype.render.call(this, target);\n        if (renderedCard) {\n            renderedCard.setAttribute(\"aria-live\", \"polite\");\n            renderedCard.removeAttribute(\"tabindex\");\n        }\n        return renderedCard;\n    };\n    return InlineAdaptiveCard;\n}(AdaptiveCard));\nvar SerializationContext = /** @class */ (function (_super) {\n    __extends(SerializationContext, _super);\n    function SerializationContext() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._forbiddenTypes = new Set();\n        return _this;\n    }\n    SerializationContext.prototype.internalParseCardObject = function (parent, source, forbiddenTypes, allowFallback, createInstanceCallback, logParseEvent) {\n        var _this = this;\n        var result = undefined;\n        if (source && typeof source === \"object\") {\n            var oldForbiddenTypes_1 = new Set();\n            this._forbiddenTypes.forEach(function (type) {\n                oldForbiddenTypes_1.add(type);\n            });\n            forbiddenTypes.forEach(function (type) {\n                _this._forbiddenTypes.add(type);\n            });\n            var typeName = Utils.parseString(source[\"type\"]);\n            if (typeName && this._forbiddenTypes.has(typeName)) {\n                logParseEvent(typeName, Enums.TypeErrorType.ForbiddenType);\n            }\n            else {\n                var tryToFallback = false;\n                result = createInstanceCallback(typeName);\n                if (!result) {\n                    tryToFallback = shared_1.GlobalSettings.enableFallback && allowFallback;\n                    logParseEvent(typeName, Enums.TypeErrorType.UnknownType);\n                }\n                else {\n                    result.setParent(parent);\n                    result.parse(source, this);\n                    tryToFallback =\n                        shared_1.GlobalSettings.enableFallback && allowFallback && result.shouldFallback();\n                }\n                if (tryToFallback) {\n                    var fallback = source[\"fallback\"];\n                    if (!fallback && parent) {\n                        parent.setShouldFallback(true);\n                    }\n                    if (typeof fallback === \"string\" && fallback.toLowerCase() === \"drop\") {\n                        result = undefined;\n                    }\n                    else if (typeof fallback === \"object\") {\n                        result = this.internalParseCardObject(parent, fallback, forbiddenTypes, true, createInstanceCallback, logParseEvent);\n                    }\n                }\n            }\n            this._forbiddenTypes = oldForbiddenTypes_1;\n        }\n        return result;\n    };\n    SerializationContext.prototype.cardObjectParsed = function (o, source) {\n        if (o instanceof Action && this.onParseAction) {\n            this.onParseAction(o, source, this);\n        }\n        else if (o instanceof CardElement && this.onParseElement) {\n            this.onParseElement(o, source, this);\n        }\n    };\n    SerializationContext.prototype.shouldSerialize = function (o) {\n        if (o instanceof Action) {\n            return this.actionRegistry.findByName(o.getJsonTypeName()) !== undefined;\n        }\n        else if (o instanceof CardElement) {\n            return this.elementRegistry.findByName(o.getJsonTypeName()) !== undefined;\n        }\n        else {\n            return true;\n        }\n    };\n    SerializationContext.prototype.parseCardObject = function (parent, source, forbiddenTypeNames, allowFallback, createInstanceCallback, logParseEvent) {\n        var forbiddenTypes = new Set(forbiddenTypeNames);\n        var result = this.internalParseCardObject(parent, source, forbiddenTypes, allowFallback, createInstanceCallback, logParseEvent);\n        if (result !== undefined) {\n            this.cardObjectParsed(result, source);\n        }\n        return result;\n    };\n    SerializationContext.prototype.parseElement = function (parent, source, forbiddenTypes, allowFallback) {\n        var _this = this;\n        return this.parseCardObject(parent, source, forbiddenTypes, allowFallback, function (typeName) {\n            return _this.elementRegistry.createInstance(typeName, _this.targetVersion);\n        }, function (typeName, errorType) {\n            if (errorType === Enums.TypeErrorType.UnknownType) {\n                _this.logParseEvent(undefined, Enums.ValidationEvent.UnknownElementType, strings_1.Strings.errors.unknownElementType(typeName));\n            }\n            else {\n                _this.logParseEvent(undefined, Enums.ValidationEvent.ElementTypeNotAllowed, strings_1.Strings.errors.elementTypeNotAllowed(typeName));\n            }\n        });\n    };\n    SerializationContext.prototype.parseAction = function (parent, source, forbiddenActionTypes, allowFallback) {\n        var _this = this;\n        return this.parseCardObject(parent, source, forbiddenActionTypes, allowFallback, function (typeName) {\n            return _this.actionRegistry.createInstance(typeName, _this.targetVersion);\n        }, function (typeName, errorType) {\n            if (errorType === Enums.TypeErrorType.UnknownType) {\n                _this.logParseEvent(undefined, Enums.ValidationEvent.UnknownActionType, strings_1.Strings.errors.unknownActionType(typeName));\n            }\n            else {\n                _this.logParseEvent(undefined, Enums.ValidationEvent.ActionTypeNotAllowed, strings_1.Strings.errors.actionTypeNotAllowed(typeName));\n            }\n        });\n    };\n    Object.defineProperty(SerializationContext.prototype, \"elementRegistry\", {\n        get: function () {\n            var _a;\n            return (_a = this._elementRegistry) !== null && _a !== void 0 ? _a : registry_1.GlobalRegistry.elements;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    // Not using a property setter here because the setter should accept \"undefined\"\n    // whereas the getter should never return undefined.\n    SerializationContext.prototype.setElementRegistry = function (value) {\n        this._elementRegistry = value;\n    };\n    Object.defineProperty(SerializationContext.prototype, \"actionRegistry\", {\n        get: function () {\n            var _a;\n            return (_a = this._actionRegistry) !== null && _a !== void 0 ? _a : registry_1.GlobalRegistry.actions;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    // Not using a property setter here because the setter should accept \"undefined\"\n    // whereas the getter should never return undefined.\n    SerializationContext.prototype.setActionRegistry = function (value) {\n        this._actionRegistry = value;\n    };\n    return SerializationContext;\n}(serialization_1.BaseSerializationContext));\nexports.SerializationContext = SerializationContext;\nregistry_1.GlobalRegistry.defaultElements.register(\"Container\", Container);\nregistry_1.GlobalRegistry.defaultElements.register(\"TextBlock\", TextBlock);\nregistry_1.GlobalRegistry.defaultElements.register(\"RichTextBlock\", RichTextBlock, serialization_1.Versions.v1_2);\nregistry_1.GlobalRegistry.defaultElements.register(\"TextRun\", TextRun, serialization_1.Versions.v1_2);\nregistry_1.GlobalRegistry.defaultElements.register(\"Image\", Image);\nregistry_1.GlobalRegistry.defaultElements.register(\"ImageSet\", ImageSet);\nregistry_1.GlobalRegistry.defaultElements.register(\"Media\", Media, serialization_1.Versions.v1_1);\nregistry_1.GlobalRegistry.defaultElements.register(\"FactSet\", FactSet);\nregistry_1.GlobalRegistry.defaultElements.register(\"ColumnSet\", ColumnSet);\nregistry_1.GlobalRegistry.defaultElements.register(\"ActionSet\", ActionSet, serialization_1.Versions.v1_2);\nregistry_1.GlobalRegistry.defaultElements.register(\"Input.Text\", TextInput);\nregistry_1.GlobalRegistry.defaultElements.register(\"Input.Date\", DateInput);\nregistry_1.GlobalRegistry.defaultElements.register(\"Input.Time\", TimeInput);\nregistry_1.GlobalRegistry.defaultElements.register(\"Input.Number\", NumberInput);\nregistry_1.GlobalRegistry.defaultElements.register(\"Input.ChoiceSet\", ChoiceSetInput);\nregistry_1.GlobalRegistry.defaultElements.register(\"Input.Toggle\", ToggleInput);\nregistry_1.GlobalRegistry.defaultActions.register(OpenUrlAction.JsonTypeName, OpenUrlAction);\nregistry_1.GlobalRegistry.defaultActions.register(SubmitAction.JsonTypeName, SubmitAction);\nregistry_1.GlobalRegistry.defaultActions.register(ShowCardAction.JsonTypeName, ShowCardAction);\nregistry_1.GlobalRegistry.defaultActions.register(ToggleVisibilityAction.JsonTypeName, ToggleVisibilityAction, serialization_1.Versions.v1_2);\nregistry_1.GlobalRegistry.defaultActions.register(ExecuteAction.JsonTypeName, ExecuteAction, serialization_1.Versions.v1_4);\n"},"sourceMaps":{"js":{"version":3,"file":"card-elements.js","sourceRoot":"","sources":["../src/card-elements.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nimport * as Enums from \"./enums\";\nimport { CarouselEvent } from \"./carousel\";\nimport {\n    PaddingDefinition,\n    GlobalSettings,\n    SizeAndUnit,\n    SpacingDefinition,\n    ISeparationDefinition,\n    Dictionary,\n    StringWithSubstitutions,\n    ContentTypes,\n    IInput,\n    IResourceInformation\n} from \"./shared\";\nimport * as Utils from \"./utils\";\nimport {\n    HostConfig,\n    defaultHostConfig,\n    BaseTextDefinition,\n    FontTypeDefinition,\n    ColorSetDefinition,\n    TextColorDefinition,\n    ContainerStyleDefinition,\n    TextStyleDefinition\n} from \"./host-config\";\nimport * as TextFormatters from \"./text-formatters\";\nimport { CardObject, ValidationResults } from \"./card-object\";\nimport {\n    Versions,\n    Version,\n    property,\n    BaseSerializationContext,\n    SerializableObject,\n    SerializableObjectSchema,\n    StringProperty,\n    BoolProperty,\n    ValueSetProperty,\n    EnumProperty,\n    SerializableObjectCollectionProperty,\n    SerializableObjectProperty,\n    PixelSizeProperty,\n    NumProperty,\n    PropertyBag,\n    CustomProperty,\n    PropertyDefinition,\n    StringArrayProperty\n} from \"./serialization\";\nimport { CardObjectRegistry, GlobalRegistry } from \"./registry\";\nimport { Strings } from \"./strings\";\nimport { MenuItem, PopupMenu } from \"./controls\";\n\n\nfunction clearElement(element: HTMLElement) : void {\n    const trustedHtml = (typeof window === 'undefined') ? \"\" : (window.trustedTypes?.emptyHTML ?? \"\");\n    element.innerHTML = trustedHtml as string;\n}\n\nexport function renderSeparation(\n    hostConfig: HostConfig,\n    separationDefinition: ISeparationDefinition,\n    orientation: Enums.Orientation\n): HTMLElement | undefined {\n    if (\n        separationDefinition.spacing > 0 ||\n        (separationDefinition.lineThickness && separationDefinition.lineThickness > 0)\n    ) {\n        const separator = document.createElement(\"div\");\n        separator.className = hostConfig.makeCssClassName(\n            \"ac-\" +\n                (orientation === Enums.Orientation.Horizontal ? \"horizontal\" : \"vertical\") +\n                \"-separator\"\n        );\n        separator.setAttribute(\"aria-hidden\", \"true\");\n\n        const color = separationDefinition.lineColor\n            ? Utils.stringToCssColor(separationDefinition.lineColor)\n            : \"\";\n\n        if (orientation === Enums.Orientation.Horizontal) {\n            if (separationDefinition.lineThickness) {\n                separator.style.paddingTop = separationDefinition.spacing / 2 + \"px\";\n                separator.style.marginBottom = separationDefinition.spacing / 2 + \"px\";\n                separator.style.borderBottom =\n                    separationDefinition.lineThickness + \"px solid \" + color;\n            } else {\n                separator.style.height = separationDefinition.spacing + \"px\";\n            }\n        } else {\n            if (separationDefinition.lineThickness) {\n                separator.style.paddingLeft = separationDefinition.spacing / 2 + \"px\";\n                separator.style.marginRight = separationDefinition.spacing / 2 + \"px\";\n                separator.style.borderRight =\n                    separationDefinition.lineThickness + \"px solid \" + color;\n            } else {\n                separator.style.width = separationDefinition.spacing + \"px\";\n            }\n        }\n\n        separator.style.overflow = \"hidden\";\n        separator.style.flex = \"0 0 auto\";\n\n        return separator;\n    } else {\n        return undefined;\n    }\n}\n\nexport type CardElementHeight = \"auto\" | \"stretch\";\n\nexport abstract class CardElement extends CardObject {\n    //#region Schema\n\n    static readonly langProperty = new StringProperty(\n        Versions.v1_1,\n        \"lang\",\n        true,\n        /^[a-z]{2,3}$/gi\n    );\n    static readonly isVisibleProperty = new BoolProperty(Versions.v1_2, \"isVisible\", true);\n    static readonly separatorProperty = new BoolProperty(Versions.v1_0, \"separator\", false);\n    static readonly heightProperty = new ValueSetProperty(\n        Versions.v1_1,\n        \"height\",\n        [{ value: \"auto\" }, { value: \"stretch\" }],\n        \"auto\"\n    );\n    static readonly horizontalAlignmentProperty = new EnumProperty(\n        Versions.v1_0,\n        \"horizontalAlignment\",\n        Enums.HorizontalAlignment\n    );\n    static readonly spacingProperty = new EnumProperty(\n        Versions.v1_0,\n        \"spacing\",\n        Enums.Spacing,\n        Enums.Spacing.Default\n    );\n\n    @property(CardElement.horizontalAlignmentProperty)\n    horizontalAlignment?: Enums.HorizontalAlignment;\n\n    @property(CardElement.spacingProperty)\n    spacing: Enums.Spacing;\n\n    @property(CardElement.separatorProperty)\n    separator: boolean;\n\n    @property(CardElement.heightProperty)\n    height: CardElementHeight;\n\n    @property(CardElement.langProperty)\n    get lang(): string | undefined {\n        const lang = this.getValue(CardElement.langProperty);\n\n        if (lang) {\n            return lang;\n        } else {\n            if (this.parent) {\n                return this.parent.lang;\n            } else {\n                return undefined;\n            }\n        }\n    }\n\n    set lang(value: string | undefined) {\n        this.setValue(CardElement.langProperty, value);\n    }\n\n    @property(CardElement.isVisibleProperty)\n    get isVisible(): boolean {\n        return this.getValue(CardElement.isVisibleProperty);\n    }\n\n    set isVisible(value: boolean) {\n        // If the element is going to be hidden, reset any changes that were due\n        // to overflow truncation (this ensures that if the element is later\n        // un-hidden it has the right content)\n        if (GlobalSettings.useAdvancedCardBottomTruncation && !value) {\n            this.undoOverflowTruncation();\n        }\n\n        if (this.isVisible !== value) {\n            this.setValue(CardElement.isVisibleProperty, value);\n\n            this.updateRenderedElementVisibility();\n\n            if (this._renderedElement) {\n                raiseElementVisibilityChangedEvent(this);\n            }\n        }\n\n        if (this._renderedElement) {\n            this._renderedElement.setAttribute(\"aria-expanded\", value.toString());\n        }\n    }\n\n    //#endregion\n\n    private _hostConfig?: HostConfig;\n    private _separatorElement?: HTMLElement;\n    private _truncatedDueToOverflow: boolean = false;\n    private _defaultRenderedElementDisplayMode?: string;\n    private _padding?: PaddingDefinition;\n\n    private internalRenderSeparator(): HTMLElement | undefined {\n        const renderedSeparator = renderSeparation(\n            this.hostConfig,\n            {\n                spacing: this.hostConfig.getEffectiveSpacing(this.spacing),\n                lineThickness: this.separator ? this.hostConfig.separator.lineThickness : undefined,\n                lineColor: this.separator ? this.hostConfig.separator.lineColor : undefined\n            },\n            this.separatorOrientation\n        );\n\n        if (\n            GlobalSettings.alwaysBleedSeparators &&\n            renderedSeparator &&\n            this.separatorOrientation === Enums.Orientation.Horizontal\n        ) {\n            // Adjust separator's margins if the option to always bleed separators is turned on\n            const parentContainer = this.getParentContainer();\n\n            if (parentContainer && parentContainer.getEffectivePadding()) {\n                const parentPhysicalPadding = this.hostConfig.paddingDefinitionToSpacingDefinition(\n                    parentContainer.getEffectivePadding()\n                );\n\n                renderedSeparator.style.marginLeft = \"-\" + parentPhysicalPadding.left + \"px\";\n                renderedSeparator.style.marginRight = \"-\" + parentPhysicalPadding.right + \"px\";\n            }\n        }\n\n        return renderedSeparator;\n    }\n\n    private updateRenderedElementVisibility() {\n        const displayMode =\n            this.isDesignMode() || this.isVisible\n                ? this._defaultRenderedElementDisplayMode\n                : \"none\";\n\n        if (this._renderedElement) {\n            if (displayMode) {\n                this._renderedElement.style.display = displayMode;\n            } else {\n                this._renderedElement.style.removeProperty(\"display\");\n            }\n        }\n\n        if (this._separatorElement) {\n            if (this.parent && this.parent.isFirstElement(this)) {\n                this._separatorElement.style.display = \"none\";\n            } else {\n                if (displayMode) {\n                    this._separatorElement.style.display = displayMode;\n                } else {\n                    this._separatorElement.style.removeProperty(\"display\");\n                }\n            }\n        }\n    }\n\n    private hideElementDueToOverflow() {\n        if (this._renderedElement && this.isVisible) {\n            this._renderedElement.style.visibility = \"hidden\";\n\n            this.isVisible = false;\n            raiseElementVisibilityChangedEvent(this, false);\n        }\n    }\n\n    private showElementHiddenDueToOverflow() {\n        if (this._renderedElement && !this.isVisible) {\n            this._renderedElement.style.removeProperty(\"visibility\");\n\n            this.isVisible = true;\n            raiseElementVisibilityChangedEvent(this, false);\n        }\n    }\n\n    // Marked private to emulate internal access\n    private handleOverflow(maxHeight: number) {\n        if (this.isVisible || this.isHiddenDueToOverflow()) {\n            const handled = this.truncateOverflow(maxHeight);\n\n            // Even if we were unable to truncate the element to fit this time,\n            // it still could have been previously truncated\n            this._truncatedDueToOverflow = handled || this._truncatedDueToOverflow;\n\n            if (!handled) {\n                this.hideElementDueToOverflow();\n            } else if (handled && !this.isVisible) {\n                this.showElementHiddenDueToOverflow();\n            }\n        }\n    }\n\n    // Marked private to emulate internal access\n    private resetOverflow(): boolean {\n        let sizeChanged = false;\n\n        if (this._truncatedDueToOverflow) {\n            this.undoOverflowTruncation();\n            this._truncatedDueToOverflow = false;\n            sizeChanged = true;\n        }\n\n        if (this.isHiddenDueToOverflow()) {\n            this.showElementHiddenDueToOverflow();\n        }\n\n        return sizeChanged;\n    }\n\n    protected getDefaultSerializationContext(): BaseSerializationContext {\n        return new SerializationContext();\n    }\n\n    protected createPlaceholderElement(): HTMLElement {\n        const styleDefinition = this.getEffectiveStyleDefinition();\n        const foregroundCssColor = Utils.stringToCssColor(\n            styleDefinition.foregroundColors.default.subtle\n        );\n\n        const element = document.createElement(\"div\");\n        element.style.border = \"1px dashed \" + foregroundCssColor;\n        element.style.padding = \"4px\";\n        element.style.minHeight = \"32px\";\n        element.style.fontSize = \"10px\";\n\n        if (foregroundCssColor) {\n            element.style.color = foregroundCssColor;\n        }\n\n        element.innerText = Strings.defaults.emptyElementText(this.getJsonTypeName());\n\n        return element;\n    }\n\n    protected adjustRenderedElementSize(renderedElement: HTMLElement) {\n        if (this.height === \"auto\") {\n            renderedElement.style.flex = \"0 0 auto\";\n        } else {\n            renderedElement.style.flex = \"1 1 auto\";\n        }\n    }\n\n    /*\n     * Called when mouse enters or leaves the card.\n     * Inputs elements need to update their visual state in such events like showing or hiding borders etc.\n     * It calls Input.updateVisualState(eventType) for all inputs.\n     * This method on input (updateVisualState) is supposed to be called from card level on mouse events.\n     */\n    protected updateInputsVisualState(hover: boolean) {\n        const allInputs: Input[] = this.getAllInputs();\n        const inputEventType = !!hover ? InputEventType.MouseEnterOnCard : InputEventType.MouseLeaveOnCard;\n        allInputs.forEach((input) => input.updateVisualState(inputEventType));\n    }\n\n    protected isDisplayed(): boolean {\n        return (\n            this._renderedElement !== undefined &&\n            this.isVisible &&\n            this._renderedElement.offsetHeight > 0\n        );\n    }\n\n    protected abstract internalRender(): HTMLElement | undefined;\n\n    protected overrideInternalRender(): HTMLElement | undefined {\n        return this.internalRender();\n    }\n\n    protected applyPadding() {\n        if (this.separatorElement && this.separatorOrientation === Enums.Orientation.Horizontal) {\n            if (GlobalSettings.alwaysBleedSeparators && !this.isBleeding()) {\n                const padding = new PaddingDefinition();\n\n                this.getImmediateSurroundingPadding(padding);\n\n                const physicalPadding =\n                    this.hostConfig.paddingDefinitionToSpacingDefinition(padding);\n\n                this.separatorElement.style.marginLeft = \"-\" + physicalPadding.left + \"px\";\n                this.separatorElement.style.marginRight = \"-\" + physicalPadding.right + \"px\";\n            } else {\n                this.separatorElement.style.marginRight = \"0\";\n                this.separatorElement.style.marginLeft = \"0\";\n            }\n        }\n    }\n\n    /*\n     * Called when this element overflows the bottom of the card.\n     * maxHeight will be the amount of space still available on the card (0 if\n     * the element is fully off the card).\n     */\n    protected truncateOverflow(_maxHeight: number): boolean {\n        // Child implementations should return true if the element handled\n        // the truncation request such that its content fits within maxHeight,\n        // false if the element should fall back to being hidden\n        return false;\n    }\n\n    /*\n     * This should reverse any changes performed in truncateOverflow().\n     */\n    protected undoOverflowTruncation() {\n        return;\n    }\n\n    protected getDefaultPadding(): PaddingDefinition {\n        return new PaddingDefinition();\n    }\n\n    protected getHasBackground(ignoreBackgroundImages: boolean = false): boolean {\n        return false;\n    }\n\n    protected getHasBorder(): boolean {\n        return false;\n    }\n\n    protected getPadding(): PaddingDefinition | undefined {\n        return this._padding;\n    }\n\n    protected setPadding(value: PaddingDefinition | undefined) {\n        this._padding = value;\n    }\n\n    protected shouldSerialize(context: SerializationContext): boolean {\n        return context.elementRegistry.findByName(this.getJsonTypeName()) !== undefined;\n    }\n\n    protected get useDefaultSizing(): boolean {\n        return true;\n    }\n\n    protected get separatorOrientation(): Enums.Orientation {\n        return Enums.Orientation.Horizontal;\n    }\n\n    protected get defaultStyle(): string {\n        return Enums.ContainerStyle.Default;\n    }\n\n    customCssSelector?: string;\n\n    parse(source: any, context?: SerializationContext) {\n        super.parse(source, context ? context : new SerializationContext());\n    }\n\n    asString(): string | undefined {\n        return \"\";\n    }\n\n    isBleeding(): boolean {\n        return false;\n    }\n\n    getEffectiveStyle(): string {\n        if (this.parent) {\n            return this.parent.getEffectiveStyle();\n        }\n\n        return this.defaultStyle;\n    }\n\n    getEffectiveStyleDefinition(): ContainerStyleDefinition {\n        return this.hostConfig.containerStyles.getStyleByName(this.getEffectiveStyle());\n    }\n\n    getEffectiveTextStyleDefinition(): TextStyleDefinition {\n        if (this.parent) {\n            return this.parent.getEffectiveTextStyleDefinition();\n        }\n\n        return this.hostConfig.textStyles.default;\n    }\n\n    getForbiddenActionTypes(): ActionType[] {\n        return [];\n    }\n\n    getImmediateSurroundingPadding(\n        result: PaddingDefinition,\n        processTop: boolean = true,\n        processRight: boolean = true,\n        processBottom: boolean = true,\n        processLeft: boolean = true\n    ) {\n        if (this.parent) {\n            let doProcessTop = processTop && this.parent.isTopElement(this);\n            let doProcessRight = processRight && this.parent.isRightMostElement(this);\n            let doProcessBottom = processBottom && this.parent.isBottomElement(this);\n            let doProcessLeft = processLeft && this.parent.isLeftMostElement(this);\n\n            const effectivePadding = this.parent.getEffectivePadding();\n\n            if (effectivePadding) {\n                if (doProcessTop && effectivePadding.top !== Enums.Spacing.None) {\n                    result.top = effectivePadding.top;\n\n                    doProcessTop = false;\n                }\n\n                if (doProcessRight && effectivePadding.right !== Enums.Spacing.None) {\n                    result.right = effectivePadding.right;\n\n                    doProcessRight = false;\n                }\n\n                if (doProcessBottom && effectivePadding.bottom !== Enums.Spacing.None) {\n                    result.bottom = effectivePadding.bottom;\n\n                    doProcessBottom = false;\n                }\n\n                if (doProcessLeft && effectivePadding.left !== Enums.Spacing.None) {\n                    result.left = effectivePadding.left;\n\n                    doProcessLeft = false;\n                }\n            }\n\n            if (doProcessTop || doProcessRight || doProcessBottom || doProcessLeft) {\n                this.parent.getImmediateSurroundingPadding(\n                    result,\n                    doProcessTop,\n                    doProcessRight,\n                    doProcessBottom,\n                    doProcessLeft\n                );\n            }\n        }\n    }\n\n    getActionCount(): number {\n        return 0;\n    }\n\n    getActionAt(index: number): Action | undefined {\n        throw new Error(Strings.errors.indexOutOfRange(index));\n    }\n\n    indexOfAction(action: Action): number {\n        for (let i = 0; i < this.getActionCount(); i++) {\n            if (this.getActionAt(i) === action) {\n                return i;\n            }\n        }\n\n        return -1;\n    }\n\n    remove(): boolean {\n        if (this.parent && this.parent instanceof CardElementContainer) {\n            return this.parent.removeItem(this);\n        }\n\n        return false;\n    }\n\n    render(): HTMLElement | undefined {\n        this._renderedElement = this.overrideInternalRender();\n        this._separatorElement = this.internalRenderSeparator();\n\n        if (this._renderedElement) {\n            if (this.id) {\n                this._renderedElement.id = this.id;\n            }\n\n            if (this.customCssSelector) {\n                this._renderedElement.classList.add(this.customCssSelector);\n            }\n\n            this._renderedElement.style.boxSizing = \"border-box\";\n            this._defaultRenderedElementDisplayMode = this._renderedElement.style.display\n                ? this._renderedElement.style.display\n                : undefined;\n\n            this.adjustRenderedElementSize(this._renderedElement);\n            this.updateLayout(false);\n        } else if (this.isDesignMode()) {\n            this._renderedElement = this.createPlaceholderElement();\n        }\n\n        return this._renderedElement;\n    }\n\n    updateLayout(_processChildren: boolean = true) {\n        this.updateRenderedElementVisibility();\n        this.applyPadding();\n    }\n\n    updateActionsEnabledState() {\n        const allActions = this.getRootElement().getAllActions();\n\n        for (let action of allActions) {\n            action.updateEnabledState();\n        }\n    }\n\n    indexOf(_cardElement: CardElement): number {\n        return -1;\n    }\n\n    isDesignMode(): boolean {\n        const rootElement = this.getRootElement();\n\n        return rootElement instanceof AdaptiveCard && rootElement.designMode;\n    }\n\n    isFirstElement(_element: CardElement): boolean {\n        return true;\n    }\n\n    isLastElement(_element: CardElement): boolean {\n        return true;\n    }\n\n    isAtTheVeryLeft(): boolean {\n        return this.parent\n            ? this.parent.isLeftMostElement(this) && this.parent.isAtTheVeryLeft()\n            : true;\n    }\n\n    isAtTheVeryRight(): boolean {\n        return this.parent\n            ? this.parent.isRightMostElement(this) && this.parent.isAtTheVeryRight()\n            : true;\n    }\n\n    isAtTheVeryTop(): boolean {\n        return this.parent\n            ? this.parent.isFirstElement(this) && this.parent.isAtTheVeryTop()\n            : true;\n    }\n\n    isAtTheVeryBottom(): boolean {\n        return this.parent\n            ? this.parent.isLastElement(this) && this.parent.isAtTheVeryBottom()\n            : true;\n    }\n\n    isBleedingAtTop(): boolean {\n        return false;\n    }\n\n    isBleedingAtBottom(): boolean {\n        return false;\n    }\n\n    isLeftMostElement(_element: CardElement): boolean {\n        return true;\n    }\n\n    isRightMostElement(_element: CardElement): boolean {\n        return true;\n    }\n\n    isTopElement(element: CardElement): boolean {\n        return this.isFirstElement(element);\n    }\n\n    isBottomElement(element: CardElement): boolean {\n        return this.isLastElement(element);\n    }\n\n    isHiddenDueToOverflow(): boolean {\n        return (\n            this._renderedElement !== undefined &&\n            this._renderedElement.style.visibility === \"hidden\"\n        );\n    }\n\n    getRootElement(): CardElement {\n        return this.getRootObject() as CardElement;\n    }\n\n    getParentContainer(): Container | undefined {\n        let currentElement = this.parent;\n\n        while (currentElement) {\n            if (currentElement instanceof Container) {\n                return currentElement;\n            }\n\n            currentElement = currentElement.parent;\n        }\n\n        return undefined;\n    }\n\n    getAllInputs(processActions: boolean = true): Input[] {\n        return [];\n    }\n\n    getAllActions(): Action[] {\n        const result: Action[] = [];\n\n        for (let i = 0; i < this.getActionCount(); i++) {\n            let action = this.getActionAt(i);\n\n            if (action) {\n                result.push(action);\n            }\n        }\n\n        return result;\n    }\n\n    getResourceInformation(): IResourceInformation[] {\n        return [];\n    }\n\n    getElementById(id: string): CardElement | undefined {\n        return this.id === id ? this : undefined;\n    }\n\n    getActionById(_id: string): Action | undefined {\n        return undefined;\n    }\n    \n    getElementByIdFromAction(id: string): CardElement | undefined {\n        let result = undefined;\n        for (let i = 0; i < this.getActionCount(); i++) {\n            const action = this.getActionAt(i);\n\n            if (action instanceof ShowCardAction) {\n                result = action.card.getElementById(id);\n\n                if (result) {\n                    break;\n                }\n            }\n        }\n        return result;\n    }\n\n    getEffectivePadding(): PaddingDefinition {\n        const padding = this.getPadding();\n\n        return padding ? padding : this.getDefaultPadding();\n    }\n\n    getEffectiveHorizontalAlignment(): Enums.HorizontalAlignment {\n        if (this.horizontalAlignment !== undefined) {\n            return this.horizontalAlignment;\n        }\n\n        if (this.parent) {\n            return this.parent.getEffectiveHorizontalAlignment();\n        }\n\n        return Enums.HorizontalAlignment.Left;\n    }\n\n    get hostConfig(): HostConfig {\n        if (this._hostConfig) {\n            return this._hostConfig;\n        } else {\n            if (this.parent) {\n                return this.parent.hostConfig;\n            } else {\n                return defaultHostConfig;\n            }\n        }\n    }\n\n    set hostConfig(value: HostConfig) {\n        this._hostConfig = value;\n    }\n\n    get index(): number {\n        if (this.parent) {\n            return this.parent.indexOf(this);\n        } else {\n            return 0;\n        }\n    }\n\n    get isInteractive(): boolean {\n        return false;\n    }\n\n    get isStandalone(): boolean {\n        return true;\n    }\n\n    get isInline(): boolean {\n        return false;\n    }\n\n    get hasVisibleSeparator(): boolean {\n        if (this.parent && this.separatorElement) {\n            return !this.parent.isFirstElement(this) && (this.isVisible || this.isDesignMode());\n        } else {\n            return false;\n        }\n    }\n\n    get separatorElement(): HTMLElement | undefined {\n        return this._separatorElement;\n    }\n\n    get parent(): CardElement | undefined {\n        return <CardElement>this._parent;\n    }\n}\n\nexport class ActionProperty extends PropertyDefinition {\n    parse(\n        sender: SerializableObject,\n        source: PropertyBag,\n        context: SerializationContext\n    ): Action | undefined {\n        const parent = <CardElement>sender;\n\n        return context.parseAction(\n            parent,\n            source[this.name],\n            this.forbiddenActionTypes,\n            parent.isDesignMode()\n        );\n    }\n\n    toJSON(\n        sender: SerializableObject,\n        target: PropertyBag,\n        value: Action | undefined,\n        context: SerializationContext\n    ) {\n        context.serializeValue(\n            target,\n            this.name,\n            value ? value.toJSON(context) : undefined,\n            undefined,\n            true\n        );\n    }\n\n    constructor(\n        readonly targetVersion: Version,\n        readonly name: string,\n        readonly forbiddenActionTypes: string[] = []\n    ) {\n        super(targetVersion, name, undefined);\n    }\n}\n\nexport abstract class BaseTextBlock extends CardElement {\n    //#region Schema\n\n    static readonly textProperty = new StringProperty(Versions.v1_0, \"text\", true);\n    static readonly sizeProperty = new EnumProperty(Versions.v1_0, \"size\", Enums.TextSize);\n    static readonly weightProperty = new EnumProperty(Versions.v1_0, \"weight\", Enums.TextWeight);\n    static readonly colorProperty = new EnumProperty(Versions.v1_0, \"color\", Enums.TextColor);\n    static readonly isSubtleProperty = new BoolProperty(Versions.v1_0, \"isSubtle\");\n    static readonly fontTypeProperty = new EnumProperty(Versions.v1_2, \"fontType\", Enums.FontType);\n    static readonly selectActionProperty = new ActionProperty(Versions.v1_1, \"selectAction\", [\n        \"Action.ShowCard\"\n    ]);\n\n    protected populateSchema(schema: SerializableObjectSchema) {\n        super.populateSchema(schema);\n\n        // selectAction is declared on BaseTextBlock but is only exposed on TextRun,\n        // so the property is removed from the BaseTextBlock schema.\n        schema.remove(BaseTextBlock.selectActionProperty);\n    }\n\n    @property(BaseTextBlock.sizeProperty)\n    size?: Enums.TextSize;\n\n    @property(BaseTextBlock.weightProperty)\n    weight?: Enums.TextWeight;\n\n    @property(BaseTextBlock.colorProperty)\n    color?: Enums.TextColor;\n\n    @property(BaseTextBlock.fontTypeProperty)\n    fontType?: Enums.FontType;\n\n    @property(BaseTextBlock.isSubtleProperty)\n    isSubtle?: boolean;\n\n    @property(BaseTextBlock.textProperty)\n    get text(): string | undefined {\n        return this.getValue(BaseTextBlock.textProperty);\n    }\n\n    set text(value: string | undefined) {\n        this.setText(value);\n    }\n\n    @property(BaseTextBlock.selectActionProperty)\n    selectAction?: Action;\n\n    //#endregion\n\n    protected getFontSize(fontType: FontTypeDefinition): number {\n        switch (this.effectiveSize) {\n            case Enums.TextSize.Small:\n                return fontType.fontSizes.small;\n            case Enums.TextSize.Medium:\n                return fontType.fontSizes.medium;\n            case Enums.TextSize.Large:\n                return fontType.fontSizes.large;\n            case Enums.TextSize.ExtraLarge:\n                return fontType.fontSizes.extraLarge;\n            default:\n                return fontType.fontSizes.default;\n        }\n    }\n\n    protected getColorDefinition(\n        colorSet: ColorSetDefinition,\n        color: Enums.TextColor\n    ): TextColorDefinition {\n        switch (color) {\n            case Enums.TextColor.Accent:\n                return colorSet.accent;\n            case Enums.TextColor.Dark:\n                return colorSet.dark;\n            case Enums.TextColor.Light:\n                return colorSet.light;\n            case Enums.TextColor.Good:\n                return colorSet.good;\n            case Enums.TextColor.Warning:\n                return colorSet.warning;\n            case Enums.TextColor.Attention:\n                return colorSet.attention;\n            default:\n                return colorSet.default;\n        }\n    }\n\n    protected setText(value: string | undefined) {\n        this.setValue(BaseTextBlock.textProperty, value);\n    }\n\n    ariaHidden: boolean = false;\n\n    constructor(text?: string) {\n        super();\n\n        if (text) {\n            this.text = text;\n        }\n    }\n\n    init(textDefinition: BaseTextDefinition) {\n        this.size = textDefinition.size;\n        this.weight = textDefinition.weight;\n        this.color = textDefinition.color;\n        this.isSubtle = textDefinition.isSubtle;\n    }\n\n    asString(): string | undefined {\n        return this.text;\n    }\n\n    applyStylesTo(targetElement: HTMLElement) {\n        const fontType = this.hostConfig.getFontTypeDefinition(this.effectiveFontType);\n\n        if (fontType.fontFamily) {\n            targetElement.style.fontFamily = fontType.fontFamily;\n        }\n\n        let fontSize: number;\n\n        switch (this.effectiveSize) {\n            case Enums.TextSize.Small:\n                fontSize = fontType.fontSizes.small;\n                break;\n            case Enums.TextSize.Medium:\n                fontSize = fontType.fontSizes.medium;\n                break;\n            case Enums.TextSize.Large:\n                fontSize = fontType.fontSizes.large;\n                break;\n            case Enums.TextSize.ExtraLarge:\n                fontSize = fontType.fontSizes.extraLarge;\n                break;\n            default:\n                fontSize = fontType.fontSizes.default;\n                break;\n        }\n\n        targetElement.style.fontSize = fontSize + \"px\";\n\n        const colorDefinition = this.getColorDefinition(\n            this.getEffectiveStyleDefinition().foregroundColors,\n            this.effectiveColor\n        );\n\n        const targetColor = Utils.stringToCssColor(\n            this.effectiveIsSubtle ? colorDefinition.subtle : colorDefinition.default\n        );\n        if (targetColor) {\n            targetElement.style.color = targetColor;\n        }\n\n        let fontWeight: number;\n\n        switch (this.effectiveWeight) {\n            case Enums.TextWeight.Lighter:\n                fontWeight = fontType.fontWeights.lighter;\n                break;\n            case Enums.TextWeight.Bolder:\n                fontWeight = fontType.fontWeights.bolder;\n                break;\n            default:\n                fontWeight = fontType.fontWeights.default;\n                break;\n        }\n\n        targetElement.style.fontWeight = fontWeight.toString();\n\n        if (this.ariaHidden) {\n            targetElement.setAttribute(\"aria-hidden\", \"true\");\n        }\n    }\n\n    getAllActions(): Action[] {\n        const result = super.getAllActions();\n\n        if (this.selectAction) {\n            result.push(this.selectAction);\n        }\n\n        return result;\n    }\n\n    get effectiveColor(): Enums.TextColor {\n        return this.color !== undefined ? this.color : this.getEffectiveTextStyleDefinition().color;\n    }\n\n    get effectiveFontType(): Enums.FontType {\n        return this.fontType !== undefined\n            ? this.fontType\n            : this.getEffectiveTextStyleDefinition().fontType;\n    }\n\n    get effectiveIsSubtle(): boolean {\n        return this.isSubtle !== undefined\n            ? this.isSubtle\n            : this.getEffectiveTextStyleDefinition().isSubtle;\n    }\n\n    get effectiveSize(): Enums.TextSize {\n        return this.size !== undefined ? this.size : this.getEffectiveTextStyleDefinition().size;\n    }\n\n    get effectiveWeight(): Enums.TextWeight {\n        return this.weight !== undefined\n            ? this.weight\n            : this.getEffectiveTextStyleDefinition().weight;\n    }\n}\n\nexport type TextBlockStyle = \"default\" | \"heading\" | \"columnHeader\";\n\nexport class TextBlock extends BaseTextBlock {\n    //#region Schema\n\n    static readonly wrapProperty = new BoolProperty(Versions.v1_0, \"wrap\", false);\n    static readonly maxLinesProperty = new NumProperty(Versions.v1_0, \"maxLines\");\n    static readonly styleProperty = new ValueSetProperty(Versions.v1_5, \"style\", [\n        { value: \"default\" },\n        { value: \"columnHeader\" },\n        { value: \"heading\" }\n    ]);\n\n    @property(TextBlock.wrapProperty)\n    wrap: boolean = false;\n\n    @property(TextBlock.maxLinesProperty)\n    maxLines?: number;\n\n    @property(TextBlock.styleProperty)\n    style?: TextBlockStyle;\n\n    //#endregion\n\n    private _computedLineHeight: number;\n    private _originalInnerHtml: string;\n    private _processedText?: string;\n    private _treatAsPlainText: boolean = true;\n\n    private restoreOriginalContent() {\n        if (this.renderedElement !== undefined) {\n            if (this.maxLines && this.maxLines > 0) {\n                this.renderedElement.style.maxHeight =\n                    this._computedLineHeight * this.maxLines + \"px\";\n            }\n\n            const originalHtml = TextBlock._ttRoundtripPolicy?.createHTML(this._originalInnerHtml) ?? this._originalInnerHtml;\n            this.renderedElement.innerHTML = originalHtml as string;\n        }\n    }\n\n    private truncateIfSupported(maxHeight: number): boolean {\n        if (this.renderedElement !== undefined) {\n            // For now, only truncate TextBlocks that contain just a single\n            // paragraph -- since the maxLines calculation doesn't take into\n            // account Markdown lists\n            const children = this.renderedElement.children;\n            const isTextOnly = !children.length;\n            const truncationSupported =\n                isTextOnly ||\n                (children.length === 1 && (<HTMLElement>children[0]).tagName.toLowerCase() === \"p\" && !(<HTMLElement>children[0]).children.length);\n\n            if (truncationSupported) {\n                const element = isTextOnly ? this.renderedElement : <HTMLElement>children[0];\n\n                Utils.truncateText(element, maxHeight, this._computedLineHeight);\n\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    // Markdown processing is handled outside of Adaptive Cards. It's up to the host to ensure that markdown is safely\n    // processed.\n    private static readonly _ttMarkdownPolicy = (typeof window === 'undefined') ? undefined : window.trustedTypes?.createPolicy(\n        \"adaptivecards#markdownPassthroughPolicy\",\n        { createHTML: (value) => value }\n    );\n\n    // When \"advanced\" truncation is enabled (see GlobalSettings.useAdvancedCardBottomTruncation and\n    // GlobalSettings.useAdvancedTextBlockTruncation), we store the original pre-truncation content in\n    // _originalInnerHtml so that we can restore/recalculate truncation later if space availability has changed (see\n    // TextBlock.restoreOriginalContent())\n    private static readonly _ttRoundtripPolicy = (typeof window === 'undefined') ? undefined : window.trustedTypes?.createPolicy(\n        \"adaptivecards#restoreContentsPolicy\",\n        { createHTML: (value) => value }\n    );\n\n    protected setText(value: string) {\n        super.setText(value);\n\n        this._processedText = undefined;\n    }\n\n    protected internalRender(): HTMLElement | undefined {\n        this._processedText = undefined;\n\n        if (this.text) {\n            const preProcessedText = this.preProcessPropertyValue(BaseTextBlock.textProperty);\n            const hostConfig = this.hostConfig;\n\n            let element: HTMLElement;\n\n            if (this.forElementId) {\n                const labelElement = document.createElement(\"label\");\n                labelElement.htmlFor = this.forElementId;\n\n                element = labelElement;\n            } else {\n                element = document.createElement(\"div\");\n            }\n\n            element.classList.add(hostConfig.makeCssClassName(\"ac-textBlock\"));\n            element.style.overflow = \"hidden\";\n\n            this.applyStylesTo(element);\n\n            if (this.style === \"heading\") {\n                element.setAttribute(\"role\", \"heading\");\n\n                const headingLevel = this.hostConfig.textBlock.headingLevel;\n\n                if (headingLevel !== undefined && headingLevel > 0) {\n                    element.setAttribute(\"aria-level\", headingLevel.toString());\n                }\n            }\n\n            if (this.selectAction && hostConfig.supportsInteractivity) {\n                element.onclick = (e) => {\n                    if (this.selectAction && this.selectAction.isEffectivelyEnabled()) {\n                        e.preventDefault();\n                        e.cancelBubble = true;\n\n                        this.selectAction.execute();\n                    }\n                };\n\n                this.selectAction.setupElementForAccessibility(element);\n\n                if (this.selectAction.isEffectivelyEnabled()) {\n                    element.classList.add(hostConfig.makeCssClassName(\"ac-selectable\"));\n                }\n            }\n\n            if (!this._processedText) {\n                this._treatAsPlainText = true;\n\n                let formattedText = TextFormatters.formatText(this.lang, preProcessedText);\n\n                if (this.useMarkdown && formattedText) {\n                    if (GlobalSettings.allowMarkForTextHighlighting) {\n                        formattedText = formattedText\n                            .replace(/<mark>/g, \"===\")\n                            .replace(/<\\/mark>/g, \"/==/\");\n                    }\n\n                    const markdownProcessingResult = AdaptiveCard.applyMarkdown(formattedText);\n\n                    if (\n                        markdownProcessingResult.didProcess &&\n                        markdownProcessingResult.outputHtml\n                    ) {\n                        this._processedText = markdownProcessingResult.outputHtml;\n                        this._treatAsPlainText = false;\n\n                        // Only process <mark> tag if markdown processing was applied because\n                        // markdown processing is also responsible for sanitizing the input string\n                        if (GlobalSettings.allowMarkForTextHighlighting && this._processedText) {\n                            let markStyle: string = \"\";\n                            const effectiveStyle = this.getEffectiveStyleDefinition();\n\n                            if (effectiveStyle.highlightBackgroundColor) {\n                                markStyle +=\n                                    \"background-color: \" +\n                                    effectiveStyle.highlightBackgroundColor +\n                                    \";\";\n                            }\n\n                            if (effectiveStyle.highlightForegroundColor) {\n                                markStyle +=\n                                    \"color: \" + effectiveStyle.highlightForegroundColor + \";\";\n                            }\n\n                            if (markStyle) {\n                                markStyle = 'style=\"' + markStyle + '\"';\n                            }\n\n                            this._processedText = this._processedText\n                                .replace(/===/g, \"<mark \" + markStyle + \">\")\n                                .replace(/\\/==\\//g, \"</mark>\");\n                        }\n                    } else {\n                        this._processedText = formattedText;\n                        this._treatAsPlainText = true;\n                    }\n                } else {\n                    this._processedText = formattedText;\n                    this._treatAsPlainText = true;\n                }\n            }\n\n            if (!this._processedText) {\n                this._processedText = \"\";\n            }\n\n            if (this._treatAsPlainText) {\n                element.innerText = this._processedText;\n            } else {\n                const processedHtml =\n                    TextBlock._ttMarkdownPolicy?.createHTML(this._processedText) ??\n                    this._processedText;\n                element.innerHTML = processedHtml as string;\n            }\n\n            if (element.firstElementChild instanceof HTMLElement) {\n                const firstElementChild = element.firstElementChild;\n                firstElementChild.style.marginTop = \"0px\";\n                firstElementChild.style.width = \"100%\";\n\n                if (!this.wrap) {\n                    firstElementChild.style.overflow = \"hidden\";\n                    firstElementChild.style.textOverflow = \"ellipsis\";\n                }\n            }\n\n            if (element.lastElementChild instanceof HTMLElement) {\n                element.lastElementChild.style.marginBottom = \"0px\";\n            }\n\n            const anchors = element.getElementsByTagName(\"a\");\n\n            for (const anchor of Array.from(anchors)) {\n                anchor.classList.add(hostConfig.makeCssClassName(\"ac-anchor\"));\n                anchor.target = \"_blank\";\n                anchor.onclick = (e: MouseEvent) => {\n                    if (raiseAnchorClickedEvent(this, anchor, e)) {\n                        e.preventDefault();\n                        e.cancelBubble = true;\n                    }\n                };\n                anchor.oncontextmenu = (e: MouseEvent) => {\n                    if (raiseAnchorClickedEvent(this, anchor, e)) {\n                        e.preventDefault();\n                        e.cancelBubble = true;\n\n                        return false;\n                    }\n\n                    return true;\n                };\n            }\n\n            if (this.wrap) {\n                element.style.wordWrap = \"break-word\";\n\n                if (this.maxLines && this.maxLines > 0) {\n                    element.style.overflow = \"hidden\";\n\n                    if (Utils.isInternetExplorer() || !GlobalSettings.useWebkitLineClamp) {\n                        element.style.maxHeight = this._computedLineHeight * this.maxLines + \"px\";\n                    } else {\n                        // While non standard, --webkit-line-clamp works in every browser (except IE)\n                        // and is a great solution to support the maxLines feature with ellipsis\n                        // truncation. With --webkit-line-clamp there is need to use explicit line heights\n                        element.style.removeProperty(\"line-height\");\n                        element.style.display = \"-webkit-box\";\n                        element.style.webkitBoxOrient = \"vertical\";\n                        element.style.webkitLineClamp = this.maxLines.toString();\n                    }\n                }\n            } else {\n                element.style.whiteSpace = \"nowrap\";\n                element.style.textOverflow = \"ellipsis\";\n            }\n\n            if (\n                GlobalSettings.useAdvancedTextBlockTruncation ||\n                GlobalSettings.useAdvancedCardBottomTruncation\n            ) {\n                this._originalInnerHtml = element.innerHTML;\n            }\n\n            return element;\n        } else {\n            return undefined;\n        }\n    }\n\n    protected truncateOverflow(maxHeight: number): boolean {\n        if (maxHeight >= this._computedLineHeight) {\n            return this.truncateIfSupported(maxHeight);\n        }\n\n        return false;\n    }\n\n    protected undoOverflowTruncation() {\n        this.restoreOriginalContent();\n\n        if (GlobalSettings.useAdvancedTextBlockTruncation && this.maxLines) {\n            const maxHeight = this._computedLineHeight * this.maxLines;\n\n            this.truncateIfSupported(maxHeight);\n        }\n    }\n\n    useMarkdown: boolean = true;\n    forElementId?: string;\n\n    applyStylesTo(targetElement: HTMLElement) {\n        super.applyStylesTo(targetElement);\n\n        switch (this.getEffectiveHorizontalAlignment()) {\n            case Enums.HorizontalAlignment.Center:\n                targetElement.style.textAlign = \"center\";\n                break;\n            case Enums.HorizontalAlignment.Right:\n                targetElement.style.textAlign = \"end\";\n                break;\n            default:\n                targetElement.style.textAlign = \"start\";\n                break;\n        }\n\n        const lineHeights = this.hostConfig.lineHeights;\n\n        if (lineHeights) {\n            switch (this.effectiveSize) {\n                case Enums.TextSize.Small:\n                    this._computedLineHeight = lineHeights.small;\n                    break;\n                case Enums.TextSize.Medium:\n                    this._computedLineHeight = lineHeights.medium;\n                    break;\n                case Enums.TextSize.Large:\n                    this._computedLineHeight = lineHeights.large;\n                    break;\n                case Enums.TextSize.ExtraLarge:\n                    this._computedLineHeight = lineHeights.extraLarge;\n                    break;\n                default:\n                    this._computedLineHeight = lineHeights.default;\n                    break;\n            }\n        } else {\n            // Looks like 1.33 is the magic number to compute line-height\n            // from font size.\n            this._computedLineHeight =\n                this.getFontSize(this.hostConfig.getFontTypeDefinition(this.effectiveFontType)) *\n                1.33;\n        }\n\n        targetElement.style.lineHeight = this._computedLineHeight + \"px\";\n    }\n\n    getJsonTypeName(): string {\n        return \"TextBlock\";\n    }\n\n    getEffectiveTextStyleDefinition(): TextStyleDefinition {\n        if (this.style) {\n            return this.hostConfig.textStyles.getStyleByName(this.style);\n        }\n\n        return super.getEffectiveTextStyleDefinition();\n    }\n\n    updateLayout(processChildren: boolean = false) {\n        super.updateLayout(processChildren);\n\n        if (GlobalSettings.useAdvancedTextBlockTruncation && this.maxLines && this.isDisplayed()) {\n            // Reset the element's innerHTML in case the available room for\n            // content has increased\n            this.restoreOriginalContent();\n            this.truncateIfSupported(this._computedLineHeight * this.maxLines);\n        }\n    }\n}\n\nexport class TextRun extends BaseTextBlock {\n    //#region Schema\n\n    static readonly italicProperty = new BoolProperty(Versions.v1_2, \"italic\", false);\n    static readonly strikethroughProperty = new BoolProperty(Versions.v1_2, \"strikethrough\", false);\n    static readonly highlightProperty = new BoolProperty(Versions.v1_2, \"highlight\", false);\n    static readonly underlineProperty = new BoolProperty(Versions.v1_3, \"underline\", false);\n\n    protected populateSchema(schema: SerializableObjectSchema) {\n        super.populateSchema(schema);\n\n        schema.add(BaseTextBlock.selectActionProperty);\n    }\n\n    @property(TextRun.italicProperty)\n    italic: boolean = false;\n\n    @property(TextRun.strikethroughProperty)\n    strikethrough: boolean = false;\n\n    @property(TextRun.highlightProperty)\n    highlight: boolean = false;\n\n    @property(TextRun.underlineProperty)\n    underline: boolean = false;\n\n    //#endregion\n\n    protected internalRender(): HTMLElement | undefined {\n        if (this.text) {\n            const preProcessedText = this.preProcessPropertyValue(BaseTextBlock.textProperty);\n            const hostConfig = this.hostConfig;\n\n            let formattedText = TextFormatters.formatText(this.lang, preProcessedText);\n\n            if (!formattedText) {\n                formattedText = \"\";\n            }\n\n            const element = document.createElement(\"span\");\n            element.classList.add(hostConfig.makeCssClassName(\"ac-textRun\"));\n\n            this.applyStylesTo(element);\n\n            if (this.selectAction && hostConfig.supportsInteractivity) {\n                const anchor = document.createElement(\"a\");\n                anchor.classList.add(hostConfig.makeCssClassName(\"ac-anchor\"));\n\n                const href = this.selectAction.getHref();\n\n                anchor.href = href ? href : \"\";\n                anchor.target = \"_blank\";\n                anchor.onclick = (e) => {\n                    if (this.selectAction && this.selectAction.isEffectivelyEnabled()) {\n                        e.preventDefault();\n                        e.cancelBubble = true;\n\n                        this.selectAction.execute();\n                    }\n                };\n\n                this.selectAction.setupElementForAccessibility(anchor);\n\n                anchor.innerText = formattedText;\n\n                element.appendChild(anchor);\n            } else {\n                element.innerText = formattedText;\n            }\n\n            return element;\n        } else {\n            return undefined;\n        }\n    }\n\n    applyStylesTo(targetElement: HTMLElement) {\n        super.applyStylesTo(targetElement);\n\n        if (this.italic) {\n            targetElement.style.fontStyle = \"italic\";\n        }\n\n        if (this.strikethrough) {\n            targetElement.style.textDecoration = \"line-through\";\n        }\n\n        if (this.highlight) {\n            const colorDefinition = this.getColorDefinition(\n                this.getEffectiveStyleDefinition().foregroundColors,\n                this.effectiveColor\n            );\n\n            const backgroundColor = Utils.stringToCssColor(\n                this.effectiveIsSubtle\n                    ? colorDefinition.highlightColors.subtle\n                    : colorDefinition.highlightColors.default\n            );\n            if (backgroundColor) {\n                targetElement.style.backgroundColor = backgroundColor;\n            }\n        }\n\n        if (this.underline) {\n            targetElement.style.textDecoration = \"underline\";\n        }\n    }\n\n    getJsonTypeName(): string {\n        return \"TextRun\";\n    }\n\n    get isStandalone(): boolean {\n        return false;\n    }\n\n    get isInline(): boolean {\n        return true;\n    }\n}\n\nexport class RichTextBlock extends CardElement {\n    private _inlines: CardElement[] = [];\n\n    private internalAddInline(inline: CardElement, forceAdd: boolean = false) {\n        if (!inline.isInline) {\n            throw new Error(Strings.errors.elementCannotBeUsedAsInline());\n        }\n\n        const doAdd: boolean = inline.parent === undefined || forceAdd;\n\n        if (!doAdd && inline.parent !== this) {\n            throw new Error(Strings.errors.inlineAlreadyParented());\n        } else {\n            inline.setParent(this);\n\n            this._inlines.push(inline);\n        }\n    }\n\n    protected internalParse(source: any, context: SerializationContext) {\n        super.internalParse(source, context);\n\n        this._inlines = [];\n\n        if (Array.isArray(source[\"inlines\"])) {\n            for (const jsonInline of source[\"inlines\"]) {\n                let inline: CardElement | undefined;\n\n                if (typeof jsonInline === \"string\") {\n                    const textRun = new TextRun();\n                    textRun.text = jsonInline;\n\n                    inline = textRun;\n                } else {\n                    // No fallback for inlines in 1.2\n                    inline = context.parseElement(this, jsonInline, [], false);\n                }\n\n                if (inline) {\n                    this.internalAddInline(inline, true);\n                }\n            }\n        }\n    }\n\n    protected internalToJSON(target: PropertyBag, context: SerializationContext) {\n        super.internalToJSON(target, context);\n\n        if (this._inlines.length > 0) {\n            const jsonInlines: any[] = [];\n\n            for (const inline of this._inlines) {\n                jsonInlines.push(inline.toJSON(context));\n            }\n\n            context.serializeValue(target, \"inlines\", jsonInlines);\n        }\n    }\n\n    protected internalRender(): HTMLElement | undefined {\n        if (this._inlines.length > 0) {\n            let element: HTMLElement;\n\n            if (this.forElementId) {\n                const labelElement = document.createElement(\"label\");\n                labelElement.htmlFor = this.forElementId;\n\n                element = labelElement;\n            } else {\n                element = document.createElement(\"div\");\n            }\n\n            element.className = this.hostConfig.makeCssClassName(\"ac-richTextBlock\");\n\n            switch (this.getEffectiveHorizontalAlignment()) {\n                case Enums.HorizontalAlignment.Center:\n                    element.style.textAlign = \"center\";\n                    break;\n                case Enums.HorizontalAlignment.Right:\n                    element.style.textAlign = \"end\";\n                    break;\n                default:\n                    element.style.textAlign = \"start\";\n                    break;\n            }\n\n            let renderedInlines: number = 0;\n\n            for (const inline of this._inlines) {\n                const renderedInline = inline.render();\n\n                if (renderedInline) {\n                    element.appendChild(renderedInline);\n\n                    renderedInlines++;\n                }\n            }\n\n            if (renderedInlines > 0) {\n                return element;\n            }\n        }\n\n        return undefined;\n    }\n\n    forElementId?: string;\n\n    asString(): string | undefined {\n        let result = \"\";\n\n        for (const inline of this._inlines) {\n            result += inline.asString();\n        }\n\n        return result;\n    }\n\n    getJsonTypeName(): string {\n        return \"RichTextBlock\";\n    }\n\n    getInlineCount(): number {\n        return this._inlines.length;\n    }\n\n    getInlineAt(index: number): CardElement {\n        if (index >= 0 && index < this._inlines.length) {\n            return this._inlines[index];\n        } else {\n            throw new Error(Strings.errors.indexOutOfRange(index));\n        }\n    }\n\n    addInline(inline: CardElement | string) {\n        if (typeof inline === \"string\") {\n            this.internalAddInline(new TextRun(inline));\n        } else {\n            this.internalAddInline(inline);\n        }\n    }\n\n    removeInline(inline: CardElement): boolean {\n        const index = this._inlines.indexOf(inline);\n\n        if (index >= 0) {\n            this._inlines[index].setParent(undefined);\n            this._inlines.splice(index, 1);\n\n            return true;\n        }\n\n        return false;\n    }\n}\n\nexport class Fact extends SerializableObject {\n    //#region Schema\n\n    static readonly titleProperty = new StringProperty(Versions.v1_0, \"title\");\n    static readonly valueProperty = new StringProperty(Versions.v1_0, \"value\");\n\n    // For historic reasons, the \"title\" schema property is exposed as \"name\" in the OM.\n    @property(Fact.titleProperty)\n    name?: string;\n\n    @property(Fact.valueProperty)\n    value?: string;\n\n    //#endregion\n\n    protected getSchemaKey(): string {\n        return \"Fact\";\n    }\n\n    constructor(name?: string, value?: string) {\n        super();\n\n        this.name = name;\n        this.value = value;\n    }\n}\n\nexport class FactSet extends CardElement {\n    //#region Schema\n\n    static readonly factsProperty = new SerializableObjectCollectionProperty(\n        Versions.v1_0,\n        \"facts\",\n        Fact\n    );\n\n    @property(FactSet.factsProperty)\n    facts: Fact[];\n\n    //#endregion\n\n    protected get useDefaultSizing(): boolean {\n        return false;\n    }\n\n    protected internalRender(): HTMLElement | undefined {\n        let element: HTMLElement | undefined = undefined;\n        const hostConfig = this.hostConfig;\n\n        if (this.facts.length > 0) {\n            element = document.createElement(\"table\");\n            element.style.borderWidth = \"0px\";\n            element.style.borderSpacing = \"0px\";\n            element.style.borderStyle = \"none\";\n            element.style.borderCollapse = \"collapse\";\n            element.style.display = \"block\";\n            element.style.overflow = \"hidden\";\n            element.classList.add(hostConfig.makeCssClassName(\"ac-factset\"));\n            element.setAttribute(\"role\", \"presentation\");\n\n            for (let i = 0; i < this.facts.length; i++) {\n                const trElement = document.createElement(\"tr\");\n\n                if (i > 0) {\n                    trElement.style.marginTop = hostConfig.factSet.spacing + \"px\";\n                }\n\n                // Title column\n                let tdElement = document.createElement(\"td\");\n                tdElement.style.padding = \"0\";\n                tdElement.classList.add(hostConfig.makeCssClassName(\"ac-fact-title\"));\n\n                if (hostConfig.factSet.title.maxWidth) {\n                    tdElement.style.maxWidth = hostConfig.factSet.title.maxWidth + \"px\";\n                }\n\n                tdElement.style.verticalAlign = \"top\";\n\n                let textBlock = new TextBlock();\n                textBlock.setParent(this);\n                textBlock.text =\n                    !this.facts[i].name && this.isDesignMode() ? \"Title\" : this.facts[i].name;\n                textBlock.size = hostConfig.factSet.title.size;\n                textBlock.color = hostConfig.factSet.title.color;\n                textBlock.isSubtle = hostConfig.factSet.title.isSubtle;\n                textBlock.weight = hostConfig.factSet.title.weight;\n                textBlock.wrap = hostConfig.factSet.title.wrap;\n                textBlock.spacing = Enums.Spacing.None;\n\n                Utils.appendChild(tdElement, textBlock.render());\n                Utils.appendChild(trElement, tdElement);\n\n                // Spacer column\n                tdElement = document.createElement(\"td\");\n                tdElement.style.width = \"10px\";\n\n                Utils.appendChild(trElement, tdElement);\n\n                // Value column\n                tdElement = document.createElement(\"td\");\n                tdElement.style.padding = \"0\";\n                tdElement.style.verticalAlign = \"top\";\n                tdElement.classList.add(hostConfig.makeCssClassName(\"ac-fact-value\"));\n\n                textBlock = new TextBlock();\n                textBlock.setParent(this);\n                textBlock.text = this.facts[i].value;\n                textBlock.size = hostConfig.factSet.value.size;\n                textBlock.color = hostConfig.factSet.value.color;\n                textBlock.isSubtle = hostConfig.factSet.value.isSubtle;\n                textBlock.weight = hostConfig.factSet.value.weight;\n                textBlock.wrap = hostConfig.factSet.value.wrap;\n                textBlock.spacing = Enums.Spacing.None;\n\n                Utils.appendChild(tdElement, textBlock.render());\n                Utils.appendChild(trElement, tdElement);\n                Utils.appendChild(element, trElement);\n            }\n        }\n\n        return element;\n    }\n\n    getJsonTypeName(): string {\n        return \"FactSet\";\n    }\n}\n\nclass ImageDimensionProperty extends PropertyDefinition {\n    getInternalName(): string {\n        return this.internalName;\n    }\n\n    parse(\n        sender: SerializableObject,\n        source: PropertyBag,\n        context: BaseSerializationContext\n    ): number | undefined {\n        let result: number | undefined = undefined;\n        const sourceValue = source[this.name];\n\n        if (sourceValue === undefined) {\n            return this.defaultValue;\n        }\n\n        let isValid = false;\n\n        if (typeof sourceValue === \"string\") {\n            try {\n                const size = SizeAndUnit.parse(sourceValue, true);\n\n                if (size.unit === Enums.SizeUnit.Pixel) {\n                    result = size.physicalSize;\n\n                    isValid = true;\n                }\n            } catch {\n                // Swallow the exception\n            }\n\n            // If the source value isn't valid per this property definition,\n            // check its validity per the fallback property, if specified\n            if (!isValid && this.fallbackProperty) {\n                isValid = this.fallbackProperty.isValidValue(sourceValue, context);\n            }\n        }\n\n        if (!isValid) {\n            context.logParseEvent(\n                sender,\n                Enums.ValidationEvent.InvalidPropertyValue,\n                Strings.errors.invalidPropertyValue(sourceValue, this.name)\n            );\n        }\n\n        return result;\n    }\n\n    toJSON(\n        sender: SerializableObject,\n        target: PropertyBag,\n        value: number | undefined,\n        context: BaseSerializationContext\n    ) {\n        context.serializeValue(\n            target,\n            this.name,\n            typeof value === \"number\" && !isNaN(value) ? value + \"px\" : undefined\n        );\n    }\n\n    constructor(\n        readonly targetVersion: Version,\n        readonly name: string,\n        readonly internalName: string,\n        readonly fallbackProperty?: ValueSetProperty\n    ) {\n        super(targetVersion, name);\n    }\n}\n\nexport class Image extends CardElement {\n    //#region Schema\n\n    static readonly urlProperty = new StringProperty(Versions.v1_0, \"url\");\n    static readonly altTextProperty = new StringProperty(Versions.v1_0, \"altText\");\n    static readonly backgroundColorProperty = new StringProperty(Versions.v1_1, \"backgroundColor\");\n    static readonly styleProperty = new EnumProperty(\n        Versions.v1_0,\n        \"style\",\n        Enums.ImageStyle,\n        Enums.ImageStyle.Default\n    );\n    static readonly sizeProperty = new EnumProperty(\n        Versions.v1_0,\n        \"size\",\n        Enums.Size,\n        Enums.Size.Auto\n    );\n    static readonly pixelWidthProperty = new ImageDimensionProperty(\n        Versions.v1_1,\n        \"width\",\n        \"pixelWidth\"\n    );\n    static readonly pixelHeightProperty = new ImageDimensionProperty(\n        Versions.v1_1,\n        \"height\",\n        \"pixelHeight\",\n        CardElement.heightProperty\n    );\n    static readonly selectActionProperty = new ActionProperty(Versions.v1_1, \"selectAction\", [\n        \"Action.ShowCard\"\n    ]);\n    static readonly shouldForceLoadProperty = new BoolProperty(Versions.v1_6, \"forceLoad\", false);\n\n    protected populateSchema(schema: SerializableObjectSchema) {\n        super.populateSchema(schema);\n\n        schema.remove(CardElement.heightProperty);\n    }\n\n    public renderedImageElement?: HTMLElement;\n\n    @property(Image.urlProperty)\n    url?: string;\n\n    @property(Image.altTextProperty)\n    altText?: string;\n\n    @property(Image.backgroundColorProperty)\n    backgroundColor?: string;\n\n    @property(Image.sizeProperty)\n    size: Enums.Size = Enums.Size.Auto;\n\n    @property(Image.styleProperty)\n    style: Enums.ImageStyle = Enums.ImageStyle.Default;\n\n    @property(Image.pixelWidthProperty)\n    pixelWidth?: number;\n\n    @property(Image.pixelHeightProperty)\n    pixelHeight?: number;\n\n    @property(Image.selectActionProperty)\n    selectAction?: Action;\n\n    @property(Image.shouldForceLoadProperty)\n    forceLoad: boolean;\n\n    //#endregion\n\n    private applySize(element: HTMLElement) {\n        if (this.pixelWidth || this.pixelHeight) {\n            if (this.pixelWidth) {\n                element.style.width = this.pixelWidth + \"px\";\n            }\n\n            if (this.pixelHeight) {\n                element.style.height = this.pixelHeight + \"px\";\n            }\n        } else {\n            if (this.maxHeight) {\n                // If the image is constrained in height, we set its height property and\n                // auto and stretch are ignored (default to medium). THis is necessary for\n                // ImageSet which uses a maximum image height as opposed to the cards width\n                // as a constraining dimension\n                switch (this.size) {\n                    case Enums.Size.Small:\n                        element.style.height = this.hostConfig.imageSizes.small + \"px\";\n                        break;\n                    case Enums.Size.Large:\n                        element.style.height = this.hostConfig.imageSizes.large + \"px\";\n                        break;\n                    default:\n                        element.style.height = this.hostConfig.imageSizes.medium + \"px\";\n                        break;\n                }\n\n                element.style.maxHeight = this.maxHeight + \"px\";\n            } else {\n                switch (this.size) {\n                    case Enums.Size.Stretch:\n                        element.style.width = \"100%\";\n                        break;\n                    case Enums.Size.Auto:\n                        element.style.maxWidth = \"100%\";\n                        break;\n                    case Enums.Size.Small:\n                        element.style.width = this.hostConfig.imageSizes.small + \"px\";\n                        break;\n                    case Enums.Size.Large:\n                        element.style.width = this.hostConfig.imageSizes.large + \"px\";\n                        break;\n                    case Enums.Size.Medium:\n                        element.style.width = this.hostConfig.imageSizes.medium + \"px\";\n                        break;\n                }\n\n                element.style.maxHeight = \"100%\";\n            }\n        }\n    }\n\n    protected get useDefaultSizing() {\n        return false;\n    }\n\n    protected internalRender(): HTMLElement | undefined {\n        let element: HTMLElement | undefined = undefined;\n\n        if (this.url) {\n            element = document.createElement(\"div\");\n            element.style.display = \"flex\";\n            element.style.alignItems = \"flex-start\";\n\n            // Cache hostConfig to avoid walking the parent hierarchy multiple times\n            const hostConfig = this.hostConfig;\n\n            switch (this.getEffectiveHorizontalAlignment()) {\n                case Enums.HorizontalAlignment.Center:\n                    element.style.justifyContent = \"center\";\n                    break;\n                case Enums.HorizontalAlignment.Right:\n                    element.style.justifyContent = \"flex-end\";\n                    break;\n                default:\n                    element.style.justifyContent = \"flex-start\";\n                    break;\n            }\n\n            const imageElement = document.createElement(\"img\");\n\n            this.renderedImageElement = imageElement;\n\n            imageElement.onload = (_e: Event) => {\n                raiseImageLoadedEvent(this);\n            };\n            imageElement.onerror = (_e: Event) => {\n                if (this.renderedElement) {\n                    const card = this.getRootElement() as AdaptiveCard;\n\n                    clearElement(this.renderedElement);\n\n                    if (card && card.designMode) {\n                        const errorElement = document.createElement(\"div\");\n                        errorElement.style.display = \"flex\";\n                        errorElement.style.alignItems = \"center\";\n                        errorElement.style.justifyContent = \"center\";\n                        errorElement.style.backgroundColor = \"#EEEEEE\";\n                        errorElement.style.color = \"black\";\n                        errorElement.innerText = \":-(\";\n                        errorElement.style.padding = \"10px\";\n\n                        this.applySize(errorElement);\n\n                        this.renderedElement.appendChild(errorElement);\n                    }\n                }\n\n                raiseImageLoadedEvent(this);\n            };\n            imageElement.style.minWidth = \"0\";\n            imageElement.classList.add(hostConfig.makeCssClassName(\"ac-image\"));\n\n            if (this.selectAction && hostConfig.supportsInteractivity) {\n                imageElement.onkeypress = (e) => {\n                    if (\n                        this.selectAction &&\n                        this.selectAction.isEffectivelyEnabled() &&\n                        (e.code === \"Enter\" || e.code === \"Space\")\n                    ) {\n                        // enter or space pressed\n                        e.preventDefault();\n                        e.cancelBubble = true;\n\n                        this.selectAction.execute();\n                    }\n                };\n\n                imageElement.onclick = (e) => {\n                    if (this.selectAction && this.selectAction.isEffectivelyEnabled()) {\n                        e.preventDefault();\n                        e.cancelBubble = true;\n\n                        this.selectAction.execute();\n                    }\n                };\n\n                this.selectAction.setupElementForAccessibility(imageElement);\n\n                if (this.selectAction.isEffectivelyEnabled()) {\n                    imageElement.classList.add(hostConfig.makeCssClassName(\"ac-selectable\"));\n                }\n            }\n\n            this.applySize(imageElement);\n\n            if (this.style === Enums.ImageStyle.Person) {\n                imageElement.style.borderRadius = \"50%\";\n                imageElement.style.backgroundPosition = \"50% 50%\";\n                imageElement.style.backgroundRepeat = \"no-repeat\";\n            }\n\n            const backgroundColor = Utils.stringToCssColor(this.backgroundColor);\n            if (backgroundColor) {\n                imageElement.style.backgroundColor = backgroundColor;\n            }\n\n            this.setImageSource(imageElement);    \n\n            const altTextProperty = this.preProcessPropertyValue(Image.altTextProperty);\n            if (altTextProperty) {\n                imageElement.alt = <string>altTextProperty;\n            }\n\n            element.appendChild(imageElement);\n        }\n\n        return element;\n    }\n\n    maxHeight?: number;\n\n    getJsonTypeName(): string {\n        return \"Image\";\n    }\n\n    getAllActions(): Action[] {\n        const result = super.getAllActions();\n\n        if (this.selectAction) {\n            result.push(this.selectAction);\n        }\n\n        return result;\n    }\n\n    getActionById(id: string) {\n        let result = super.getActionById(id);\n\n        if (!result && this.selectAction) {\n            result = this.selectAction.getActionById(id);\n        }\n\n        return result;\n    }\n\n    getResourceInformation(): IResourceInformation[] {\n        return this.url ? [{ url: this.url, mimeType: \"image\" }] : [];\n    }\n\n    private setImageSource(imageElement: HTMLImageElement): void {\n        const imageForceLoader: ImageForceLoader = new ImageForceLoader(this.forceLoad, this.url);\n        imageForceLoader.configureImage(this);\n        imageElement.src = <string>this.preProcessPropertyValue(Image.urlProperty);\n        imageForceLoader.resetImage(this);\n    } \n}\n\n// configures Image element to fetch a new image data from url source instead of relying on cache\n// currently rudimentary refreshing scheme is used\n// by attaching unique query string to url, we bypass the cache usage\nclass ImageForceLoader{\n    private uniqueHash : string;\n    public readonly urlWithForceLoadOption : string;\n    constructor(\n        readonly doForceLoad: boolean,\n        readonly url : string | undefined,\n    )\n    {\n        if (url && url.length && doForceLoad) {\n            // we can do better by appending unique key such as uuid instead of epoch\n            // however the current usage is for front-end ui and networking,  \n            // since ui is running in single main thread, this is sufficient mechanism\n            // without needing to depend on external library for our small use cases.\n            this.uniqueHash = '?' + Date.now();\n            this.urlWithForceLoadOption = url + this.uniqueHash;\n        }\n    }\n\n    public configureImage(image: Image): void {\n        if (this.urlWithForceLoadOption && this.urlWithForceLoadOption.length) {\n            image.url = this.urlWithForceLoadOption;\n        }\n    }\n\n    public resetImage(image: Image): void {\n        image.url = this.url;\n    }\n}\n\nexport abstract class CardElementContainer extends CardElement {\n    //#region Schema\n\n    static readonly selectActionProperty = new ActionProperty(Versions.v1_1, \"selectAction\", [\n        \"Action.ShowCard\"\n    ]);\n\n    protected populateSchema(schema: SerializableObjectSchema) {\n        super.populateSchema(schema);\n\n        if (!this.isSelectable) {\n            schema.remove(CardElementContainer.selectActionProperty);\n        }\n    }\n\n    @property(CardElementContainer.selectActionProperty)\n    protected _selectAction?: Action;\n\n    //#endregion\n\n    protected isElementAllowed(element: CardElement) {\n        return this.hostConfig.supportsInteractivity || !element.isInteractive;\n    }\n\n    protected applyPadding() {\n        super.applyPadding();\n\n        if (!this.renderedElement) {\n            return;\n        }\n\n        let physicalPadding = new SpacingDefinition();\n\n        if (this.getEffectivePadding()) {\n            physicalPadding = this.hostConfig.paddingDefinitionToSpacingDefinition(\n                this.getEffectivePadding()\n            );\n        }\n\n        this.renderedElement.style.paddingTop = physicalPadding.top + \"px\";\n        this.renderedElement.style.paddingRight = physicalPadding.right + \"px\";\n        this.renderedElement.style.paddingBottom = physicalPadding.bottom + \"px\";\n        this.renderedElement.style.paddingLeft = physicalPadding.left + \"px\";\n\n        this.renderedElement.style.marginRight = \"0\";\n        this.renderedElement.style.marginLeft = \"0\";\n    }\n\n    protected get isSelectable(): boolean {\n        return false;\n    }\n\n    protected forbiddenChildElements(): string[] {\n        return [];\n    }\n\n    abstract getItemCount(): number;\n    abstract getItemAt(index: number): CardElement;\n    abstract getFirstVisibleRenderedItem(): CardElement | undefined;\n    abstract getLastVisibleRenderedItem(): CardElement | undefined;\n    abstract removeItem(item: CardElement): boolean;\n\n    allowVerticalOverflow: boolean = false;\n\n    releaseDOMResources() {\n        super.releaseDOMResources();\n\n        for (let i = 0; i < this.getItemCount(); i++) {\n            this.getItemAt(i).releaseDOMResources();\n        }\n    }\n\n    internalValidateProperties(context: ValidationResults) {\n        super.internalValidateProperties(context);\n\n        for (let i = 0; i < this.getItemCount(); i++) {\n            const item = this.getItemAt(i);\n\n            if (!this.hostConfig.supportsInteractivity && item.isInteractive) {\n                context.addFailure(\n                    this,\n                    Enums.ValidationEvent.InteractivityNotAllowed,\n                    Strings.errors.interactivityNotAllowed()\n                );\n            }\n\n            if (!this.isElementAllowed(item)) {\n                context.addFailure(\n                    this,\n                    Enums.ValidationEvent.InteractivityNotAllowed,\n                    Strings.errors.elementTypeNotAllowed(item.getJsonTypeName())\n                );\n            }\n\n            item.internalValidateProperties(context);\n        }\n\n        if (this._selectAction) {\n            this._selectAction.internalValidateProperties(context);\n        }\n    }\n\n    render(): HTMLElement | undefined {\n        const element = super.render();\n\n        if (element) {\n            const hostConfig = this.hostConfig;\n\n            if (this.allowVerticalOverflow) {\n                element.style.overflowX = \"hidden\";\n                element.style.overflowY = \"auto\";\n            }\n\n            if (\n                element &&\n                this.isSelectable &&\n                this._selectAction &&\n                hostConfig.supportsInteractivity\n            ) {\n                element.onclick = (e) => {\n                    if (this._selectAction && this._selectAction.isEffectivelyEnabled()) {\n                        e.preventDefault();\n                        e.cancelBubble = true;\n\n                        this._selectAction.execute();\n                    }\n                };\n\n                element.onkeypress = (e) => {\n                    if (\n                        this._selectAction &&\n                        this._selectAction.isEffectivelyEnabled() &&\n                        (e.code === \"Enter\" || e.code === \"Space\")\n                    ) {\n                        // Enter or space pressed\n                        e.preventDefault();\n                        e.cancelBubble = true;\n\n                        this._selectAction.execute();\n                    }\n                };\n\n                this._selectAction.setupElementForAccessibility(element);\n\n                if (this._selectAction.isEffectivelyEnabled()) {\n                    element.classList.add(hostConfig.makeCssClassName(\"ac-selectable\"));\n                }\n            }\n        }\n\n        return element;\n    }\n\n    updateLayout(processChildren: boolean = true) {\n        super.updateLayout(processChildren);\n\n        if (processChildren) {\n            for (let i = 0; i < this.getItemCount(); i++) {\n                this.getItemAt(i).updateLayout();\n            }\n        }\n    }\n\n    getAllInputs(processActions: boolean = true): Input[] {\n        let result: Input[] = [];\n\n        for (let i = 0; i < this.getItemCount(); i++) {\n            result.push(...this.getItemAt(i).getAllInputs(processActions));\n        }\n\n        return result;\n    }\n\n    getAllActions(): Action[] {\n        const result = super.getAllActions();\n\n        for (let i = 0; i < this.getItemCount(); i++) {\n            result.push(...this.getItemAt(i).getAllActions());\n        }\n\n        if (this._selectAction) {\n            result.push(this._selectAction);\n        }\n\n        return result;\n    }\n\n    getResourceInformation(): IResourceInformation[] {\n        let result: IResourceInformation[] = [];\n\n        for (let i = 0; i < this.getItemCount(); i++) {\n            result.push(...this.getItemAt(i).getResourceInformation());\n        }\n\n        return result;\n    }\n\n    getElementById(id: string): CardElement | undefined {\n        let result = super.getElementById(id);\n\n        if (!result) {\n            for (let i = 0; i < this.getItemCount(); i++) {\n                result = this.getItemAt(i).getElementById(id);\n\n                if (result) {\n                    break;\n                }\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    findDOMNodeOwner(node: Node): CardObject | undefined {\n        let target: CardObject | undefined = undefined;\n\n        for (let i = 0; i < this.getItemCount(); i++) {\n            // recur through child elements\n            target = this.getItemAt(i).findDOMNodeOwner(node);\n\n            if (target) {\n                return target;\n            }\n        }\n\n        // If not found in children, check the actions\n        for (let i = 0; i < this.getActionCount(); i++) {\n            target = this.getActionAt(i)?.findDOMNodeOwner(node);\n\n            if (target) {\n                return target;\n            }\n        }\n\n        // if not found in children or actions, defer to parent implementation\n        return super.findDOMNodeOwner(node);\n    }\n}\n\nexport class ImageSet extends CardElementContainer {\n    //#region Schema\n\n    static readonly imagesProperty = new SerializableObjectCollectionProperty(\n        Versions.v1_0,\n        \"images\",\n        Image,\n        (sender: SerializableObject, item: Image) => {\n            item.setParent(<CardElement>sender);\n        }\n    );\n\n    static readonly imageSizeProperty = new EnumProperty(\n        Versions.v1_0,\n        \"imageSize\",\n        Enums.ImageSize,\n        Enums.ImageSize.Medium\n    );\n\n    static readonly imagePresentationStyle = new EnumProperty(\n        Versions.v1_6,\n        \"style\",\n        Enums.ImageSetPresentationStyle,\n        Enums.ImageSetPresentationStyle.Default\n    );\n\n    static readonly pixelOffset = new NumProperty(\n        Versions.v1_6,\n        \"offset\",\n        0,\n        undefined\n    );\n\n    @property(ImageSet.imagesProperty)\n    private _images: Image[] = [];\n\n    @property(ImageSet.imageSizeProperty)\n    imageSize: Enums.ImageSize = Enums.ImageSize.Medium;\n\n    @property(ImageSet.imagePresentationStyle)\n    presentationStyle: Enums.ImageSetPresentationStyle = Enums.ImageSetPresentationStyle.Default;\n\n    @property(ImageSet.pixelOffset)\n    pixelOffset: number = 0;\n\n    //#endregion\n\n    protected internalRender(): HTMLElement | undefined {\n        let element: HTMLElement | undefined = undefined;\n\n        if (this._images.length > 0) {\n            element = document.createElement(\"div\");\n            element.style.display = \"flex\";\n            element.style.flexWrap = \"wrap\";\n\n            for (const image of this._images) {\n                switch (this.imageSize) {\n                    case Enums.ImageSize.Small:\n                        image.size = Enums.Size.Small;\n                        break;\n                    case Enums.ImageSize.Large:\n                        image.size = Enums.Size.Large;\n                        break;\n                    default:\n                        image.size = Enums.Size.Medium;\n                        break;\n                }\n\n                image.maxHeight = this.hostConfig.imageSet.maxImageHeight;\n\n                const renderedImage = image.render();\n\n                if (renderedImage) {\n                    renderedImage.style.display = \"inline-flex\";\n                    renderedImage.style.margin = \"0px\";\n                    if (this.presentationStyle == Enums.ImageSetPresentationStyle.Default) {\n                        renderedImage.style.marginRight = \"10px\";\n                    }\n\n                    Utils.appendChild(element, renderedImage);\n                }\n            }\n            if (this.presentationStyle == Enums.ImageSetPresentationStyle.Stacked) {\n                this.applyStackedPresentationStyle();\n            }\n        }\n        \n\n        return element;\n    }\n\n    applyStackedPresentationStyle() {\n        if (this._images[0].renderedImageElement) {\n            let dimension = StackedImageConfigurator.parseNumericPixelDimension(this._images[0].renderedImageElement.style.height);\n            let bgColor = this.getEffectiveBackgroundColor();\n            if (dimension) {\n                let stackedImageConfigurator = new StackedImageConfigurator(this.pixelOffset, \n                    dimension, bgColor);\n                stackedImageConfigurator.configureImagesArrayAsStackedLayout(this._images);\n            }\n        }\n    }\n\n    getEffectiveBackgroundColor() : string | undefined {\n        let parentContainer = this.getParentContainer();\n        let style = parentContainer?.getEffectiveStyle();\n\n        const styleDefinition = this.hostConfig.containerStyles.getStyleByName(\n            style,\n            this.hostConfig.containerStyles.getStyleByName(this.defaultStyle)\n        );\n\n        return Utils.stringToCssColor(styleDefinition.backgroundColor);\n    }\n\n    getItemCount(): number {\n        return this._images.length;\n    }\n\n    getItemAt(index: number): CardElement {\n        return this._images[index];\n    }\n\n    getFirstVisibleRenderedItem(): CardElement | undefined {\n        return this._images && this._images.length > 0 ? this._images[0] : undefined;\n    }\n\n    getLastVisibleRenderedItem(): CardElement | undefined {\n        return this._images && this._images.length > 0\n            ? this._images[this._images.length - 1]\n            : undefined;\n    }\n\n    removeItem(item: CardElement): boolean {\n        if (item instanceof Image) {\n            const itemIndex = this._images.indexOf(item);\n\n            if (itemIndex >= 0) {\n                this._images.splice(itemIndex, 1);\n\n                item.setParent(undefined);\n\n                this.updateLayout();\n\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    getJsonTypeName(): string {\n        return \"ImageSet\";\n    }\n\n    addImage(image: Image) {\n        if (!image.parent) {\n            this._images.push(image);\n\n            image.setParent(this);\n        } else {\n            throw new Error(\"This image already belongs to another ImageSet\");\n        }\n    }\n\n    indexOf(cardElement: CardElement): number {\n        return cardElement instanceof Image ? this._images.indexOf(cardElement) : -1;\n    }\n}\n\nclass StackedImageConfigurator {\n    private sign45 = 0.7071;\n    private maxImageCounts: number = 2;\n    private offset: number = 0;\n    private normalizationConstant: number = 0;\n    private border: number = 5;\n    private dimension: number = 0;\n    private style: string;\n\n    constructor(offset: number, dimension: number, style: string | undefined) {\n        this.dimension = dimension;\n        this.normalizationConstant = (dimension * this.sign45 - 0.5 * dimension) * 2;\n        // offset determines how far images are placed from each other\n        // at zero, images are separated only by the border\n        // there is no restriction on how far they are apart in positive values, their actual\n        // positioning is limited by maximum size imposed by Image renderer\n        // a negative value can decrease upto the diameter of the image since a value less than the diameter\n        // put the images past each other, and the use of such value is not reasonable request\n        // users should change image positions in such case.\n        this.offset = this.sign45 * (Math.max(offset, -dimension) - this.normalizationConstant);\n        this.style = style ? style : \"\";\n    }\n\n    private moveImageRight(element: HTMLElement) {\n        element.style.marginLeft = this.offset + \"px\";\n    }\n\n    private moveImageUp(element: HTMLElement) {\n        element.style.marginBottom = this.offset + this.dimension+ \"px\";\n    }\n\n    private moveImageDown(element: HTMLElement) {\n        element.style.marginTop = this.offset + this.dimension + \"px\";\n    }\n\n    private makeImageRound(element: HTMLElement) {\n        element.style.borderRadius = \"50%\";\n        element.style.backgroundPosition = \"50% 50%\";\n        element.style.backgroundRepeat = \"no-repeat\";\n    }\n\n    private applyBorder(element: HTMLElement) {\n        element.style.height = (this.dimension + this.border * 2) + \"px\";\n        element.style.border = this.border + \"px\" + \" solid \" + this.style;\n    }\n\n    private configureImageForBottomLeft(element: HTMLElement) {\n        this.moveImageDown(element);\n        this.makeImageRound(element); \n        this.applyBorder(element);\n        element.style.zIndex = \"2\";\n    }\n\n    private configureImageForTopRight(element: HTMLElement) {\n        this.moveImageUp(element);\n        this.moveImageRight(element);\n        this.makeImageRound(element); \n        element.style.zIndex = \"1\";\n    }\n\n    // stacked layout is applied when there are two images in ImageSet,\n    // first image in the ImageSet is put bottom left of ImageSet,\n    // second image is placed top right diagonally to the first image at 45 angle\n    // first image is placed over the second image should the overlap to occur.\n    public configureImagesArrayAsStackedLayout(elements: Array<Image>) {\n        if (elements.length == 1) {\n            if (elements[0].renderedImageElement) {\n                this.makeImageRound(elements[0].renderedImageElement); \n            }\n        }\n        else if (elements.length <= this.maxImageCounts) {\n            if (elements[0].renderedImageElement && elements[1].renderedImageElement) {\n                this.configureImageForBottomLeft(elements[0].renderedImageElement);\n                this.configureImageForTopRight(elements[1].renderedImageElement);\n            }\n        }\n    }\n\n    public static parseNumericPixelDimension(dimension: string): number | undefined  {\n        if (dimension?.substring(dimension.length - 2) == 'px') {\n            return parseInt(dimension.substring(0, dimension.length - 2));\n        }\n        return undefined;\n    }\n}\n\nexport abstract class ContentSource extends SerializableObject {\n    //#region Schema\n\n    static readonly mimeTypeProperty = new StringProperty(Versions.v1_1, \"mimeType\");\n    static readonly urlProperty = new StringProperty(Versions.v1_1, \"url\");\n\n    @property(ContentSource.mimeTypeProperty)\n    mimeType?: string;\n\n    @property(ContentSource.urlProperty)\n    url?: string;\n\n    //#endregion\n\n    constructor(url?: string, mimeType?: string) {\n        super();\n\n        this.url = url;\n        this.mimeType = mimeType;\n    }\n\n    isValid(): boolean {\n        return this.mimeType && this.url ? true : false;\n    }\n}\n\nexport class CaptionSource extends ContentSource {\n    //#region Schema\n\n    static readonly labelProperty = new StringProperty(Versions.v1_6, \"label\");\n\n    @property(CaptionSource.labelProperty)\n    label?: string;\n\n    //#endregion\n\n    constructor(url?: string, mimeType?: string, label?: string) {\n        super(url, mimeType);\n\n        this.label = label;\n    }\n\n    protected getSchemaKey(): string {\n        return \"CaptionSource\";\n    }\n\n    render(): HTMLElement | undefined {\n        let result: HTMLTrackElement | undefined = undefined;\n\n        if (this.isValid()) {\n            result = document.createElement(\"track\");\n            result.src = this.url!;\n            result.kind = \"captions\";\n            result.label = this.label!;\n        }\n\n        return result;\n    }\n}\n\nexport class MediaSource extends ContentSource {\n    protected getSchemaKey(): string {\n        return \"MediaSource\";\n    }\n\n    render(): HTMLElement | undefined {\n        let result: HTMLSourceElement | undefined = undefined;\n\n        if (this.isValid()) {\n            result = document.createElement(\"source\");\n            result.src = this.url!;\n            result.type = this.mimeType!;\n        }\n\n        return result;\n    }\n}\n\nexport abstract class MediaPlayer {\n    private _posterUrl?: string;\n\n    abstract canPlay(): boolean;\n    abstract render(): HTMLElement;\n    abstract fetchVideoDetails(): Promise<void>;\n\n    play() {\n        // Do nothing in base implementation\n    }\n\n    get posterUrl(): string | undefined {\n        return this._posterUrl;\n    }\n\n    protected set posterUrl(value: string | undefined) {\n        this._posterUrl = value;\n    }\n\n    get selectedMediaType(): string | undefined {\n        return undefined;\n    }\n}\n\nexport class HTML5MediaPlayer extends MediaPlayer {\n    private _selectedMediaType?: string;\n    private _selectedSources: MediaSource[] = [];\n    private _captionSources: CaptionSource[] = [];\n    private _mediaElement?: HTMLMediaElement;\n\n    private processSources() {\n        this._selectedSources = [];\n        this._captionSources = [];\n        this._selectedMediaType = undefined;\n\n        for (const source of this.owner.sources) {\n            const mimeComponents = source.mimeType ? source.mimeType.split(\"/\") : [];\n\n            if (mimeComponents.length === 2) {\n                if (!this._selectedMediaType) {\n                    const index = HTML5MediaPlayer.supportedMediaTypes.indexOf(mimeComponents[0]);\n\n                    if (index >= 0) {\n                        this._selectedMediaType = HTML5MediaPlayer.supportedMediaTypes[index];\n                    }\n                }\n                if (mimeComponents[0] === this._selectedMediaType) {\n                    this._selectedSources.push(source);\n                }\n            }\n        }\n\n        this._captionSources.push(...this.owner.captionSources);\n    }\n\n    static readonly supportedMediaTypes = [\"audio\", \"video\"];\n\n    constructor(readonly owner: Media) {\n        super();\n\n        this.processSources();\n    }\n\n    canPlay(): boolean {\n        return this._selectedSources.length > 0;\n    }\n\n    async fetchVideoDetails() {\n        // Nothing to fetch for the HTML5 media player\n    }\n\n    render(): HTMLElement {\n        if (this._selectedMediaType === \"video\") {\n            this._mediaElement = document.createElement(\"video\");\n        } else {\n            this._mediaElement = document.createElement(\"audio\");\n        }\n\n        this._mediaElement.setAttribute(\n            \"aria-label\",\n            this.owner.altText ? this.owner.altText : Strings.defaults.mediaPlayerAriaLabel()\n        );\n        this._mediaElement.setAttribute(\"webkit-playsinline\", \"\");\n        this._mediaElement.setAttribute(\"playsinline\", \"\");\n        // We enable crossorigin for cases where the caption file has a different domain than\n        // the video file. If the caption file lives in a different domain than the video file\n        // and crossorigin is not set, then the caption file will fail to load.\n        this._mediaElement.setAttribute(\"crossorigin\", \"\");\n        this._mediaElement.autoplay = true;\n        this._mediaElement.controls = true;\n\n        if (Utils.isMobileOS()) {\n            this._mediaElement.muted = true;\n        }\n\n        this._mediaElement.preload = \"none\";\n        this._mediaElement.style.width = \"100%\";\n\n        for (const source of this.owner.sources) {\n            const renderedSource = source.render();\n\n            Utils.appendChild(this._mediaElement, renderedSource);\n        }\n\n        for (const captionSource of this.owner.captionSources) {\n            if (captionSource.mimeType == \"vtt\") {\n                const renderedCaptionSource = captionSource.render();\n\n                Utils.appendChild(this._mediaElement, renderedCaptionSource);\n            }\n        }\n\n        return this._mediaElement;\n    }\n\n    play() {\n        if (this._mediaElement) {\n            this._mediaElement.play();\n        }\n    }\n\n    get selectedMediaType(): string | undefined {\n        return this._selectedMediaType;\n    }\n}\n\nexport abstract class CustomMediaPlayer extends MediaPlayer {\n    constructor(matches: RegExpExecArray) {\n        super();\n    }\n}\n\nexport abstract class IFrameMediaMediaPlayer extends CustomMediaPlayer {\n    private _videoId?: string;\n\n    constructor(matches: RegExpExecArray, readonly iFrameTitle?: string) {\n        super(matches);\n\n        if (matches.length >= 2) {\n            this._videoId = matches[1];\n        }\n    }\n\n    abstract getEmbedVideoUrl(): string;\n\n    canPlay(): boolean {\n        return this._videoId !== undefined;\n    }\n\n    render(): HTMLElement {\n        let container = document.createElement(\"div\");\n        container.style.position = \"relative\";\n        container.style.width = \"100%\";\n        container.style.height = \"0\";\n        container.style.paddingBottom = \"56.25%\";\n\n        let iFrame = document.createElement(\"iframe\");\n        iFrame.style.position = \"absolute\";\n        iFrame.style.top = \"0\";\n        iFrame.style.left = \"0\";\n        iFrame.style.width = \"100%\";\n        iFrame.style.height = \"100%\";\n        iFrame.src = this.getEmbedVideoUrl();\n        iFrame.frameBorder = \"0\";\n\n        if (this.iFrameTitle) {\n            iFrame.title = this.iFrameTitle;\n        }\n\n        iFrame.allow =\n            \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\";\n        iFrame.allowFullscreen = true;\n\n        container.appendChild(iFrame);\n\n        return container;\n    }\n\n    get videoId(): string | undefined {\n        return this._videoId;\n    }\n}\n\nexport class VimeoPlayer extends IFrameMediaMediaPlayer {\n    async fetchVideoDetails(): Promise<void> {\n        const oEmbedUrl = `https://vimeo.com/api/oembed.json?url=${this.getEmbedVideoUrl()}`;\n\n        let response = await fetch(oEmbedUrl);\n\n        if (response.ok) {\n            let json = await response.json();\n\n            this.posterUrl = json[\"thumbnail_url\"];\n        }\n    }\n\n    getEmbedVideoUrl(): string {\n        return `https://player.vimeo.com/video/${this.videoId}?autoplay=1`;\n    }\n}\n\nexport class DailymotionPlayer extends IFrameMediaMediaPlayer {\n    async fetchVideoDetails(): Promise<void> {\n        const apiUrl = `https://api.dailymotion.com/video/${this.videoId}?fields=thumbnail_720_url`;\n\n        let response = await fetch(apiUrl);\n\n        if (response.ok) {\n            let json = await response.json();\n\n            this.posterUrl = json[\"thumbnail_720_url\"];\n        }\n    }\n\n    getEmbedVideoUrl(): string {\n        return `https://www.dailymotion.com/embed/video/${this.videoId}?autoplay=1`;\n    }\n}\n\nexport class YouTubePlayer extends IFrameMediaMediaPlayer {\n    private _startTimeIndex?: number;\n\n    constructor(matches: RegExpExecArray, readonly iFrameTitle?: string) {\n        super(matches, iFrameTitle);\n\n        if (matches.length >= 3 && matches[2] !== undefined) {\n            this._startTimeIndex = parseInt(matches[2]);\n        }\n    }\n\n    async fetchVideoDetails(): Promise<void> {\n        this.posterUrl = this.videoId\n            ? `https://img.youtube.com/vi/${this.videoId}/maxresdefault.jpg`\n            : undefined;\n    }\n\n    getEmbedVideoUrl(): string {\n        let url = `https://www.youtube.com/embed/${this.videoId}?autoplay=1`;\n\n        if (this._startTimeIndex !== undefined) {\n            url += `&start=${this._startTimeIndex}`;\n        }\n\n        return url;\n    }\n}\n\nexport interface ICustomMediaPlayer {\n    urlPatterns: RegExp[];\n    createMediaPlayer: (matches: RegExpExecArray) => CustomMediaPlayer;\n}\n\nexport class Media extends CardElement {\n    static customMediaPlayers: ICustomMediaPlayer[] = [\n        {\n            urlPatterns: [\n                /^(?:https?:\\/\\/)?(?:www.)?youtube.com\\/watch\\?(?=.*v=([\\w\\d-_]+))(?=(?:.*t=(\\d+))?).*/gi,\n                /^(?:https?:\\/\\/)?youtu.be\\/([\\w\\d-_]+)(?:\\?t=(\\d+))?/gi\n            ],\n            createMediaPlayer: (matches) =>\n                new YouTubePlayer(matches, Strings.defaults.youTubeVideoPlayer())\n        },\n        {\n            urlPatterns: [/^(?:https?:\\/\\/)?vimeo.com\\/([\\w\\d-_]+).*/gi],\n            createMediaPlayer: (matches) =>\n                new VimeoPlayer(matches, Strings.defaults.vimeoVideoPlayer())\n        },\n        {\n            urlPatterns: [/^(?:https?:\\/\\/)?(?:www.)?dailymotion.com\\/video\\/([\\w\\d-_]+).*/gi],\n            createMediaPlayer: (matches) =>\n                new DailymotionPlayer(matches, Strings.defaults.dailymotionVideoPlayer())\n        }\n    ];\n\n    //#region Schema\n\n    static readonly sourcesProperty = new SerializableObjectCollectionProperty(\n        Versions.v1_1,\n        \"sources\",\n        MediaSource\n    );\n    static readonly captionSourcesProperty = new SerializableObjectCollectionProperty(\n        Versions.v1_6,\n        \"captionSources\",\n        CaptionSource\n    );\n    static readonly posterProperty = new StringProperty(Versions.v1_1, \"poster\");\n    static readonly altTextProperty = new StringProperty(Versions.v1_1, \"altText\");\n\n    @property(Media.sourcesProperty)\n    sources: MediaSource[] = [];\n\n    @property(Media.captionSourcesProperty)\n    captionSources: CaptionSource[] = [];\n\n    @property(Media.posterProperty)\n    poster?: string;\n\n    @property(Media.altTextProperty)\n    altText?: string;\n\n    //#endregion\n\n    private _mediaPlayer: MediaPlayer;\n\n    private createMediaPlayer(): MediaPlayer {\n        for (let provider of Media.customMediaPlayers) {\n            for (let source of this.sources) {\n                if (source.url) {\n                    for (let pattern of provider.urlPatterns) {\n                        let matches = pattern.exec(source.url);\n\n                        if (matches !== null) {\n                            return provider.createMediaPlayer(matches);\n                        }\n                    }\n                }\n            }\n        }\n\n        return new HTML5MediaPlayer(this);\n    }\n\n    private handlePlayButtonInvoke(event: UIEvent): void {\n        if (this.hostConfig.media.allowInlinePlayback) {\n            event.preventDefault();\n            event.cancelBubble = true;\n\n            if (this.renderedElement) {\n                const mediaPlayerElement = this._mediaPlayer.render();\n                clearElement(this.renderedElement);\n                this.renderedElement.appendChild(mediaPlayerElement);\n\n                this._mediaPlayer.play();\n\n                mediaPlayerElement.focus();\n            }\n        } else {\n            if (Media.onPlay) {\n                event.preventDefault();\n                event.cancelBubble = true;\n\n                Media.onPlay(this);\n            }\n        }\n    }\n\n    private async displayPoster() {\n        if (this.renderedElement) {\n            const playButtonArrowWidth = 12;\n            const playButtonArrowHeight = 15;\n\n            const posterRootElement = document.createElement(\"div\");\n            posterRootElement.className = this.hostConfig.makeCssClassName(\"ac-media-poster\");\n            posterRootElement.setAttribute(\"role\", \"contentinfo\");\n            posterRootElement.setAttribute(\n                \"aria-label\",\n                this.altText ? this.altText : Strings.defaults.mediaPlayerAriaLabel()\n            );\n            posterRootElement.style.position = \"relative\";\n            posterRootElement.style.display = \"flex\";\n\n            let posterUrl = this.poster ? this.poster : this._mediaPlayer.posterUrl;\n\n            if (!posterUrl) {\n                posterUrl = this.hostConfig.media.defaultPoster;\n            }\n\n            if (posterUrl) {\n                const posterImageElement = document.createElement(\"img\");\n                posterImageElement.style.width = \"100%\";\n                posterImageElement.style.height = \"100%\";\n                posterImageElement.setAttribute(\"role\", \"presentation\");\n\n                posterImageElement.onerror = (_e: Event) => {\n                    if (posterImageElement.parentNode) {\n                        posterImageElement.parentNode.removeChild(posterImageElement);\n                    }\n\n                    posterRootElement.classList.add(\"empty\");\n                    posterRootElement.style.minHeight = \"150px\";\n                };\n\n                posterImageElement.src = posterUrl;\n\n                posterRootElement.appendChild(posterImageElement);\n            } else {\n                posterRootElement.classList.add(\"empty\");\n                posterRootElement.style.minHeight = \"150px\";\n            }\n\n            if (this.hostConfig.supportsInteractivity && this._mediaPlayer.canPlay()) {\n                const playButtonOuterElement = document.createElement(\"div\");\n                playButtonOuterElement.tabIndex = 0;\n                playButtonOuterElement.setAttribute(\"role\", \"button\");\n                playButtonOuterElement.setAttribute(\n                    \"aria-label\",\n                    Strings.defaults.mediaPlayerPlayMedia()\n                );\n                playButtonOuterElement.className =\n                    this.hostConfig.makeCssClassName(\"ac-media-playButton\");\n                playButtonOuterElement.style.display = \"flex\";\n                playButtonOuterElement.style.alignItems = \"center\";\n                playButtonOuterElement.style.justifyContent = \"center\";\n                playButtonOuterElement.onclick = (e) => {\n                    this.handlePlayButtonInvoke(e);\n                };\n\n                playButtonOuterElement.onkeypress = (e: KeyboardEvent) => {\n                    if (e.code === \"Enter\" || e.code === \"Space\") {\n                        // space or enter\n                        this.handlePlayButtonInvoke(e);\n                    }\n                };\n\n                const playButtonInnerElement = document.createElement(\"div\");\n                playButtonInnerElement.className = this.hostConfig.makeCssClassName(\n                    \"ac-media-playButton-arrow\"\n                );\n                playButtonInnerElement.style.width = playButtonArrowWidth + \"px\";\n                playButtonInnerElement.style.height = playButtonArrowHeight + \"px\";\n                playButtonInnerElement.style.borderTopWidth = playButtonArrowHeight / 2 + \"px\";\n                playButtonInnerElement.style.borderBottomWidth = playButtonArrowHeight / 2 + \"px\";\n                playButtonInnerElement.style.borderLeftWidth = playButtonArrowWidth + \"px\";\n                playButtonInnerElement.style.borderRightWidth = \"0\";\n                playButtonInnerElement.style.borderStyle = \"solid\";\n                playButtonInnerElement.style.borderTopColor = \"transparent\";\n                playButtonInnerElement.style.borderRightColor = \"transparent\";\n                playButtonInnerElement.style.borderBottomColor = \"transparent\";\n                playButtonInnerElement.style.transform =\n                    \"translate(\" + playButtonArrowWidth / 10 + \"px,0px)\";\n\n                playButtonOuterElement.appendChild(playButtonInnerElement);\n\n                const playButtonContainer = document.createElement(\"div\");\n                playButtonContainer.style.position = \"absolute\";\n                playButtonContainer.style.left = \"0\";\n                playButtonContainer.style.top = \"0\";\n                playButtonContainer.style.width = \"100%\";\n                playButtonContainer.style.height = \"100%\";\n                playButtonContainer.style.display = \"flex\";\n                playButtonContainer.style.justifyContent = \"center\";\n                playButtonContainer.style.alignItems = \"center\";\n\n                playButtonContainer.appendChild(playButtonOuterElement);\n                posterRootElement.appendChild(playButtonContainer);\n            }\n\n            clearElement(this.renderedElement);\n            this.renderedElement.appendChild(posterRootElement);\n        }\n    }\n\n    protected internalRender(): HTMLElement | undefined {\n        const element = <HTMLElement>document.createElement(\"div\");\n        element.className = this.hostConfig.makeCssClassName(\"ac-media\");\n\n        return element;\n    }\n\n    static onPlay?: (sender: Media) => void;\n\n    render(): HTMLElement | undefined {\n        let result = super.render();\n\n        if (result) {\n            this._mediaPlayer = this.createMediaPlayer();\n\n            this._mediaPlayer.fetchVideoDetails().then(() => this.displayPoster());\n        }\n\n        return result;\n    }\n\n    releaseDOMResources() {\n        super.releaseDOMResources();\n\n        this.displayPoster();\n    }\n\n    getJsonTypeName(): string {\n        return \"Media\";\n    }\n\n    getResourceInformation(): IResourceInformation[] {\n        const result: IResourceInformation[] = [];\n\n        if (this._mediaPlayer) {\n            const posterUrl = this.poster ? this.poster : this.hostConfig.media.defaultPoster;\n\n            if (posterUrl) {\n                result.push({ url: posterUrl, mimeType: \"image\" });\n            }\n        }\n\n        for (const mediaSource of this.sources) {\n            if (mediaSource.isValid()) {\n                result.push({\n                    /* eslint-disable @typescript-eslint/no-unnecessary-type-assertion -- `mediaSource.url` is of type `string | undefined`, but is validated by `isValid()` call */\n                    url: mediaSource.url!,\n                    mimeType: mediaSource.mimeType!\n                    /* eslint-enable @typescript-eslint/no-unnecessary-type-assertion */\n                });\n            }\n        }\n\n        for (const captionSource of this.captionSources) {\n            if (captionSource.isValid()) {\n                result.push({\n                    /* eslint-disable @typescript-eslint/no-unnecessary-type-assertion -- `captionSource.url` is of type `string | undefined`, but is validated by `isValid()` call */\n                    url: captionSource.url!,\n                    mimeType: captionSource.mimeType!\n                    /* eslint-enable @typescript-eslint/no-unnecessary-type-assertion */\n                });\n            }\n        }\n\n        return result;\n    }\n\n    get selectedMediaType(): string | undefined {\n        return this._mediaPlayer.selectedMediaType;\n    }\n}\n\nenum InputEventType {\n    InitialRender,\n    MouseEnterOnCard,\n    MouseLeaveOnCard,\n    FocusLeave\n}\n\nexport abstract class Input extends CardElement implements IInput {\n    \n    //#region Schema\n    static readonly labelProperty = new StringProperty(Versions.v1_3, \"label\", true);\n    static readonly isRequiredProperty = new BoolProperty(Versions.v1_3, \"isRequired\", false);\n    static readonly errorMessageProperty = new StringProperty(Versions.v1_3, \"errorMessage\", true);\n    static readonly inputStyleProperty = new EnumProperty(\n        Versions.v1_6,\n        \"inputStyle\",\n        Enums.InputStyle,\n        Enums.InputStyle.Default,\n        [\n            { value: Enums.InputStyle.RevealOnHover },\n            { value: Enums.InputStyle.Default }\n        ]\n    );\n    static readonly labelWidthProperty = new CustomProperty<SizeAndUnit | undefined>(\n        Versions.v1_6,\n        \"labelWidth\",\n        (\n            sender: SerializableObject,\n            prop: PropertyDefinition,\n            source: PropertyBag,\n            context: BaseSerializationContext\n        ) => {\n            let result: SizeAndUnit | undefined = prop.defaultValue;\n            const value = source[prop.name];\n            let invalidLabelWidth = false;\n            \n            if (typeof value === \"number\" && !isNaN(value)) {\n                result = new SizeAndUnit(value, Enums.SizeUnit.Weight);\n                if (result.physicalSize < 0 || result.physicalSize > 100) {\n                    invalidLabelWidth = true;\n                }\n            }\n            else if (typeof value === \"string\") {\n                try {\n                    result = SizeAndUnit.parse(value);\n                } catch (e) {\n                    invalidLabelWidth = true;\n                }\n            } else {\n                invalidLabelWidth = true;\n            }\n\n            if (invalidLabelWidth) {\n                context.logParseEvent(\n                    sender,\n                    Enums.ValidationEvent.InvalidPropertyValue,\n                    Strings.errors.invalidInputLabelWidth()\n                );\n                result = undefined;\n            }\n\n            return result;\n        },\n        (\n            sender: SerializableObject,\n            property: PropertyDefinition,\n            target: PropertyBag,\n            value: SizeAndUnit | undefined,\n            context: BaseSerializationContext\n        ) => {\n            if (value instanceof SizeAndUnit) {\n                if (value.unit === Enums.SizeUnit.Pixel) {\n                    context.serializeValue(target, \"labelWidth\", value.physicalSize + \"px\");\n                } else {\n                    context.serializeNumber(target, \"labelWidth\", value.physicalSize);\n                }\n            }\n        },\n        undefined\n    );\n\n    static readonly labelPositionProperty = new EnumProperty(\n        Versions.v1_6,\n        \"labelPosition\",\n        Enums.InputLabelPosition,\n        Enums.InputLabelPosition.Above,\n        [\n            { value: Enums.InputLabelPosition.Inline },\n            { value: Enums.InputLabelPosition.Above }\n        ]\n    );\n\n    @property(Input.labelProperty)\n    label?: string;\n\n    @property(Input.isRequiredProperty)\n    isRequired: boolean;\n\n    @property(Input.errorMessageProperty)\n    errorMessage?: string;\n\n    @property(Input.inputStyleProperty)\n    inputStyle: Enums.InputStyle = Enums.InputStyle.Default;\n    \n    @property(Input.labelWidthProperty)\n    labelWidth?: SizeAndUnit;\n\n    @property(Input.labelPositionProperty)\n    labelPosition?: Enums.InputLabelPosition;\n\n    //#endregion\n\n    private _outerContainerElement: HTMLElement;\n    private _inputControlContainerElement: HTMLElement;\n    private _renderedErrorMessageElement?: HTMLElement;\n    private _renderedLabelElement?: HTMLElement;\n    private _renderedInputControlElement?: HTMLElement;\n    private _oldValue: any;\n\n    protected getAllLabelIds(): string[] {\n        const labelIds: string[] = [];\n\n        if (this.labelledBy) {\n            labelIds.push(this.labelledBy);\n        }\n\n        if (this._renderedLabelElement) {\n            labelIds.push(this._renderedLabelElement.id);\n        }\n\n        if (this._renderedErrorMessageElement) {\n            labelIds.push(this._renderedErrorMessageElement.id);\n        }\n\n        return labelIds;\n    }\n\n    protected updateInputControlAriaLabelledBy() {\n        if (this._renderedInputControlElement) {\n            const labelIds: string[] = this.getAllLabelIds();\n\n            if (labelIds.length > 0) {\n                this._renderedInputControlElement.setAttribute(\n                    \"aria-labelledby\",\n                    labelIds.join(\" \")\n                );\n            } else {\n                this._renderedInputControlElement.removeAttribute(\"aria-labelledby\");\n            }\n        }\n    }\n\n    protected get isNullable(): boolean {\n        return true;\n    }\n\n    protected get renderedInputControlElement(): HTMLElement | undefined {\n        return this._renderedInputControlElement;\n    }\n\n    protected get inputControlContainerElement(): HTMLElement {\n        return this._inputControlContainerElement;\n    }\n\n    protected overrideInternalRender(): HTMLElement | undefined {\n        const hostConfig = this.hostConfig;\n\n        this._outerContainerElement = document.createElement(\"div\");\n        this._outerContainerElement.style.display = \"flex\";\n        if (this.labelPosition === Enums.InputLabelPosition.Inline) {\n            this._outerContainerElement.style.flexDirection = \"row\";\n        } else {\n            this._outerContainerElement.style.flexDirection = \"column\";\n        }\n\n        const renderedInputControlId = Utils.generateUniqueId();\n\n        if (this.label) {\n            const labelRichTextBlock = new RichTextBlock();\n            labelRichTextBlock.setParent(this);\n            labelRichTextBlock.forElementId = renderedInputControlId;\n\n            const labelInline = new TextRun(this.label);\n            labelRichTextBlock.addInline(labelInline);\n\n            if (this.isRequired) {\n                labelInline.init(hostConfig.inputs.label.requiredInputs);\n\n                const isRequiredCueInline = new TextRun(\n                    hostConfig.inputs.label.requiredInputs.suffix\n                );\n                isRequiredCueInline.color = hostConfig.inputs.label.requiredInputs.suffixColor;\n                isRequiredCueInline.ariaHidden = true;\n\n                labelRichTextBlock.addInline(isRequiredCueInline);\n            } else {\n                labelInline.init(hostConfig.inputs.label.optionalInputs);\n            }\n\n            this._renderedLabelElement = labelRichTextBlock.render();\n\n            if (this._renderedLabelElement) {\n                this._renderedLabelElement.id = Utils.generateUniqueId();\n                if (this.labelPosition === Enums.InputLabelPosition.Inline) {\n                    // For inline label position: label should be in center of the div and no extra spacing needed\n                    this._renderedLabelElement.style.alignSelf = \"center\";\n                } else {\n                    this._renderedLabelElement.style.marginBottom =\n                        hostConfig.getEffectiveSpacing(hostConfig.inputs.label.inputSpacing) + \"px\";\n                }\n                this._outerContainerElement.appendChild(this._renderedLabelElement);\n            }\n        }\n\n        this._inputControlContainerElement = document.createElement(\"div\");\n        this._inputControlContainerElement.className =\n            hostConfig.makeCssClassName(\"ac-input-container\");\n        this._inputControlContainerElement.style.display = \"flex\";\n\n        if (this.height === \"stretch\") {\n            this._inputControlContainerElement.style.alignItems = \"stretch\";\n            this._inputControlContainerElement.style.flex = \"1 1 auto\";\n        }\n\n        this._renderedInputControlElement = this.internalRender();\n\n        if (this._renderedInputControlElement) {\n            this._renderedInputControlElement.id = renderedInputControlId;\n            this._renderedInputControlElement.style.minWidth = \"0px\";\n\n            if (this.isNullable && this.isRequired) {\n                this._renderedInputControlElement.setAttribute(\"aria-required\", \"true\");\n                this._renderedInputControlElement.classList.add(\n                    hostConfig.makeCssClassName(\"ac-input-required\")\n                );\n            }\n\n            this._inputControlContainerElement.appendChild(this._renderedInputControlElement);\n            this._outerContainerElement.appendChild(this._inputControlContainerElement);\n\n            if (this._renderedLabelElement && this.labelPosition === Enums.InputLabelPosition.Inline) {\n                if (!this.labelWidth) {\n                    const defaultLabelWidth = hostConfig.inputs.label.width;\n                    this._renderedLabelElement.style.width = defaultLabelWidth.toString() + \"%\";\n                    this._inputControlContainerElement.style.width = (100 - defaultLabelWidth) + \"%\";\n                }\n                else if (this.labelWidth.unit == Enums.SizeUnit.Weight) {\n                    const labelWidthInPercent = this.labelWidth.physicalSize;\n                    this._renderedLabelElement.style.width = labelWidthInPercent.toString() + \"%\";\n                    this._inputControlContainerElement.style.width = (100 - labelWidthInPercent).toString() + \"%\";\n                }\n                else if (this.labelWidth.unit == Enums.SizeUnit.Pixel) {\n                    const labelWidthInPixel = this.labelWidth.physicalSize;\n                    this._renderedLabelElement.style.width = labelWidthInPixel.toString() + \"px\";\n                }\n            }\n\n            this.updateVisualState(InputEventType.InitialRender);\n            if (this._renderedInputControlElement) {\n                this._renderedInputControlElement.onblur = (ev: MouseEvent) => {\n                    this.updateVisualState(InputEventType.FocusLeave);\n                };\n            }\n            this.updateInputControlAriaLabelledBy();\n\n            return this._outerContainerElement;\n        }\n\n        this.resetDirtyState();\n\n        return undefined;\n    }\n\n    protected valueChanged() {\n        this.getRootElement().updateActionsEnabledState();\n\n        if (this.isValid()) {\n            this.resetValidationFailureCue();\n        }\n\n        if (this.onValueChanged) {\n            this.onValueChanged(this);\n        }\n\n        raiseInputValueChangedEvent(this);\n    }\n\n    protected resetValidationFailureCue() {\n        if (this.renderedInputControlElement) {\n            if (this instanceof ChoiceSetInput && this.isDynamicTypeahead()) {\n                this.removeValidationFailureCue();\n            } else {\n                this.renderedInputControlElement.classList.remove(\n                    this.hostConfig.makeCssClassName(\"ac-input-validation-failed\")\n                );\n            }\n\n            this.updateInputControlAriaLabelledBy();\n\n            if (this._renderedErrorMessageElement) {\n                this._outerContainerElement.removeChild(this._renderedErrorMessageElement);\n\n                this._renderedErrorMessageElement = undefined;\n            }\n        }\n    }\n\n    protected showValidationErrorMessage() {\n        if (\n            this.renderedElement &&\n            this.errorMessage &&\n            GlobalSettings.displayInputValidationErrors\n        ) {\n            const errorMessageTextBlock = new TextBlock();\n            errorMessageTextBlock.setParent(this);\n            errorMessageTextBlock.text = this.errorMessage;\n            errorMessageTextBlock.wrap = true;\n            errorMessageTextBlock.init(this.hostConfig.inputs.errorMessage);\n\n            this._renderedErrorMessageElement = errorMessageTextBlock.render();\n\n            if (this._renderedErrorMessageElement) {\n                this._renderedErrorMessageElement.id = Utils.generateUniqueId();\n                this._outerContainerElement.appendChild(this._renderedErrorMessageElement);\n\n                this.updateInputControlAriaLabelledBy();\n            }\n        }\n    }\n\n    protected get allowRevealOnHoverStyle() {\n        return this.hostConfig.inputs && this.hostConfig.inputs.allowRevealOnHoverStyle;\n    }\n\n    protected shouldHideInputAdornersForRevealOnHover(input: HTMLElement, eventType: InputEventType) {\n        // show/hide input adorners (date picker, time picker, select dropdown picker) with inputStyle RevealOnHover\n        // 1. intial render of card: hide input adorners\n        // 2. mouse hover on the card: show input adorners\n        // 3. mouse hover outside the card: hide input adorners unless input is still in focus state\n        // 4. input loses focus: hide the input adorners unless mouse is still hovering on the card\n    \n        // check if input still has the focus\n        const isInputInFocus = input === document.activeElement;\n    \n        // check if mouse is still on the card\n        const inputHoverClassName = this.hostConfig.makeCssClassName(\"ac-inputStyle-revealOnHover-onhover\");\n        const isMouseOverCard = input.classList.contains(inputHoverClassName);\n    \n        const hideInputAdorners = (eventType === InputEventType.InitialRender) ||\n                                  (eventType === InputEventType.FocusLeave && !isMouseOverCard) ||\n                                  (eventType === InputEventType.MouseLeaveOnCard && !isInputInFocus);\n        return hideInputAdorners;\n    }\n\n    updateVisualState(eventType: InputEventType): void {\n        if (!this.allowRevealOnHoverStyle || \n            !this._renderedInputControlElement || \n            this.inputStyle !== Enums.InputStyle.RevealOnHover) {\n            return;\n        }\n        if (eventType === InputEventType.InitialRender) {\n            // on initial render, we will show input fields as read only view\n            this._renderedInputControlElement.classList.add(this.hostConfig.makeCssClassName(\"ac-inputStyle-revealOnHover-onrender\"));\n        }\n        else if (eventType === InputEventType.MouseEnterOnCard) {\n            // on hover on the card, we will reveal the inputs by showing borders etc\n            // ac-inputStyle-revealOnHover-onhover class is also used to identify if mouse is hovering on the card\n            this._renderedInputControlElement.classList.add(this.hostConfig.makeCssClassName(\"ac-inputStyle-revealOnHover-onhover\"));\n        } else if (eventType === InputEventType.MouseLeaveOnCard) {\n            this._renderedInputControlElement.classList.remove(this.hostConfig.makeCssClassName(\"ac-inputStyle-revealOnHover-onhover\"));\n        }\n    }\n\n    onValueChanged: (sender: Input) => void;\n\n    labelledBy?: string;\n\n    abstract isSet(): boolean;\n\n    focus() {\n        if (this._renderedInputControlElement) {\n            this._renderedInputControlElement.focus();\n        }\n    }\n\n    isValid(): boolean {\n        return true;\n    }\n\n    isDirty(): boolean {\n        return this.value !== this._oldValue;\n    }\n\n    resetDirtyState() {\n        this._oldValue = this.value;\n    }\n\n    internalValidateProperties(context: ValidationResults) {\n        super.internalValidateProperties(context);\n\n        if (!this.id) {\n            context.addFailure(\n                this,\n                Enums.ValidationEvent.PropertyCantBeNull,\n                Strings.errors.inputsMustHaveUniqueId()\n            );\n        }\n\n        if (this.isRequired) {\n            if (!this.label) {\n                context.addFailure(\n                    this,\n                    Enums.ValidationEvent.RequiredInputsShouldHaveLabel,\n                    \"Required inputs should have a label\"\n                );\n            }\n\n            if (!this.errorMessage) {\n                context.addFailure(\n                    this,\n                    Enums.ValidationEvent.RequiredInputsShouldHaveErrorMessage,\n                    \"Required inputs should have an error message\"\n                );\n            }\n        }\n    }\n\n    validateValue(): boolean {\n        this.resetValidationFailureCue();\n\n        const result = this.isRequired ? this.isSet() && this.isValid() : this.isValid();\n\n        if (!result && this.renderedInputControlElement) {\n            if (this instanceof ChoiceSetInput && this.isDynamicTypeahead()) {\n                this.showValidationFailureCue();\n            } else {\n                this.renderedInputControlElement.classList.add(\n                    this.hostConfig.makeCssClassName(\"ac-input-validation-failed\")\n                );\n            }\n            this.showValidationErrorMessage();\n        }\n\n        return result;\n    }\n\n    getAllInputs(processActions: boolean = true): Input[] {\n        return [this];\n    }\n\n    render(): HTMLElement | undefined {\n        let result = super.render();\n\n        this.resetDirtyState();\n\n        return result;\n    }\n\n    abstract get value(): any;\n\n    get isInteractive(): boolean {\n        return true;\n    }\n}\n\nexport class TextInput extends Input {\n    //#region Schema\n\n    static readonly valueProperty = new StringProperty(Versions.v1_0, \"value\");\n    static readonly maxLengthProperty = new NumProperty(Versions.v1_0, \"maxLength\");\n    static readonly isMultilineProperty = new BoolProperty(Versions.v1_0, \"isMultiline\", false);\n    static readonly placeholderProperty = new StringProperty(Versions.v1_0, \"placeholder\");\n    static readonly styleProperty = new EnumProperty(\n        Versions.v1_0,\n        \"style\",\n        Enums.InputTextStyle,\n        Enums.InputTextStyle.Text,\n        [\n            { value: Enums.InputTextStyle.Text },\n            { value: Enums.InputTextStyle.Tel },\n            { value: Enums.InputTextStyle.Url },\n            { value: Enums.InputTextStyle.Email },\n            { value: Enums.InputTextStyle.Password, targetVersion: Versions.v1_5 }\n        ]\n    );\n    static readonly inlineActionProperty = new ActionProperty(Versions.v1_0, \"inlineAction\", [\n        \"Action.ShowCard\"\n    ]);\n    static readonly regexProperty = new StringProperty(Versions.v1_3, \"regex\", true);\n\n    @property(TextInput.valueProperty)\n    defaultValue?: string;\n\n    @property(TextInput.maxLengthProperty)\n    maxLength?: number;\n\n    @property(TextInput.isMultilineProperty)\n    isMultiline: boolean = false;\n\n    @property(TextInput.placeholderProperty)\n    placeholder?: string;\n\n    @property(TextInput.styleProperty)\n    style: Enums.InputTextStyle = Enums.InputTextStyle.Text;\n\n    @property(TextInput.inlineActionProperty)\n    inlineAction?: Action;\n\n    @property(TextInput.regexProperty)\n    regex?: string;\n\n    //#endregion\n\n    private setupInput(input: HTMLInputElement | HTMLTextAreaElement) {\n        input.style.flex = \"1 1 auto\";\n\n        input.tabIndex = this.isDesignMode() ? -1 : 0;\n\n        if (this.placeholder) {\n            input.placeholder = this.placeholder;\n            input.setAttribute(\"aria-label\", this.placeholder);\n        }\n\n        if (this.defaultValue) {\n            input.value = this.defaultValue;\n        }\n\n        if (this.maxLength && this.maxLength > 0) {\n            input.maxLength = this.maxLength;\n        }\n\n        input.oninput = () => {\n            this.valueChanged();\n        };\n        input.onkeypress = (e: KeyboardEvent) => {\n            // Ctrl+Enter pressed\n            if (\n                e.ctrlKey &&\n                e.code === \"Enter\" &&\n                this.inlineAction &&\n                this.inlineAction.isEffectivelyEnabled()\n            ) {\n                this.inlineAction.execute();\n            }\n        };\n    }\n\n    protected internalRender(): HTMLElement | undefined {\n        let result: HTMLInputElement | HTMLTextAreaElement;\n\n        if (this.isMultiline && this.style !== Enums.InputTextStyle.Password) {\n            result = document.createElement(\"textarea\");\n            result.className = this.hostConfig.makeCssClassName(\n                \"ac-input\",\n                \"ac-textInput\",\n                \"ac-multiline\"\n            );\n\n            if (this.height === \"stretch\") {\n                result.style.height = \"initial\";\n            }\n        } else {\n            result = document.createElement(\"input\");\n            result.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-textInput\");\n            result.type = Enums.InputTextStyle[this.style].toLowerCase();\n        }\n\n        this.setupInput(result);\n\n        return result;\n    }\n\n    protected overrideInternalRender(): HTMLElement | undefined {\n        const renderedInputControl = super.overrideInternalRender();\n\n        if (this.inlineAction) {\n            const button = document.createElement(\"button\");\n            button.className = this.hostConfig.makeCssClassName(\n                this.inlineAction.isEffectivelyEnabled()\n                    ? \"ac-inlineActionButton\"\n                    : \"ac-inlineActionButton-disabled\"\n            );\n\n            button.onclick = (e) => {\n                if (this.inlineAction && this.inlineAction.isEffectivelyEnabled()) {\n                    e.preventDefault();\n                    e.cancelBubble = true;\n\n                    this.inlineAction.execute();\n                }\n            };\n\n            if (this.inlineAction.iconUrl) {\n                button.classList.add(\"iconOnly\");\n\n                const icon = document.createElement(\"img\");\n                icon.style.height = \"100%\";\n                icon.setAttribute(\"role\", \"presentation\");\n\n                // The below trick is necessary as a workaround in Chrome where the icon is initially displayed\n                // at its native size then resized to 100% of the button's height. This cfreates an unpleasant\n                // flicker. On top of that, Chrome's flex implementation fails to prperly re-layout the button\n                // after the image has loaded and been gicven its final size. The below trick also fixes that.\n                icon.style.display = \"none\";\n                icon.onload = () => {\n                    icon.style.removeProperty(\"display\");\n                };\n                icon.onerror = () => {\n                    button.removeChild(icon);\n                    button.classList.remove(\"iconOnly\");\n                    button.classList.add(\"textOnly\");\n                    button.textContent =\n                        this.inlineAction && this.inlineAction.title\n                            ? this.inlineAction.title\n                            : Strings.defaults.inlineActionTitle();\n                };\n\n                icon.src = this.inlineAction.iconUrl;\n\n                button.appendChild(icon);\n                button.title = this.inlineAction.title\n                    ? this.inlineAction.title\n                    : Strings.defaults.inlineActionTitle();\n            } else {\n                button.classList.add(\"textOnly\");\n                button.textContent = this.inlineAction.title\n                    ? this.inlineAction.title\n                    : Strings.defaults.inlineActionTitle();\n            }\n\n            this.inlineAction.setupElementForAccessibility(button, true);\n\n            button.style.marginLeft = \"8px\";\n\n            this.inputControlContainerElement.appendChild(button);\n        }\n\n        return renderedInputControl;\n    }\n\n    updateVisualState(eventType: InputEventType): void {\n        if (!this.allowRevealOnHoverStyle) {\n            return;\n        }\n\n        if (!(this.inlineAction || this.isMultiline)) {\n            super.updateVisualState(eventType);\n        }\n    }\n\n    getJsonTypeName(): string {\n        return \"Input.Text\";\n    }\n\n    getAllActions(): Action[] {\n        const result = super.getAllActions();\n\n        if (this.inlineAction) {\n            result.push(this.inlineAction);\n        }\n\n        return result;\n    }\n\n    getActionById(id: string) {\n        let result = super.getActionById(id);\n\n        if (!result && this.inlineAction) {\n            result = this.inlineAction.getActionById(id);\n        }\n\n        return result;\n    }\n\n    isSet(): boolean {\n        return this.value ? true : false;\n    }\n\n    isValid(): boolean {\n        if (!this.value) {\n            return true;\n        }\n\n        if (this.regex) {\n            return new RegExp(this.regex, \"g\").test(this.value);\n        }\n\n        return true;\n    }\n\n    get value(): string | undefined {\n        if (this.renderedInputControlElement) {\n            if (this.isMultiline) {\n                return (<HTMLTextAreaElement>this.renderedInputControlElement).value;\n            } else {\n                return (<HTMLInputElement>this.renderedInputControlElement).value;\n            }\n        } else {\n            return undefined;\n        }\n    }\n}\n\nexport class ToggleInput extends Input {\n    //#region Schema\n\n    static readonly valueProperty = new StringProperty(Versions.v1_0, \"value\");\n    static readonly titleProperty = new StringProperty(Versions.v1_0, \"title\");\n    static readonly valueOnProperty = new StringProperty(\n        Versions.v1_0,\n        \"valueOn\",\n        true,\n        undefined,\n        \"true\",\n        (sender: SerializableObject) => {\n            return \"true\";\n        }\n    );\n    static readonly valueOffProperty = new StringProperty(\n        Versions.v1_0,\n        \"valueOff\",\n        true,\n        undefined,\n        \"false\",\n        (sender: SerializableObject) => {\n            return \"false\";\n        }\n    );\n    static readonly wrapProperty = new BoolProperty(Versions.v1_2, \"wrap\", false);\n\n    @property(ToggleInput.valueProperty)\n    defaultValue?: string;\n\n    @property(ToggleInput.titleProperty)\n    title?: string;\n\n    @property(ToggleInput.valueOnProperty)\n    valueOn: string = \"true\";\n\n    @property(ToggleInput.valueOffProperty)\n    valueOff: string = \"false\";\n\n    @property(ToggleInput.wrapProperty)\n    wrap: boolean = false;\n\n    //#endregion\n\n    private _checkboxInputElement: HTMLInputElement;\n    private _checkboxInputLabelElement: HTMLElement | undefined;\n    private _oldCheckboxValue: boolean;\n\n    protected updateInputControlAriaLabelledBy() {\n        if (this._checkboxInputElement) {\n            let joinedLabelIds = this.getAllLabelIds().join(\" \");\n\n            if (this._checkboxInputLabelElement && this._checkboxInputLabelElement.id) {\n                joinedLabelIds += \" \" + this._checkboxInputLabelElement.id;\n            }\n\n            if (joinedLabelIds) {\n                this._checkboxInputElement.setAttribute(\"aria-labelledby\", joinedLabelIds);\n            } else {\n                this._checkboxInputElement.removeAttribute(\"aria-labelledby\");\n            }\n        }\n    }\n\n    protected internalRender(): HTMLElement | undefined {\n        const element = document.createElement(\"div\");\n        element.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-toggleInput\");\n        element.style.width = \"100%\";\n        element.style.display = \"flex\";\n        element.style.alignItems = \"center\";\n\n        this._checkboxInputElement = document.createElement(\"input\");\n        this._checkboxInputElement.id = Utils.generateUniqueId();\n        this._checkboxInputElement.type = \"checkbox\";\n        this._checkboxInputElement.style.display = \"inline-block\";\n        this._checkboxInputElement.style.verticalAlign = \"middle\";\n        this._checkboxInputElement.style.margin = \"0\";\n        this._checkboxInputElement.style.flex = \"0 0 auto\";\n\n        if (this.title) {\n            this._checkboxInputElement.setAttribute(\"aria-label\", this.title);\n        }\n\n        if (this.isRequired) {\n            this._checkboxInputElement.setAttribute(\"aria-required\", \"true\");\n        }\n\n        this._checkboxInputElement.tabIndex = this.isDesignMode() ? -1 : 0;\n\n        if (this.defaultValue === this.valueOn) {\n            this._checkboxInputElement.checked = true;\n        }\n\n        this._oldCheckboxValue = this._checkboxInputElement.checked;\n\n        this._checkboxInputElement.onchange = () => {\n            this.valueChanged();\n        };\n\n        Utils.appendChild(element, this._checkboxInputElement);\n\n        if (this.title || this.isDesignMode()) {\n            const label = new TextBlock();\n            label.setParent(this);\n            label.forElementId = this._checkboxInputElement.id;\n            label.hostConfig = this.hostConfig;\n            label.text = !this.title ? this.getJsonTypeName() : this.title;\n            label.useMarkdown = GlobalSettings.useMarkdownInRadioButtonAndCheckbox;\n            label.wrap = this.wrap;\n\n            this._checkboxInputLabelElement = label.render();\n\n            if (this._checkboxInputLabelElement) {\n                this._checkboxInputLabelElement.id = Utils.generateUniqueId();\n                this._checkboxInputLabelElement.style.display = \"inline-block\";\n                this._checkboxInputLabelElement.style.flex = \"1 1 auto\";\n                this._checkboxInputLabelElement.style.marginLeft = \"6px\";\n                this._checkboxInputLabelElement.style.verticalAlign = \"middle\";\n\n                const spacerElement = document.createElement(\"div\");\n                spacerElement.style.width = \"6px\";\n\n                Utils.appendChild(element, spacerElement);\n                Utils.appendChild(element, this._checkboxInputLabelElement);\n            }\n        }\n\n        return element;\n    }\n\n    protected get isNullable(): boolean {\n        return false;\n    }\n\n    updateVisualState(eventType: InputEventType): void {\n    }\n\n    getJsonTypeName(): string {\n        return \"Input.Toggle\";\n    }\n\n    focus() {\n        if (this._checkboxInputElement) {\n            this._checkboxInputElement.focus();\n        }\n    }\n\n    isSet(): boolean {\n        if (this.isRequired) {\n            return this.value === this.valueOn;\n        }\n\n        return this.value ? true : false;\n    }\n\n    isDirty(): boolean {\n        return this._checkboxInputElement\n            ? this._checkboxInputElement.checked !== this._oldCheckboxValue\n            : false;\n    }\n\n    get value(): string | undefined {\n        if (this._checkboxInputElement) {\n            return this._checkboxInputElement.checked ? this.valueOn : this.valueOff;\n        } else {\n            return undefined;\n        }\n    }\n}\n\nexport class Choice extends SerializableObject {\n    //#region Schema\n\n    static readonly titleProperty = new StringProperty(Versions.v1_0, \"title\");\n    static readonly valueProperty = new StringProperty(Versions.v1_0, \"value\");\n\n    @property(Choice.titleProperty)\n    title?: string;\n\n    @property(Choice.valueProperty)\n    value?: string;\n\n    //#endregion\n\n    protected getSchemaKey(): string {\n        return \"Choice\";\n    }\n\n    constructor(title?: string, value?: string) {\n        super();\n\n        this.title = title;\n        this.value = value;\n    }\n}\n\n/**\n * DataQuery class is declared later in the file and derives from subsequent base classes\n * Hence, it cannot be used in ChoiceSetInput.\n * Refactor is needed to separate elements and actions in separate files.\n */\nexport class ChoiceSetInputDataQuery extends SerializableObject {\n    //#region Schema\n\n    static readonly typeProperty = new StringProperty(\n        Versions.v1_6,\n        \"type\",\n        true,\n        new RegExp(\"^Data.Query$\")\n    );\n    static readonly datasetProperty = new StringProperty(Versions.v1_6, \"dataset\");\n    static readonly countProperty = new NumProperty(Versions.v1_6, \"count\");\n    static readonly skipProperty = new NumProperty(Versions.v1_6, \"skip\");\n\n    @property(ChoiceSetInputDataQuery.typeProperty)\n    type: string;\n\n    @property(ChoiceSetInputDataQuery.datasetProperty)\n    dataset: string;\n\n    @property(ChoiceSetInputDataQuery.countProperty)\n    count?: number;\n\n    @property(ChoiceSetInputDataQuery.skipProperty)\n    skip?: number;\n\n    //#endregion\n\n    protected getSchemaKey(): string {\n        return \"choices.data\";\n    }\n}\n\nexport type FetchedChoice = {\n    title: string;\n    value: string;\n};\n\nexport class ChoiceSetInput extends Input {\n    //#region Schema\n\n    static readonly valueProperty = new StringProperty(Versions.v1_0, \"value\");\n    static readonly choicesProperty = new SerializableObjectCollectionProperty(\n        Versions.v1_0,\n        \"choices\",\n        Choice\n    );\n    static readonly choicesDataProperty = new SerializableObjectProperty(\n        Versions.v1_6,\n        \"choices.data\",\n        ChoiceSetInputDataQuery\n    );\n    static readonly styleProperty = new ValueSetProperty(\n        Versions.v1_0,\n        \"style\",\n        [\n            { value: \"compact\" },\n            { value: \"expanded\" },\n            { value: \"filtered\", targetVersion: Versions.v1_5 }\n        ],\n        \"compact\"\n    );\n    static readonly isMultiSelectProperty = new BoolProperty(Versions.v1_0, \"isMultiSelect\", false);\n    static readonly placeholderProperty = new StringProperty(Versions.v1_0, \"placeholder\");\n    static readonly wrapProperty = new BoolProperty(Versions.v1_2, \"wrap\", false);\n\n    @property(ChoiceSetInput.valueProperty)\n    defaultValue?: string;\n\n    @property(ChoiceSetInput.styleProperty)\n    style?: \"compact\" | \"expanded\" | \"filtered\";\n\n    get isCompact(): boolean {\n        return !this.style || this.style === \"compact\";\n    }\n\n    set isCompact(value: boolean) {\n        this.style = value ? undefined : \"expanded\";\n    }\n\n    @property(ChoiceSetInput.isMultiSelectProperty)\n    isMultiSelect: boolean = false;\n\n    @property(ChoiceSetInput.placeholderProperty)\n    placeholder?: string;\n\n    @property(ChoiceSetInput.wrapProperty)\n    wrap: boolean = false;\n\n    @property(ChoiceSetInput.choicesProperty)\n    choices: Choice[] = [];\n\n    @property(ChoiceSetInput.choicesDataProperty)\n    choicesData?: ChoiceSetInputDataQuery;\n\n    //#endregion\n\n    private static _uniqueCategoryCounter = 0;\n\n    private static getUniqueCategoryName(): string {\n        const uniqueCategoryName = \"__ac-category\" + ChoiceSetInput._uniqueCategoryCounter;\n\n        ChoiceSetInput._uniqueCategoryCounter++;\n\n        return uniqueCategoryName;\n    }\n\n    private _uniqueCategoryName: string;\n    private _selectElement: HTMLSelectElement | undefined;\n    private _textInput: HTMLInputElement | undefined;\n    private _toggleInputs: HTMLInputElement[] | undefined;\n    private _labels: Array<HTMLElement | undefined>;\n    private _filteredChoiceSet?: FilteredChoiceSet;\n\n    isDynamicTypeahead(): boolean {\n        return (\n            this.hostConfig.inputs.allowDynamicallyFilteredChoiceSet &&\n            !!this.choicesData &&\n            !!this.choicesData.dataset &&\n            this.choicesData.type === \"Data.Query\"\n        );\n    }\n\n    getFilterForDynamicSearch(): string | undefined {\n        return this._textInput?.value;\n    }\n\n    getDropdownElement() {\n        return this._filteredChoiceSet?.dropdown;\n    }\n\n    renderChoices(filter: string, fetchedChoices: FetchedChoice[]) {\n        this._filteredChoiceSet?.processResponse(filter, fetchedChoices);\n    }\n\n    showLoadingIndicator() {\n        this._filteredChoiceSet?.showLoadingIndicator();\n    }\n\n    removeLoadingIndicator() {\n        this._filteredChoiceSet?.removeLoadingIndicator();\n    }\n\n    showErrorIndicator(filter: string, error: string) {\n        this._filteredChoiceSet?.showErrorIndicator(filter, error);\n    }\n\n    showValidationFailureCue() {\n        this._textInput?.classList.add(\n            this.hostConfig.makeCssClassName(\"ac-input-validation-failed\")\n        );\n    }\n\n    removeValidationFailureCue() {\n        this._textInput?.classList.remove(\n            this.hostConfig.makeCssClassName(\"ac-input-validation-failed\")\n        );\n    }\n\n    private createPlaceholderOptionWhenValueDoesNotExist(): HTMLElement | undefined {\n        if (!this.value) {\n            const placeholderOption = document.createElement(\"option\");\n            placeholderOption.selected = true;\n            placeholderOption.disabled = true;\n            placeholderOption.hidden = true;\n            placeholderOption.value = \"\";\n\n            if (this.placeholder) {\n                placeholderOption.text = this.placeholder;\n            }\n            return placeholderOption;\n        }\n        return undefined;\n    }\n\n    // Make sure `aria-current` is applied to the currently-selected item\n    private internalApplyAriaCurrent(): void {\n        if (this._selectElement) {\n            const options = this._selectElement.options;\n\n            if (options) {\n                for (const option of Array.from(options)) {\n                    if (option.selected) {\n                        option.setAttribute(\"aria-current\", \"true\");\n                    } else {\n                        option.removeAttribute(\"aria-current\");\n                    }\n                }\n            }\n        }\n    }\n\n    private renderCompoundInput(\n        cssClassName: string,\n        type: \"checkbox\" | \"radio\",\n        defaultValues: string[] | undefined\n    ): HTMLElement {\n        const element = document.createElement(\"div\");\n        element.className = this.hostConfig.makeCssClassName(\"ac-input\", cssClassName);\n        element.style.width = \"100%\";\n\n        element.tabIndex = this.isDesignMode() ? -1 : 0;\n\n        this._toggleInputs = [];\n        this._labels = [];\n\n        for (const choice of this.choices) {\n            const input = document.createElement(\"input\");\n            input.id = Utils.generateUniqueId();\n            input.type = type;\n            input.style.margin = \"0\";\n            input.style.display = \"inline-block\";\n            input.style.verticalAlign = \"middle\";\n            input.style.flex = \"0 0 auto\";\n            input.name = this.id ? this.id : this._uniqueCategoryName;\n\n            if (this.isRequired) {\n                input.setAttribute(\"aria-required\", \"true\");\n            }\n\n            input.tabIndex = this.isDesignMode() ? -1 : 0;\n\n            if (choice.value) {\n                input.value = choice.value;\n            }\n\n            if (choice.title) {\n                input.setAttribute(\"aria-label\", choice.title);\n            }\n\n            if (defaultValues && choice.value) {\n                if (defaultValues.indexOf(choice.value) >= 0) {\n                    input.checked = true;\n                }\n            }\n\n            input.onchange = () => {\n                this.valueChanged();\n            };\n\n            this._toggleInputs.push(input);\n\n            const compoundInput = document.createElement(\"div\");\n            compoundInput.style.display = \"flex\";\n            compoundInput.style.alignItems = \"center\";\n\n            Utils.appendChild(compoundInput, input);\n\n            const label = new TextBlock();\n            label.setParent(this);\n            label.forElementId = input.id;\n            label.hostConfig = this.hostConfig;\n            label.text = choice.title ? choice.title : \"Choice \" + this._toggleInputs.length;\n            label.useMarkdown = GlobalSettings.useMarkdownInRadioButtonAndCheckbox;\n            label.wrap = this.wrap;\n\n            const labelElement = label.render();\n\n            this._labels.push(labelElement);\n\n            if (labelElement) {\n                labelElement.id = Utils.generateUniqueId();\n                labelElement.style.display = \"inline-block\";\n                labelElement.style.flex = \"1 1 auto\";\n                labelElement.style.marginLeft = \"6px\";\n                labelElement.style.verticalAlign = \"middle\";\n\n                const spacerElement = document.createElement(\"div\");\n                spacerElement.style.width = \"6px\";\n\n                Utils.appendChild(compoundInput, spacerElement);\n                Utils.appendChild(compoundInput, labelElement);\n            }\n\n            Utils.appendChild(element, compoundInput);\n        }\n\n        return element;\n    }\n\n    protected updateInputControlAriaLabelledBy() {\n        if (\n            (this.isMultiSelect || this.style === \"expanded\") &&\n            this._toggleInputs &&\n            this._labels\n        ) {\n            const labelIds: string[] = this.getAllLabelIds();\n\n            for (let i = 0; i < this._toggleInputs.length; i++) {\n                let joinedLabelIds = labelIds.join(\" \");\n                const label = this._labels[i];\n\n                if (label && label.id) {\n                    joinedLabelIds += \" \" + label.id;\n                }\n\n                if (joinedLabelIds) {\n                    this._toggleInputs[i].setAttribute(\"aria-labelledby\", joinedLabelIds);\n                } else {\n                    this._toggleInputs[i].removeAttribute(\"aria-labelledby\");\n                }\n            }\n        } else {\n            super.updateInputControlAriaLabelledBy();\n        }\n    }\n\n    protected internalRender(): HTMLElement | undefined {\n        this._uniqueCategoryName = ChoiceSetInput.getUniqueCategoryName();\n        if (this.isDynamicTypeahead()) {\n            const filteredChoiceSet = new FilteredChoiceSet(\n                ChoiceSetInput._uniqueCategoryCounter,\n                this.choices,\n                this.hostConfig\n            );\n            filteredChoiceSet.render();\n\n            if (filteredChoiceSet.textInput) {\n                this._textInput = filteredChoiceSet.textInput;\n                if (this.defaultValue) {\n                    this._textInput.value = this.defaultValue;\n                }\n                if (this.placeholder && !this._textInput.value) {\n                    this._textInput.placeholder = this.placeholder;\n                    this._textInput.setAttribute(\"aria-label\", this.placeholder);\n                }\n                this._textInput.tabIndex = this.isDesignMode() ? -1 : 0;\n                const onInputChangeEventHandler = Utils.debounce(() => {\n                    filteredChoiceSet.processChoices();\n                    this.valueChanged();\n                    if (this._textInput) {\n                        // Remove aria-label when value is not empty so narration software doesn't\n                        // read the placeholder\n                        if (this.value) {\n                            this._textInput.removeAttribute(\"placeholder\");\n                            this._textInput.removeAttribute(\"aria-label\");\n                        } else if (this.placeholder) {\n                            this._textInput.placeholder = this.placeholder;\n                            this._textInput.setAttribute(\"aria-label\", this.placeholder);\n                        }\n                    }\n                }, this.hostConfig.inputs.debounceTimeInMilliSeconds);\n                this._textInput.onclick = onInputChangeEventHandler;\n                this._textInput.oninput = onInputChangeEventHandler;\n            }\n            filteredChoiceSet.parent = this;\n            this._filteredChoiceSet = filteredChoiceSet;\n            return filteredChoiceSet.renderedElement;\n        } else if (this.isMultiSelect) {\n            // Render as a list of toggle inputs\n            return this.renderCompoundInput(\n                \"ac-choiceSetInput-multiSelect\",\n                \"checkbox\",\n                this.defaultValue\n                    ? this.defaultValue.split(this.hostConfig.choiceSetInputValueSeparator)\n                    : undefined\n            );\n        } else {\n            if (this.style === \"expanded\") {\n                // Render as a series of radio buttons\n                return this.renderCompoundInput(\n                    \"ac-choiceSetInput-expanded\",\n                    \"radio\",\n                    this.defaultValue ? [this.defaultValue] : undefined\n                );\n            } else if (this.style === \"filtered\") {\n                // Render as a text input coupled with a datalist\n                const inputContainer = document.createElement(\"div\");\n                inputContainer.style.width = \"100%\";\n\n                this._textInput = document.createElement(\"input\");\n                this._textInput.className = this.hostConfig.makeCssClassName(\n                    \"ac-input\",\n                    \"ac-multichoiceInput\",\n                    \"ac-choiceSetInput-filtered\"\n                );\n                this._textInput.type = \"text\";\n                this._textInput.style.width = \"100%\";\n                this._textInput.oninput = () => {\n                    this.valueChanged();\n\n                    if (this._textInput) {\n                        // Remove aria-label when value is not empty so narration software doesn't\n                        // read the placeholder\n                        if (this.value) {\n                            this._textInput.removeAttribute(\"placeholder\");\n                            this._textInput.removeAttribute(\"aria-label\");\n                        } else if (this.placeholder) {\n                            this._textInput.placeholder = this.placeholder;\n                            this._textInput.setAttribute(\"aria-label\", this.placeholder);\n                        }\n                    }\n                };\n\n                if (this.defaultValue) {\n                    this._textInput.value = this.defaultValue;\n                }\n\n                if (this.placeholder && !this._textInput.value) {\n                    this._textInput.placeholder = this.placeholder;\n                    this._textInput.setAttribute(\"aria-label\", this.placeholder);\n                }\n\n                this._textInput.tabIndex = this.isDesignMode() ? -1 : 0;\n\n                const dataList = document.createElement(\"datalist\");\n                dataList.id = Utils.generateUniqueId();\n\n                for (const choice of this.choices) {\n                    const option = document.createElement(\"option\");\n                    // To fix https://stackoverflow.com/questions/29882361/show-datalist-labels-but-submit-the-actual-value\n                    // value is mapped to choice.title other than choice.value\n                    if (choice.title) {\n                        option.value = choice.title;\n                        option.setAttribute(\"aria-label\", choice.title);\n                    }\n\n                    option.tabIndex = this.isDesignMode() ? -1 : 0;\n\n                    dataList.appendChild(option);\n                }\n\n                this._textInput.setAttribute(\"list\", dataList.id);\n\n                inputContainer.append(this._textInput, dataList);\n\n                return inputContainer;\n            } else {\n                // Render as a combo box\n                this._selectElement = document.createElement(\"select\");\n                this._selectElement.className = this.hostConfig.makeCssClassName(\n                    \"ac-input\",\n                    \"ac-multichoiceInput\",\n                    \"ac-choiceSetInput-compact\"\n                );\n                this._selectElement.style.width = \"100%\";\n\n                this._selectElement.tabIndex = this.isDesignMode() ? -1 : 0;\n\n                const placeholderOption = this.createPlaceholderOptionWhenValueDoesNotExist();\n\n                Utils.appendChild(this._selectElement, placeholderOption);\n\n                for (const choice of this.choices) {\n                    const option = document.createElement(\"option\");\n                    option.value = choice.value!;\n\n                    if (choice.title) {\n                        option.text = choice.title;\n                        option.setAttribute(\"aria-label\", choice.title);\n                    }\n\n                    option.tabIndex = this.isDesignMode() ? -1 : 0;\n\n                    if (choice.value === this.defaultValue) {\n                        option.selected = true;\n                    }\n\n                    Utils.appendChild(this._selectElement, option);\n                }\n\n                this._selectElement.onchange = () => {\n                    this.internalApplyAriaCurrent();\n                    this.valueChanged();\n                };\n\n                this.internalApplyAriaCurrent();\n\n                return this._selectElement;\n            }\n        }\n    }\n\n    updateVisualState(eventType: InputEventType): void {\n        if (!this.allowRevealOnHoverStyle) {\n            return;\n        }\n\n        if (!this.isMultiSelect && this.isCompact) {\n            super.updateVisualState(eventType);\n\n            if (this._selectElement && this.inputStyle === Enums.InputStyle.RevealOnHover) {\n                const hideDropDownPicker = this.shouldHideInputAdornersForRevealOnHover(this._selectElement, eventType);\n                \n                if (hideDropDownPicker) {\n                    this._selectElement.style.appearance = \"none\";\n                    this._selectElement.classList.remove(this.hostConfig.makeCssClassName(\"ac-inputStyle-revealOnHover-onfocus\"));\n                } else {\n                    this._selectElement.style.appearance = \"auto\";\n                    this._selectElement.classList.add(this.hostConfig.makeCssClassName(\"ac-inputStyle-revealOnHover-onfocus\"));\n                }\t\t\t\n            }\n        }\n    }\n\n    getJsonTypeName(): string {\n        return \"Input.ChoiceSet\";\n    }\n\n    focus() {\n        if (this._toggleInputs && (this.isMultiSelect || this.style === \"expanded\")) {\n            if (this._toggleInputs.length > 0) {\n                this._toggleInputs[0].focus();\n            }\n        } else if (this._textInput) {\n            this._textInput.focus();\n        } else {\n            super.focus();\n        }\n    }\n\n    internalValidateProperties(context: ValidationResults) {\n        super.internalValidateProperties(context);\n\n        if (this.choices.length === 0) {\n            context.addFailure(\n                this,\n                Enums.ValidationEvent.CollectionCantBeEmpty,\n                Strings.errors.choiceSetMustHaveAtLeastOneChoice()\n            );\n        }\n\n        for (const choice of this.choices) {\n            if (!choice.title || !choice.value) {\n                context.addFailure(\n                    this,\n                    Enums.ValidationEvent.PropertyCantBeNull,\n                    Strings.errors.choiceSetChoicesMustHaveTitleAndValue()\n                );\n            }\n        }\n    }\n\n    isSet(): boolean {\n        return this.value ? true : false;\n    }\n\n    isValid(): boolean {\n        if (this._textInput) {\n            if (this.value === \"\" || this.value === this.placeholder) {\n                return true;\n            }\n            for (const choice of this.choices) {\n                if (this.value === choice.value) {\n                    return true;\n                }\n            }\n            if (this.dynamicChoices) {\n                for (const choice of this.dynamicChoices) {\n                    if (this.value === choice) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n\n        return super.isValid();\n    }\n\n    get value(): string | undefined {\n        if (!this.isMultiSelect) {\n            if (this._selectElement) {\n                return this._selectElement.selectedIndex > 0\n                    ? this._selectElement.value\n                    : undefined;\n            } else if (this._textInput) {\n                for (const choice of this.choices) {\n                    if (choice.title && this._textInput.value === choice.title) {\n                        return choice.value;\n                    }\n                }\n                return this._textInput.value;\n            } else if (this._toggleInputs && this._toggleInputs.length > 0) {\n                for (const toggleInput of this._toggleInputs) {\n                    if (toggleInput.checked) {\n                        return toggleInput.value;\n                    }\n                }\n            }\n\n            return undefined;\n        } else {\n            if (!this._toggleInputs || this._toggleInputs.length === 0) {\n                return undefined;\n            }\n\n            let result: string = \"\";\n\n            for (const toggleInput of this._toggleInputs) {\n                if (toggleInput.checked) {\n                    if (result !== \"\") {\n                        result += this.hostConfig.choiceSetInputValueSeparator;\n                    }\n\n                    result += toggleInput.value;\n                }\n            }\n\n            return result ? result : undefined;\n        }\n    }\n\n    get dynamicChoices() {\n        return this._filteredChoiceSet?.dynamicChoices;\n    }\n}\n\nexport class FilteredChoiceSet {\n    private _parent?: CardObject;\n    private _choiceSetId: number;\n    private _choices: Choice[];\n    private _dynamicChoices: FetchedChoice[];\n    private _visibleChoiceCount: number;\n    private _highlightedChoiceId: number;\n    private _textInput?: HTMLInputElement;\n    private _dropdown?: HTMLDivElement;\n    private _loadingIndicator?: HTMLDivElement;\n    private _errorIndicator?: HTMLDivElement;\n    private _renderedElement?: HTMLElement;\n    private _hostConfig?: HostConfig;\n\n    constructor(choiceSetId: number, choices: Choice[], hostConfig?: HostConfig) {\n        this._choiceSetId = choiceSetId;\n        this._choices = choices;\n        this._dynamicChoices = [];\n        this._visibleChoiceCount = 0;\n        this._highlightedChoiceId = -1;\n        this._hostConfig = hostConfig;\n    }\n\n    render() {\n        const choiceSetContainer = document.createElement(\"div\");\n        choiceSetContainer.className = this.hostConfig.makeCssClassName(\n            \"ac-input\",\n            \"ac-choiceSetInput-filtered-container\"\n        );\n\n        this._textInput = document.createElement(\"input\");\n        this._textInput.className = this.hostConfig.makeCssClassName(\n            \"ac-input\",\n            \"ac-choiceSetInput-filtered-textbox\"\n        );\n        this._textInput.type = \"text\";\n\n        this._textInput.onkeydown = (event) => {\n            if (event.key === \"ArrowDown\") {\n                event.preventDefault();\n                this.highlightChoice(this._highlightedChoiceId + 1);\n            } else if (event.key === \"ArrowUp\") {\n                event.preventDefault();\n                this.highlightChoice(this._highlightedChoiceId - 1);\n            } else if (event.key === \"Enter\") {\n                const choice = document.getElementById(\n                    `ac-choiceSetInput-${this._choiceSetId}-choice-${this._highlightedChoiceId}`\n                );\n                choice?.click();\n            }\n        };\n\n        this._dropdown = document.createElement(\"div\");\n        this._dropdown.className = this.hostConfig.makeCssClassName(\n            \"ac-input\",\n            \"ac-choiceSetInput-filtered-dropdown\"\n        );\n\n        choiceSetContainer.append(this._textInput, this._dropdown);\n\n        this._renderedElement = choiceSetContainer;\n    }\n\n    private createChoice(value: string, filter: string, id: number): HTMLSpanElement {\n        const choice = document.createElement(\"span\");\n        choice.className = this.hostConfig.makeCssClassName(\"ac-input\", \"ac-choiceSetInput-choice\");\n        choice.id = `ac-choiceSetInput-${this._choiceSetId}-choice-${id}`;\n        choice.innerHTML = value.replace(filter, `<b>${filter}</b>`);\n        choice.tabIndex = -1;\n\n        choice.onclick = () => {\n            choice.classList.remove(\n                this.hostConfig.makeCssClassName(\"ac-choiceSetInput-choice-highlighted\")\n            );\n            this._highlightedChoiceId = -1;\n            if (this._textInput) {\n                this._textInput.value = choice.innerText;\n                this._textInput.focus();\n            }\n            if (this._dropdown) {\n                this._dropdown.classList.remove(\n                    this.hostConfig.makeCssClassName(\"ac-choiceSetInput-filtered-dropdown-open\")\n                );\n            }\n        };\n        choice.onmousemove = () => {\n            if (this._highlightedChoiceId !== id) {\n                this.highlightChoice(id, false);\n            }\n        };\n\n        return choice;\n    }\n\n    private highlightChoice(id: number, scrollIntoView: boolean = true) {\n        if (this._visibleChoiceCount > 0) {\n            const currentHighlightedChoice = document.getElementById(\n                `ac-choiceSetInput-${this._choiceSetId}-choice-${this._highlightedChoiceId}`\n            );\n            const nextHighlightedChoice = document.getElementById(\n                `ac-choiceSetInput-${this._choiceSetId}-choice-${id}`\n            );\n            if (nextHighlightedChoice) {\n                currentHighlightedChoice?.classList.remove(\n                    this.hostConfig.makeCssClassName(\"ac-choiceSetInput-choice-highlighted\")\n                );\n                nextHighlightedChoice.classList.add(\n                    this.hostConfig.makeCssClassName(\"ac-choiceSetInput-choice-highlighted\")\n                );\n                if (scrollIntoView) {\n                    nextHighlightedChoice.scrollIntoView();\n                }\n                this._highlightedChoiceId = id;\n            } else if (currentHighlightedChoice && this._highlightedChoiceId !== 0) {\n                this.highlightChoice(0);\n            } else {\n                this.highlightChoice(this._visibleChoiceCount - 1);\n            }\n        }\n    }\n\n    private filterChoices() {\n        const filter = this._textInput?.value.toLowerCase().trim() || \"\";\n        const choices = [...this._choices, ...this._dynamicChoices];\n        for (const choice of choices) {\n            if (choice.title) {\n                const matchIndex = choice.title.toLowerCase().indexOf(filter);\n                if (matchIndex !== -1) {\n                    const matchedText = choice.title.substring(\n                        matchIndex,\n                        matchIndex + filter.length\n                    );\n                    const choiceContainer = this.createChoice(\n                        choice.title,\n                        matchedText,\n                        this._visibleChoiceCount++\n                    );\n                    this._dropdown?.appendChild(choiceContainer);\n                }\n            }\n        }\n    }\n\n    private getStatusIndicator(error?: string): HTMLDivElement {\n        if (error) {\n            if (!this._errorIndicator) {\n                const errorIndicator = document.createElement(\"div\");\n                errorIndicator.className = this.hostConfig.makeCssClassName(\n                    \"ac-input\",\n                    \"ac-choiceSetInput-statusIndicator\",\n                    \"ac-choiceSetInput-errorIndicator\"\n                );\n                this._errorIndicator = errorIndicator;\n            }\n            this._errorIndicator.innerText = error;\n            return this._errorIndicator;\n        } else {\n            if (!this._loadingIndicator) {\n                const loadingIndicator = document.createElement(\"div\");\n                loadingIndicator.className = this.hostConfig.makeCssClassName(\n                    \"ac-input\",\n                    \"ac-choiceSetInput-statusIndicator\"\n                );\n                this._loadingIndicator = loadingIndicator;\n            }\n            this._loadingIndicator.innerText =\n                this._visibleChoiceCount === 0 ? \"Loading...\" : \"Loading more...\";\n            return this._loadingIndicator;\n        }\n    }\n\n    private resetDropdown() {\n        if (this._dropdown) {\n            Utils.clearElementChildren(this._dropdown);\n            this._visibleChoiceCount = 0;\n            this._highlightedChoiceId = -1;\n        }\n    }\n\n    private showDropdown() {\n        if (this._dropdown?.hasChildNodes()) {\n            this._dropdown.classList.add(\n                this.hostConfig.makeCssClassName(\"ac-choiceSetInput-filtered-dropdown-open\")\n            );\n        }\n    }\n\n    processChoices() {\n        this.resetDropdown();\n        this.filterChoices();\n        this.showDropdown();\n    }\n\n    processResponse(filter: string, fetchedChoices: FetchedChoice[]) {\n        if (filter === this._textInput?.value) {\n            this.resetDropdown();\n            this._dynamicChoices = fetchedChoices;\n            this.filterChoices();\n            if (this._visibleChoiceCount === 0) {\n                this.showErrorIndicator(filter, \"No results found\");\n            }\n        }\n    }\n\n    showLoadingIndicator() {\n        const loadingIndicator = this.getStatusIndicator();\n        this._dropdown?.appendChild(loadingIndicator);\n        this.showDropdown();\n    }\n\n    removeLoadingIndicator() {\n        if (this._loadingIndicator && this._dropdown?.contains(this._loadingIndicator)) {\n            this._dropdown?.removeChild(this._loadingIndicator);\n        }\n    }\n\n    showErrorIndicator(filter: string, error: string) {\n        if (filter === this._textInput?.value) {\n            this.processChoices();\n            const errorIndicator = this.getStatusIndicator(error);\n            this._dropdown?.appendChild(errorIndicator);\n            errorIndicator.scrollIntoView();\n        }\n    }\n\n    get dynamicChoices() {\n        return this._dynamicChoices?.map((choice) => choice.title);\n    }\n\n    get hostConfig(): HostConfig {\n        if (this._hostConfig) {\n            return this._hostConfig;\n        } else {\n            if (this.parent) {\n                return this.parent.hostConfig;\n            } else {\n                return defaultHostConfig;\n            }\n        }\n    }\n\n    set parent(value: CardObject | undefined) {\n        this._parent = value;\n    }\n\n    get parent() {\n        return this._parent;\n    }\n\n    get renderedElement() {\n        return this._renderedElement;\n    }\n\n    get textInput() {\n        return this._textInput;\n    }\n\n    get dropdown() {\n        return this._dropdown;\n    }\n}\n\nexport class NumberInput extends Input {\n    //#region Schema\n\n    static readonly valueProperty = new NumProperty(Versions.v1_0, \"value\");\n    static readonly placeholderProperty = new StringProperty(Versions.v1_0, \"placeholder\");\n    static readonly minProperty = new NumProperty(Versions.v1_0, \"min\");\n    static readonly maxProperty = new NumProperty(Versions.v1_0, \"max\");\n\n    @property(NumberInput.valueProperty)\n    defaultValue?: number;\n\n    @property(NumberInput.minProperty)\n    min?: number;\n\n    @property(NumberInput.maxProperty)\n    max?: number;\n\n    @property(NumberInput.placeholderProperty)\n    placeholder?: string;\n\n    //#endregion\n\n    private _numberInputElement: HTMLInputElement;\n\n    protected internalRender(): HTMLElement | undefined {\n        this._numberInputElement = document.createElement(\"input\");\n        this._numberInputElement.setAttribute(\"type\", \"number\");\n\n        if (this.min !== undefined) {\n            this._numberInputElement.setAttribute(\"min\", this.min.toString());\n        }\n\n        if (this.max !== undefined) {\n            this._numberInputElement.setAttribute(\"max\", this.max.toString());\n        }\n\n        this._numberInputElement.className = this.hostConfig.makeCssClassName(\n            \"ac-input\",\n            \"ac-numberInput\"\n        );\n        this._numberInputElement.style.width = \"100%\";\n\n        this._numberInputElement.tabIndex = this.isDesignMode() ? -1 : 0;\n\n        if (this.defaultValue !== undefined) {\n            this._numberInputElement.valueAsNumber = this.defaultValue;\n        }\n\n        if (this.placeholder) {\n            this._numberInputElement.placeholder = this.placeholder;\n            this._numberInputElement.setAttribute(\"aria-label\", this.placeholder);\n        }\n\n        this._numberInputElement.oninput = () => {\n            this.valueChanged();\n        };\n\n        return this._numberInputElement;\n    }\n\n    getJsonTypeName(): string {\n        return \"Input.Number\";\n    }\n\n    isSet(): boolean {\n        return this.value !== undefined && !isNaN(this.value);\n    }\n\n    isValid(): boolean {\n        if (this.value === undefined) {\n            return !this.isRequired;\n        }\n\n        let result = true;\n\n        if (this.min !== undefined) {\n            result = result && this.value >= this.min;\n        }\n\n        if (this.max !== undefined) {\n            result = result && this.value <= this.max;\n        }\n\n        return result;\n    }\n\n    get value(): number | undefined {\n        return this._numberInputElement ? this._numberInputElement.valueAsNumber : undefined;\n    }\n\n    set value(value: number | undefined) {\n        if (value && this._numberInputElement) {\n            this._numberInputElement.value = value.toString();\n        }\n    }\n}\n\nexport class DateInput extends Input {\n    //#region Schema\n\n    static readonly valueProperty = new StringProperty(Versions.v1_0, \"value\");\n    static readonly placeholderProperty = new StringProperty(Versions.v1_0, \"placeholder\");\n    static readonly minProperty = new StringProperty(Versions.v1_0, \"min\");\n    static readonly maxProperty = new StringProperty(Versions.v1_0, \"max\");\n\n    @property(DateInput.valueProperty)\n    defaultValue?: string;\n\n    @property(DateInput.minProperty)\n    min?: string;\n\n    @property(DateInput.maxProperty)\n    max?: string;\n\n    @property(DateInput.placeholderProperty)\n    placeholder?: string;\n\n    //#endregion\n\n    private _dateInputElement: HTMLInputElement;\n\n    protected internalRender(): HTMLElement | undefined {\n        this._dateInputElement = document.createElement(\"input\");\n        this._dateInputElement.setAttribute(\"type\", \"date\");\n\n        if (this.min) {\n            this._dateInputElement.setAttribute(\"min\", this.min);\n        }\n\n        if (this.max) {\n            this._dateInputElement.setAttribute(\"max\", this.max);\n        }\n\n        if (this.placeholder) {\n            this._dateInputElement.placeholder = this.placeholder;\n            this._dateInputElement.setAttribute(\"aria-label\", this.placeholder);\n        }\n\n        this._dateInputElement.tabIndex = this.isDesignMode() ? -1 : 0;\n\n        this._dateInputElement.className = this.hostConfig.makeCssClassName(\n            \"ac-input\",\n            \"ac-dateInput\"\n        );\n        this._dateInputElement.style.width = \"100%\";\n\n        this._dateInputElement.oninput = () => {\n            this.valueChanged();\n        };\n\n        if (this.defaultValue) {\n            this._dateInputElement.value = this.defaultValue;\n        }\n\n        return this._dateInputElement;\n    }\n\n    updateVisualState(eventType: InputEventType): void {\n        if (!this.allowRevealOnHoverStyle) {\n            return;\n        }\n\n        super.updateVisualState(eventType);\n\n        if (this._dateInputElement && this.inputStyle === Enums.InputStyle.RevealOnHover) {\n            const hideDatePicker = this.shouldHideInputAdornersForRevealOnHover(this._dateInputElement, eventType);\n\n            if (hideDatePicker) {\n                this._dateInputElement.classList.remove(this.hostConfig.makeCssClassName(\"ac-inputStyle-revealOnHover-onfocus\"));\n            } else {\n                this._dateInputElement.classList.add(this.hostConfig.makeCssClassName(\"ac-inputStyle-revealOnHover-onfocus\"));\n            }\n\n            updateInputAdornersVisibility(this._dateInputElement, hideDatePicker  /*hide*/);\n        }\n    }\n\n    getJsonTypeName(): string {\n        return \"Input.Date\";\n    }\n\n    isSet(): boolean {\n        return this.value ? true : false;\n    }\n\n    isValid(): boolean {\n        if (!this.value) {\n            return !this.isRequired;\n        }\n\n        const valueAsDate = new Date(this.value);\n\n        let result = true;\n\n        if (this.min) {\n            const minDate = new Date(this.min);\n\n            result = result && valueAsDate >= minDate;\n        }\n\n        if (this.max) {\n            const maxDate = new Date(this.max);\n\n            result = result && valueAsDate <= maxDate;\n        }\n\n        return result;\n    }\n\n    get value(): string | undefined {\n        return this._dateInputElement ? this._dateInputElement.value : undefined;\n    }\n}\n\nexport class TimeProperty extends CustomProperty<string | undefined> {\n    constructor(readonly targetVersion: Version, readonly name: string) {\n        super(\n            targetVersion,\n            name,\n            (\n                sender: SerializableObject,\n                prop: PropertyDefinition,\n                source: PropertyBag,\n                context: BaseSerializationContext\n            ) => {\n                const value = source[prop.name];\n\n                if (typeof value === \"string\" && value && /^[0-9]{2}:[0-9]{2}$/.test(value)) {\n                    return value;\n                }\n\n                return undefined;\n            },\n            (\n                sender: SerializableObject,\n                prop: PropertyDefinition,\n                target: PropertyBag,\n                value: string | undefined,\n                context: BaseSerializationContext\n            ) => {\n                context.serializeValue(target, prop.name, value);\n            }\n        );\n    }\n}\n\nexport class TimeInput extends Input {\n    private static convertTimeStringToDate(timeString: string): Date {\n        return new Date(\"1973-09-04T\" + timeString + \":00Z\");\n    }\n\n    //#region Schema\n\n    static readonly valueProperty = new TimeProperty(Versions.v1_0, \"value\");\n    static readonly placeholderProperty = new StringProperty(Versions.v1_0, \"placeholder\");\n    static readonly minProperty = new TimeProperty(Versions.v1_0, \"min\");\n    static readonly maxProperty = new TimeProperty(Versions.v1_0, \"max\");\n\n    @property(TimeInput.valueProperty)\n    defaultValue?: string;\n\n    @property(TimeInput.minProperty)\n    min?: string;\n\n    @property(TimeInput.maxProperty)\n    max?: string;\n\n    @property(TimeInput.placeholderProperty)\n    placeholder?: string;\n\n    //#endregion\n\n    private _timeInputElement: HTMLInputElement;\n\n    protected internalRender(): HTMLElement | undefined {\n        this._timeInputElement = document.createElement(\"input\");\n        this._timeInputElement.setAttribute(\"type\", \"time\");\n\n        if (this.min) {\n            this._timeInputElement.setAttribute(\"min\", this.min);\n        }\n\n        if (this.max) {\n            this._timeInputElement.setAttribute(\"max\", this.max);\n        }\n\n        this._timeInputElement.className = this.hostConfig.makeCssClassName(\n            \"ac-input\",\n            \"ac-timeInput\"\n        );\n        this._timeInputElement.style.width = \"100%\";\n        this._timeInputElement.oninput = () => {\n            this.valueChanged();\n        };\n\n        if (this.placeholder) {\n            this._timeInputElement.placeholder = this.placeholder;\n            this._timeInputElement.setAttribute(\"aria-label\", this.placeholder);\n        }\n\n        this._timeInputElement.tabIndex = this.isDesignMode() ? -1 : 0;\n\n        if (this.defaultValue) {\n            this._timeInputElement.value = this.defaultValue;\n        }\n\n        return this._timeInputElement;\n    }\n\n    updateVisualState(eventType: InputEventType): void {\n        if (!this.allowRevealOnHoverStyle) {\n            return;\n        }\n        \n        super.updateVisualState(eventType);\n\n        if (this._timeInputElement && this.inputStyle === Enums.InputStyle.RevealOnHover) {\n            const hideTimePicker = this.shouldHideInputAdornersForRevealOnHover(this._timeInputElement, eventType);\n\n            if (hideTimePicker) {\n                this._timeInputElement.classList.remove(this.hostConfig.makeCssClassName(\"ac-inputStyle-revealOnHover-onfocus\"));\n            } else {\n                this._timeInputElement.classList.add(this.hostConfig.makeCssClassName(\"ac-inputStyle-revealOnHover-onfocus\"));\n            }\n\n            updateInputAdornersVisibility(this._timeInputElement, hideTimePicker /*hide*/);\n        }\n    }\n\n    getJsonTypeName(): string {\n        return \"Input.Time\";\n    }\n\n    isSet(): boolean {\n        return this.value ? true : false;\n    }\n\n    isValid(): boolean {\n        if (!this.value) {\n            return !this.isRequired;\n        }\n\n        const valueAsDate = TimeInput.convertTimeStringToDate(this.value);\n\n        let result = true;\n\n        if (this.min) {\n            const minDate = TimeInput.convertTimeStringToDate(this.min);\n\n            result = result && valueAsDate >= minDate;\n        }\n\n        if (this.max) {\n            const maxDate = TimeInput.convertTimeStringToDate(this.max);\n\n            result = result && valueAsDate <= maxDate;\n        }\n\n        return result;\n    }\n\n    get value(): string | undefined {\n        return this._timeInputElement ? this._timeInputElement.value : undefined;\n    }\n}\n\nexport const enum ActionButtonState {\n    Normal,\n    Expanded,\n    Subdued\n}\n\nexport type ActionType = { new (): Action };\n\nexport abstract class Action extends CardObject {\n    //#region Schema\n\n    static readonly titleProperty = new StringProperty(Versions.v1_0, \"title\");\n    static readonly iconUrlProperty = new StringProperty(Versions.v1_1, \"iconUrl\");\n    static readonly styleProperty = new ValueSetProperty(\n        Versions.v1_2,\n        \"style\",\n        [\n            { value: Enums.ActionStyle.Default },\n            { value: Enums.ActionStyle.Positive },\n            { value: Enums.ActionStyle.Destructive }\n        ],\n        Enums.ActionStyle.Default\n    );\n    static readonly modeProperty = new ValueSetProperty(\n        Versions.v1_5,\n        \"mode\",\n        [{ value: Enums.ActionMode.Primary }, { value: Enums.ActionMode.Secondary }],\n        Enums.ActionMode.Primary\n    );\n    static readonly tooltipProperty = new StringProperty(Versions.v1_5, \"tooltip\");\n    static readonly isEnabledProperty = new BoolProperty(Versions.v1_5, \"isEnabled\", true);\n    static readonly roleProperty = new EnumProperty(Versions.v1_6, \"role\", Enums.ActionRole);\n\n    @property(Action.titleProperty)\n    title?: string;\n\n    @property(Action.iconUrlProperty)\n    iconUrl?: string;\n\n    @property(Action.styleProperty)\n    style: string = Enums.ActionStyle.Default;\n\n    @property(Action.modeProperty)\n    mode: string = Enums.ActionMode.Primary;\n\n    @property(Action.tooltipProperty)\n    tooltip?: string;\n\n    @property(Action.isEnabledProperty)\n    isEnabled: boolean;\n    \n    @property(Action.roleProperty)\n    role?: Enums.ActionRole;\n\n    //#endregion\n\n    private renderButtonContent() {\n        if (this.renderedElement) {\n            // Cache hostConfig for perf\n            const hostConfig = this.hostConfig;\n\n            const titleElement = document.createElement(\"div\");\n            titleElement.style.overflow = \"hidden\";\n            titleElement.style.textOverflow = \"ellipsis\";\n\n            if (\n                !(\n                    hostConfig.actions.iconPlacement === Enums.ActionIconPlacement.AboveTitle ||\n                    hostConfig.actions.allowTitleToWrap\n                )\n            ) {\n                titleElement.style.whiteSpace = \"nowrap\";\n            }\n\n            if (this.title) {\n                titleElement.innerText = this.title;\n            }\n\n            if (!this.iconUrl) {\n                this.renderedElement.classList.add(\"noIcon\");\n                this.renderedElement.appendChild(titleElement);\n            } else {\n                const iconElement = document.createElement(\"img\");\n                iconElement.src = this.iconUrl;\n                iconElement.style.width = hostConfig.actions.iconSize + \"px\";\n                iconElement.style.height = hostConfig.actions.iconSize + \"px\";\n                iconElement.style.flex = \"0 0 auto\";\n\n                if (hostConfig.actions.iconPlacement === Enums.ActionIconPlacement.AboveTitle) {\n                    this.renderedElement.classList.add(\"iconAbove\");\n                    this.renderedElement.style.flexDirection = \"column\";\n\n                    if (this.title) {\n                        iconElement.style.marginBottom = \"6px\";\n                    }\n                } else {\n                    this.renderedElement.classList.add(\"iconLeft\");\n\n                    iconElement.style.maxHeight = \"100%\";\n\n                    if (this.title) {\n                        iconElement.style.marginRight = \"6px\";\n                    }\n                }\n\n                this.renderedElement.appendChild(iconElement);\n                this.renderedElement.appendChild(titleElement);\n            }\n        }\n    }\n\n    private getParentContainer(): Container | undefined {\n        if (this.parent instanceof Container) {\n            return this.parent;\n        }\n\n        return this.parent ? this.parent.getParentContainer() : undefined;\n    }\n\n    private _state: ActionButtonState = ActionButtonState.Normal;\n    private _actionCollection?: ActionCollection; // hold the reference to its action collection\n    private _isFocusable: boolean = true;\n\n    isDesignMode(): boolean {\n        const rootElement = this.getRootObject();\n\n        return rootElement instanceof CardElement && rootElement.isDesignMode();\n    }\n\n    protected updateCssClasses() {\n        if (this.parent && this.renderedElement) {\n            const hostConfig = this.parent.hostConfig;\n\n            this.renderedElement.className = hostConfig.makeCssClassName(\n                this.isEffectivelyEnabled() ? \"ac-pushButton\" : \"ac-pushButton-disabled\"\n            );\n\n            const parentContainer = this.getParentContainer();\n\n            if (parentContainer) {\n                const parentContainerStyle = parentContainer.getEffectiveStyle();\n\n                if (parentContainerStyle) {\n                    this.renderedElement.classList.add(\"style-\" + parentContainerStyle);\n                }\n            }\n\n            this.renderedElement.tabIndex = !this.isDesignMode() && this.isFocusable ? 0 : -1;\n\n            switch (this._state) {\n                case ActionButtonState.Normal:\n                    // No additional classes needed\n                    break;\n\n                case ActionButtonState.Expanded:\n                    this.renderedElement.classList.add(hostConfig.makeCssClassName(\"expanded\"));\n                    break;\n                case ActionButtonState.Subdued:\n                    this.renderedElement.classList.add(hostConfig.makeCssClassName(\"subdued\"));\n                    break;\n            }\n\n            if (this.style && this.isEffectivelyEnabled()) {\n                if (this.style === Enums.ActionStyle.Positive) {\n                    this.renderedElement.classList.add(\n                        ...hostConfig.makeCssClassNames(\"primary\", \"style-positive\")\n                    );\n                } else {\n                    this.renderedElement.classList.add(\n                        ...hostConfig.makeCssClassNames(\"style-\" + this.style.toLowerCase())\n                    );\n                }\n            }\n        }\n    }\n\n    protected getDefaultSerializationContext(): BaseSerializationContext {\n        return new SerializationContext();\n    }\n\n    protected internalGetReferencedInputs(): Dictionary<Input> {\n        return {};\n    }\n\n    protected internalPrepareForExecution(_inputs: Dictionary<Input> | undefined) {\n        // Do nothing in base implementation\n    }\n\n    protected internalValidateInputs(referencedInputs: Dictionary<Input> | undefined): Input[] {\n        const result: Input[] = [];\n\n        if (referencedInputs) {\n            for (const key of Object.keys(referencedInputs)) {\n                const input = referencedInputs[key];\n\n                if (!input.validateValue()) {\n                    result.push(input);\n                }\n            }\n        }\n\n        return result;\n    }\n\n    protected shouldSerialize(context: SerializationContext): boolean {\n        return context.actionRegistry.findByName(this.getJsonTypeName()) !== undefined;\n    }\n\n    protected raiseExecuteActionEvent() {\n        if (this.onExecute) {\n            this.onExecute(this);\n        }\n\n        raiseExecuteActionEvent(this);\n    }\n\n    protected internalAfterExecute() {\n        let rootObject = this.getRootObject();\n\n        if (rootObject instanceof CardElement) {\n            rootObject.updateActionsEnabledState();\n        }\n    }\n\n    onExecute: (sender: Action) => void;\n\n    getHref(): string | undefined {\n        return \"\";\n    }\n\n    getAriaRole(): string {\n        let ariaRole = this.getAriaRoleFromEnum();\n        return ariaRole ?? \"button\";\n    }\n    \n    getAriaRoleFromEnum(): string | undefined {\n        switch (this.role) {\n            case Enums.ActionRole.Button:\n                return \"button\";\n            case Enums.ActionRole.Link:\n                return \"link\";\n            case Enums.ActionRole.Menu:\n                return \"menu\";\n            case Enums.ActionRole.MenuItem:\n                return \"menuitem\";\n            case Enums.ActionRole.Tab:\n                return \"tab\";\n            default:\n                return undefined;\n        }\n    }\n\n    setupElementForAccessibility(element: HTMLElement, promoteTooltipToLabel: boolean = false) {\n        element.tabIndex = this.isEffectivelyEnabled() && !this.isDesignMode() ? 0 : -1;\n\n        element.setAttribute(\"role\", this.getAriaRole());\n\n        if (element instanceof HTMLButtonElement) {\n            element.disabled = !this.isEffectivelyEnabled();\n        }\n\n        if (!this.isEffectivelyEnabled()) {\n            element.setAttribute(\"aria-disabled\", \"true\");\n        } else {\n            element.removeAttribute(\"aria-disabled\");\n            element.classList.add(this.hostConfig.makeCssClassName(\"ac-selectable\"));\n        }\n\n        if (this.title) {\n            element.setAttribute(\"aria-label\", this.title);\n            element.title = this.title;\n        } else {\n            element.removeAttribute(\"aria-label\");\n            element.removeAttribute(\"title\");\n        }\n\n        if (this.tooltip) {\t\t\t\n            if (promoteTooltipToLabel && !this.title) {\n                element.setAttribute(\"aria-label\", this.tooltip);\n            }\n            element.title = this.tooltip;\n        }\n    }\n\n    parse(source: any, context?: SerializationContext) {\n        return super.parse(source, context ? context : new SerializationContext());\n    }\n\n    render() {\n        const buttonElement = document.createElement(\"button\");\n        buttonElement.type = \"button\";\n        buttonElement.style.display = \"flex\";\n        buttonElement.style.alignItems = \"center\";\n        buttonElement.style.justifyContent = \"center\";\n        buttonElement.onclick = (e) => {\n            if (this.isEffectivelyEnabled()) {\n                e.preventDefault();\n                e.cancelBubble = true;\n\n                this.execute();\n            }\n        };\n\n        this._renderedElement = buttonElement;\n\n        this.renderButtonContent();\n        this.updateCssClasses();\n        this.setupElementForAccessibility(buttonElement);\n    }\n\n    execute() {\n        if (this._actionCollection) {\n            this._actionCollection.actionExecuted(this);\n        }\n\n        this.raiseExecuteActionEvent();\n        this.internalAfterExecute();\n    }\n\n    prepareForExecution(): boolean {\n        const referencedInputs = this.getReferencedInputs();\n        const invalidInputs = this.internalValidateInputs(referencedInputs);\n\n        if (invalidInputs.length > 0) {\n            invalidInputs[0].focus();\n\n            return false;\n        }\n\n        this.internalPrepareForExecution(referencedInputs);\n\n        return true;\n    }\n\n    remove(): boolean {\n        if (this._actionCollection) {\n            return this._actionCollection.removeAction(this);\n        }\n\n        return false;\n    }\n\n    getAllInputs(processActions: boolean = true): Input[] {\n        return [];\n    }\n\n    getAllActions(): Action[] {\n        return [this];\n    }\n\n    getResourceInformation(): IResourceInformation[] {\n        return this.iconUrl ? [{ url: this.iconUrl, mimeType: \"image\" }] : [];\n    }\n\n    getActionById(id: string): Action | undefined {\n        return this.id === id ? this : undefined;\n    }\n\n    getReferencedInputs(): Dictionary<Input> | undefined {\n        return this.internalGetReferencedInputs();\n    }\n\n    /**\n     * Validates the inputs associated with this action.\n     *\n     * @returns A list of inputs that failed validation, or an empty array if no input failed validation.\n     */\n    validateInputs(): Input[] {\n        return this.internalValidateInputs(this.getReferencedInputs());\n    }\n\n    updateEnabledState() {\n        // Do nothing in base implementation\n    }\n\n    isEffectivelyEnabled(): boolean {\n        return this.isEnabled;\n    }\n\n    get isPrimary(): boolean {\n        return this.style === Enums.ActionStyle.Positive;\n    }\n\n    set isPrimary(value: boolean) {\n        if (value) {\n            this.style = Enums.ActionStyle.Positive;\n        } else {\n            if (this.style === Enums.ActionStyle.Positive) {\n                this.style = Enums.ActionStyle.Default;\n            }\n        }\n    }\n\n    get hostConfig(): HostConfig {\n        return this.parent ? this.parent.hostConfig : defaultHostConfig;\n    }\n\n    get parent(): CardElement | undefined {\n        return <CardElement>this._parent;\n    }\n\n    get state(): ActionButtonState {\n        return this._state;\n    }\n\n    set state(value: ActionButtonState) {\n        if (this._state !== value) {\n            this._state = value;\n\n            this.updateCssClasses();\n        }\n    }\n\n    get isFocusable(): boolean {\n        return this._isFocusable;\n    }\n\n    set isFocusable(value: boolean) {\n        if (this._isFocusable !== value) {\n            this._isFocusable = value;\n\n            this.updateCssClasses();\n        }\n    }\n}\n\nexport abstract class SubmitActionBase extends Action {\n    //#region Schema\n\n    static readonly dataProperty = new PropertyDefinition(Versions.v1_0, \"data\");\n    static readonly associatedInputsProperty = new CustomProperty(\n        Versions.v1_3,\n        \"associatedInputs\",\n        (\n            sender: SerializableObject,\n            prop: PropertyDefinition,\n            source: PropertyBag,\n            context: BaseSerializationContext\n        ) => {\n            const value = source[prop.name];\n\n            if (value !== undefined && typeof value === \"string\") {\n                return value.toLowerCase() === \"none\" ? \"none\" : \"auto\";\n            }\n\n            return undefined;\n        },\n        (\n            sender: SerializableObject,\n            prop: PropertyDefinition,\n            target: PropertyBag,\n            value: string | undefined,\n            context: BaseSerializationContext\n        ) => {\n            context.serializeValue(target, prop.name, value);\n        }\n    );\n    static readonly disabledUnlessAssociatedInputsChangeProperty = new BoolProperty(\n        Versions.v1_6,\n        \"disabledUnlessAssociatedInputsChange\",\n        false\n    );\n\n    @property(SubmitActionBase.dataProperty)\n    private _originalData?: PropertyBag;\n\n    @property(SubmitActionBase.associatedInputsProperty)\n    associatedInputs?: \"auto\" | \"none\";\n\n    @property(SubmitActionBase.disabledUnlessAssociatedInputsChangeProperty)\n    disabledUnlessAssociatedInputsChange: boolean = false;\n\n    //#endregion\n\n    private _isPrepared: boolean = false;\n    private _processedData?: PropertyBag;\n    private _areReferencedInputsDirty: boolean = false;\n\n    protected internalGetReferencedInputs(): Dictionary<Input> {\n        const result: Dictionary<Input> = {};\n\n        if (this.associatedInputs !== \"none\") {\n            let current: CardElement | undefined = this.parent;\n            let inputs: Input[] = [];\n\n            while (current) {\n                inputs.push(...current.getAllInputs(false));\n\n                current = current.parent;\n            }\n\n            for (const input of inputs) {\n                if (input.id) {\n                    result[input.id] = input;\n                }\n            }\n        }\n\n        return result;\n    }\n\n    protected internalPrepareForExecution(inputs: Dictionary<Input> | undefined) {\n        if (this._originalData) {\n            this._processedData = JSON.parse(JSON.stringify(this._originalData));\n        } else {\n            this._processedData = {};\n        }\n\n        if (this._processedData && inputs) {\n            for (const key of Object.keys(inputs)) {\n                const input = inputs[key];\n\n                if (input.id && input.isSet()) {\n                    this._processedData[input.id] =\n                        typeof input.value === \"string\" ? input.value : input.value.toString();\n                }\n            }\n        }\n\n        this._isPrepared = true;\n    }\n\n    protected internalAfterExecute() {\n        if (GlobalSettings.resetInputsDirtyStateAfterActionExecution) {\n            this.resetReferencedInputsDirtyState();\n        }\n    }\n\n    resetReferencedInputsDirtyState() {\n        let referencedInputs = this.getReferencedInputs();\n\n        this._areReferencedInputsDirty = false;\n\n        if (referencedInputs) {\n            for (const key of Object.keys(referencedInputs)) {\n                const input = referencedInputs[key];\n\n                input.resetDirtyState();\n            }\n        }\n    }\n\n    updateEnabledState() {\n        this._areReferencedInputsDirty = false;\n\n        let referencedInputs = this.getReferencedInputs();\n\n        if (referencedInputs) {\n            for (const key of Object.keys(referencedInputs)) {\n                const input = referencedInputs[key];\n\n                if (input.isDirty()) {\n                    this._areReferencedInputsDirty = true;\n\n                    break;\n                }\n            }\n        }\n\n        this.updateCssClasses();\n\n        if (this._renderedElement) {\n            this.setupElementForAccessibility(this._renderedElement);\n        }\n    }\n\n    isEffectivelyEnabled(): boolean {\n        let result = super.isEffectivelyEnabled();\n\n        return this.disabledUnlessAssociatedInputsChange\n            ? result && this._areReferencedInputsDirty\n            : result;\n    }\n\n    get data(): object | undefined {\n        return this._isPrepared ? this._processedData : this._originalData;\n    }\n\n    set data(value: object | undefined) {\n        this._originalData = value;\n        this._isPrepared = false;\n    }\n}\n\nexport class SubmitAction extends SubmitActionBase {\n    // Note the \"weird\" way this field is declared is to work around a breaking\n    // change introduced in TS 3.1 wrt d.ts generation. DO NOT CHANGE\n    static readonly JsonTypeName: \"Action.Submit\" = \"Action.Submit\";\n\n    getJsonTypeName(): string {\n        return SubmitAction.JsonTypeName;\n    }\n}\n\nexport abstract class UniversalAction extends SubmitActionBase {\n    // This is the base class for all actions that can be executed via the\n    // adaptiveCards/action activity\n}\n\nexport class ExecuteAction extends UniversalAction {\n    // Note the \"weird\" way this field is declared is to work around a breaking\n    // change introduced in TS 3.1 wrt d.ts generation. DO NOT CHANGE\n    static readonly JsonTypeName: \"Action.Execute\" = \"Action.Execute\";\n\n    //#region Schema\n\n    static readonly verbProperty = new StringProperty(Versions.v1_4, \"verb\");\n\n    @property(ExecuteAction.verbProperty)\n    verb: string;\n\n    //#endregion\n\n    getJsonTypeName(): string {\n        return ExecuteAction.JsonTypeName;\n    }\n}\n\nexport class DataQuery extends UniversalAction {\n    // Note the \"weird\" way this field is declared is to work around a breaking\n    // change introduced in TS 3.1 wrt d.ts generation. DO NOT CHANGE\n    static readonly JsonTypeName: \"Data.Query\" = \"Data.Query\";\n\n    //#region Schema\n\n    static readonly datasetProperty = new StringProperty(Versions.v1_6, \"dataset\");\n    static readonly filterProperty = new StringProperty(Versions.v1_6, \"filter\");\n    static readonly countProperty = new NumProperty(Versions.v1_6, \"count\");\n    static readonly skipProperty = new NumProperty(Versions.v1_6, \"skip\");\n\n    @property(DataQuery.datasetProperty)\n    dataset: string;\n\n    @property(DataQuery.filterProperty)\n    filter: string;\n\n    @property(DataQuery.countProperty)\n    count?: number;\n\n    @property(DataQuery.skipProperty)\n    skip?: number;\n\n    //#endregion\n\n    getJsonTypeName(): string {\n        return DataQuery.JsonTypeName;\n    }\n\n    get isStandalone(): boolean {\n        return false;\n    }\n}\n\nexport class OpenUrlAction extends Action {\n    //#region Schema\n\n    static readonly urlProperty = new StringProperty(Versions.v1_0, \"url\");\n\n    @property(OpenUrlAction.urlProperty)\n    url?: string;\n\n    //#endregion\n\n    // Note the \"weird\" way this field is declared is to work around a breaking\n    // change introduced in TS 3.1 wrt d.ts generation. DO NOT CHANGE\n    static readonly JsonTypeName: \"Action.OpenUrl\" = \"Action.OpenUrl\";\n\n    getJsonTypeName(): string {\n        return OpenUrlAction.JsonTypeName;\n    }\n\n    getAriaRole(): string {\n        let ariaRole = this.getAriaRoleFromEnum();\n        return ariaRole ?? \"link\";\n    }\n\n    internalValidateProperties(context: ValidationResults) {\n        super.internalValidateProperties(context);\n\n        if (!this.url) {\n            context.addFailure(\n                this,\n                Enums.ValidationEvent.PropertyCantBeNull,\n                Strings.errors.propertyMustBeSet(\"url\")\n            );\n        }\n    }\n\n    getHref(): string | undefined {\n        return this.url;\n    }\n}\n\nexport class ToggleVisibilityAction extends Action {\n    //#region Schema\n\n    static readonly targetElementsProperty = new CustomProperty<PropertyBag>(\n        Versions.v1_2,\n        \"targetElements\",\n        (\n            sender: SerializableObject,\n            prop: PropertyDefinition,\n            source: PropertyBag,\n            context: BaseSerializationContext\n        ) => {\n            const result: PropertyBag = {};\n\n            if (Array.isArray(source[prop.name])) {\n                for (const item of source[prop.name]) {\n                    if (typeof item === \"string\") {\n                        result[item] = undefined;\n                    } else if (typeof item === \"object\") {\n                        const elementId = item[\"elementId\"];\n\n                        if (typeof elementId === \"string\") {\n                            result[elementId] = Utils.parseBool(item[\"isVisible\"]);\n                        }\n                    }\n                }\n            }\n\n            return result;\n        },\n        (\n            sender: SerializableObject,\n            prop: PropertyDefinition,\n            target: PropertyBag,\n            value: PropertyBag,\n            context: BaseSerializationContext\n        ) => {\n            const targetElements: any[] = [];\n\n            for (const id of Object.keys(value)) {\n                if (typeof value[id] === \"boolean\") {\n                    targetElements.push({\n                        elementId: id,\n                        isVisible: value[id]\n                    });\n                } else {\n                    targetElements.push(id);\n                }\n            }\n\n            context.serializeArray(target, prop.name, targetElements);\n        },\n        {},\n        (sender: SerializableObject) => {\n            return {};\n        }\n    );\n\n    @property(ToggleVisibilityAction.targetElementsProperty)\n    targetElements: { [key: string]: any } = {};\n\n    //#endregion\n\n    // Note the \"weird\" way this field is declared is to work around a breaking\n    // change introduced in TS 3.1 wrt d.ts generation. DO NOT CHANGE\n    static readonly JsonTypeName: \"Action.ToggleVisibility\" = \"Action.ToggleVisibility\";\n\n    private updateAriaControlsAttribute() {\n        // apply aria labels to make it clear which elements this action will toggle\n        if (this.targetElements) {\n            const elementIds = Object.keys(this.targetElements);\n\n            if (this._renderedElement) {\n                if (elementIds.length > 0) {\n                    this._renderedElement.setAttribute(\"aria-controls\", elementIds.join(\" \"));\n                } else {\n                    this._renderedElement.removeAttribute(\"aria-controls\");\n                }\n            }\n        }\n    }\n\n    internalValidateProperties(context: ValidationResults) {\n        super.internalValidateProperties(context);\n\n        if (!this.targetElements) {\n            context.addFailure(\n                this,\n                Enums.ValidationEvent.PropertyCantBeNull,\n                Strings.errors.propertyMustBeSet(\"targetElements\")\n            );\n        }\n    }\n\n    getJsonTypeName(): string {\n        return ToggleVisibilityAction.JsonTypeName;\n    }\n\n    render() {\n        super.render();\n\n        this.updateAriaControlsAttribute();\n    }\n\n    execute() {\n        super.execute();\n        if (this.parent) {\n            for (const elementId of Object.keys(this.targetElements)) {\n                const targetElement = this.parent.getRootElement().getElementById(elementId);\n\n                if (targetElement) {\n                    if (typeof this.targetElements[elementId] === \"boolean\") {\n                        targetElement.isVisible = this.targetElements[elementId];\n                    } else {\n                        targetElement.isVisible = !targetElement.isVisible;\n                    }\n                }\n            }\n        }\n    }\n\n    addTargetElement(elementId: string, isVisible: boolean | undefined = undefined) {\n        this.targetElements[elementId] = isVisible;\n        this.updateAriaControlsAttribute();\n    }\n\n    removeTargetElement(elementId: string) {\n        delete this.targetElements[elementId];\n        this.updateAriaControlsAttribute();\n    }\n}\n\nclass StringWithSubstitutionProperty extends PropertyDefinition {\n    parse(\n        sender: SerializableObject,\n        source: PropertyBag,\n        context: BaseSerializationContext\n    ): StringWithSubstitutions {\n        const result = new StringWithSubstitutions();\n        result.set(Utils.parseString(source[this.name]));\n\n        return result;\n    }\n\n    toJSON(\n        sender: SerializableObject,\n        target: PropertyBag,\n        value: StringWithSubstitutions,\n        context: BaseSerializationContext\n    ): void {\n        context.serializeValue(target, this.name, value.getOriginal());\n    }\n\n    constructor(readonly targetVersion: Version, readonly name: string) {\n        super(targetVersion, name, undefined, () => {\n            return new StringWithSubstitutions();\n        });\n    }\n}\n\nexport class HttpHeader extends SerializableObject {\n    //#region Schema\n\n    static readonly nameProperty = new StringProperty(Versions.v1_0, \"name\");\n    static readonly valueProperty = new StringWithSubstitutionProperty(Versions.v1_0, \"value\");\n\n    protected getSchemaKey(): string {\n        return \"HttpHeader\";\n    }\n\n    @property(HttpHeader.nameProperty)\n    name: string;\n\n    @property(HttpHeader.valueProperty)\n    private _value: StringWithSubstitutions;\n\n    //#endregion\n\n    constructor(name: string = \"\", value: string = \"\") {\n        super();\n\n        this.name = name;\n        this.value = value;\n    }\n\n    getReferencedInputs(inputs: Input[], referencedInputs: Dictionary<Input>) {\n        this._value.getReferencedInputs(inputs, referencedInputs);\n    }\n\n    prepareForExecution(inputs: Dictionary<Input>) {\n        this._value.substituteInputValues(inputs, ContentTypes.applicationXWwwFormUrlencoded);\n    }\n\n    get value(): string | undefined {\n        return this._value.get();\n    }\n\n    set value(newValue: string | undefined) {\n        this._value.set(newValue);\n    }\n}\n\nexport class HttpAction extends Action {\n    //#region Schema\n\n    static readonly urlProperty = new StringWithSubstitutionProperty(Versions.v1_0, \"url\");\n    static readonly bodyProperty = new StringWithSubstitutionProperty(Versions.v1_0, \"body\");\n    static readonly methodProperty = new StringProperty(Versions.v1_0, \"method\");\n    static readonly headersProperty = new SerializableObjectCollectionProperty(\n        Versions.v1_0,\n        \"headers\",\n        HttpHeader\n    );\n    static readonly ignoreInputValidationProperty = new BoolProperty(\n        Versions.v1_3,\n        \"ignoreInputValidation\",\n        false\n    );\n\n    @property(HttpAction.urlProperty)\n    private _url: StringWithSubstitutions;\n\n    @property(HttpAction.bodyProperty)\n    private _body: StringWithSubstitutions;\n\n    @property(HttpAction.methodProperty)\n    method?: string;\n\n    @property(HttpAction.headersProperty)\n    headers: HttpHeader[];\n\n    @property(HttpAction.ignoreInputValidationProperty)\n    private _ignoreInputValidation: boolean = false;\n\n    //#endregion\n\n    // Note the \"weird\" way this field is declared is to work around a breaking\n    // change introduced in TS 3.1 wrt d.ts generation. DO NOT CHANGE\n    static readonly JsonTypeName: \"Action.Http\" = \"Action.Http\";\n\n    protected internalGetReferencedInputs(): Dictionary<Input> {\n        const allInputs = this.parent ? this.parent.getRootElement().getAllInputs() : [];\n        const result: Dictionary<Input> = {};\n\n        this._url.getReferencedInputs(allInputs, result);\n\n        for (const header of this.headers) {\n            header.getReferencedInputs(allInputs, result);\n        }\n\n        this._body.getReferencedInputs(allInputs, result);\n\n        return result;\n    }\n\n    protected internalPrepareForExecution(inputs: Dictionary<Input> | undefined) {\n        if (inputs) {\n            this._url.substituteInputValues(inputs, ContentTypes.applicationXWwwFormUrlencoded);\n\n            let contentType = ContentTypes.applicationJson;\n\n            for (const header of this.headers) {\n                header.prepareForExecution(inputs);\n\n                if (header.name && header.name.toLowerCase() === \"content-type\") {\n                    contentType = header.value!;\n                }\n            }\n\n            this._body.substituteInputValues(inputs, contentType);\n        }\n    }\n\n    getJsonTypeName(): string {\n        return HttpAction.JsonTypeName;\n    }\n\n    internalValidateProperties(context: ValidationResults) {\n        super.internalValidateProperties(context);\n\n        if (!this.url) {\n            context.addFailure(\n                this,\n                Enums.ValidationEvent.PropertyCantBeNull,\n                Strings.errors.propertyMustBeSet(\"url\")\n            );\n        }\n\n        if (this.headers.length > 0) {\n            for (const header of this.headers) {\n                if (!header.name) {\n                    context.addFailure(\n                        this,\n                        Enums.ValidationEvent.PropertyCantBeNull,\n                        Strings.errors.actionHttpHeadersMustHaveNameAndValue()\n                    );\n                }\n            }\n        }\n    }\n\n    get ignoreInputValidation(): boolean {\n        return this._ignoreInputValidation;\n    }\n\n    set ignoreInputValidation(value: boolean) {\n        this._ignoreInputValidation = value;\n    }\n\n    get url(): string | undefined {\n        return this._url.get();\n    }\n\n    set url(value: string | undefined) {\n        this._url.set(value);\n    }\n\n    get body(): string | undefined {\n        return this._body.get();\n    }\n\n    set body(value: string | undefined) {\n        this._body.set(value);\n    }\n}\n\nexport class ShowCardAction extends Action {\n    // Note the \"weird\" way this field is declared is to work around a breaking\n    // change introduced in TS 3.1 wrt d.ts generation. DO NOT CHANGE\n    static readonly JsonTypeName: \"Action.ShowCard\" = \"Action.ShowCard\";\n\n    protected updateCssClasses() {\n        super.updateCssClasses();\n\n        if (this.renderedElement) {\n            const effectiveHostConfig = this.parent ? this.parent.hostConfig : defaultHostConfig;\n\n            this.renderedElement.classList.add(effectiveHostConfig.makeCssClassName(\"expandable\"));\n            this.renderedElement.setAttribute(\n                \"aria-expanded\",\n                (this.state === ActionButtonState.Expanded).toString()\n            );\n        }\n    }\n\n    protected internalParse(source: any, context: SerializationContext) {\n        super.internalParse(source, context);\n\n        const jsonCard = source[\"card\"];\n\n        if (jsonCard) {\n            this.card.parse(jsonCard, context);\n        } else {\n            context.logParseEvent(\n                this,\n                Enums.ValidationEvent.PropertyCantBeNull,\n                Strings.errors.showCardMustHaveCard()\n            );\n        }\n    }\n\n    protected internalToJSON(target: PropertyBag, context: SerializationContext) {\n        super.internalToJSON(target, context);\n\n        if (this.card) {\n            context.serializeValue(target, \"card\", this.card.toJSON(context));\n        }\n    }\n\n    protected raiseExecuteActionEvent() {\n        if (this.hostConfig.actions.showCard.actionMode === Enums.ShowCardActionMode.Popup) {\n            // Only raise the event in Popup mode.\n            super.raiseExecuteActionEvent();\n        }\n    }\n\n    readonly card: AdaptiveCard = new InlineAdaptiveCard();\n\n    releaseDOMResources() {\n        super.releaseDOMResources();\n\n        this.card.releaseDOMResources();\n    }\n\n    getJsonTypeName(): string {\n        return ShowCardAction.JsonTypeName;\n    }\n\n    internalValidateProperties(context: ValidationResults) {\n        super.internalValidateProperties(context);\n\n        this.card.internalValidateProperties(context);\n    }\n\n    setParent(value: CardElement) {\n        super.setParent(value);\n\n        this.card.setParent(value);\n    }\n\n    getAllInputs(processActions: boolean = true): Input[] {\n        return this.card.getAllInputs(processActions);\n    }\n\n    getAllActions(): Action[] {\n        const result = super.getAllActions();\n\n        result.push(...this.card.getAllActions());\n\n        return result;\n    }\n\n    getResourceInformation(): IResourceInformation[] {\n        let result = super.getResourceInformation();\n\n        result.push(...this.card.getResourceInformation());\n\n        return result;\n    }\n\n    getActionById(id: string): Action | undefined {\n        let result = super.getActionById(id);\n\n        if (!result) {\n            result = this.card.getActionById(id);\n        }\n\n        return result;\n    }\n}\n\nclass OverflowAction extends Action {\n    static readonly JsonTypeName: \"Action.Overflow\" = \"Action.Overflow\";\n    private _actions: Action[];\n\n    constructor(actions: Action[]) {\n        super();\n        this._actions = actions;\n\n        this.title = Strings.defaults.overflowButtonText();\n        this.tooltip = Strings.defaults.overflowButtonTooltip();\n    }\n\n    getActions(): readonly Action[] {\n        return this._actions;\n    }\n\n    getAllActions(): Action[] {\n        const result = super.getAllActions();\n\n        result.push(...this._actions);\n\n        return result;\n    }\n\n    getJsonTypeName(): string {\n        return ShowCardAction.JsonTypeName;\n    }\n\n    execute() {\n        const shouldDisplayPopupMenu = !raiseDisplayOverflowActionMenuEvent(\n            this,\n            this.renderedElement\n        );\n\n        if (shouldDisplayPopupMenu && this.renderedElement) {\n            const contextMenu = new PopupMenu();\n            contextMenu.hostConfig = this.hostConfig;\n\n            for (let i = 0; i < this._actions.length; i++) {\n                const menuItem = new MenuItem(i.toString(), this._actions[i].title ?? \"\");\n                menuItem.isEnabled = this._actions[i].isEnabled;\n                menuItem.onClick = () => {\n                    const actionToExecute = this._actions[i];\n\n                    contextMenu.closePopup(false);\n\n                    if (actionToExecute.isEnabled) {\n                        actionToExecute.execute();\n                    }\n                };\n\n                contextMenu.items.add(menuItem);\n            }\n\n            contextMenu.onClose = () => {\n                this.renderedElement?.setAttribute(\"aria-expanded\", \"false\");\n            }\n\n            this.renderedElement.setAttribute(\"aria-expanded\", \"true\");\n            contextMenu.popup(this.renderedElement);\n        }\n    }\n    \n    setupElementForAccessibility(element: HTMLElement, promoteTooltipToLabel: boolean = false) {\n        super.setupElementForAccessibility(element, promoteTooltipToLabel);\n\n        element.setAttribute(\"aria-label\", Strings.defaults.overflowButtonTooltip());\n        element.setAttribute(\"aria-expanded\", \"false\");\n    }\n}\n\nclass ActionCollection {\n    private _owner: CardElement;\n    private _actionCardContainer: HTMLDivElement;\n    private _expandedAction?: ShowCardAction;\n    private _actionCard?: HTMLElement;\n\n    private isActionAllowed(action: Action): boolean {\n        const forbiddenTypes = this._owner.getForbiddenActionTypes();\n\n        if (forbiddenTypes) {\n            for (const forbiddenType of forbiddenTypes) {\n                if (action.constructor === forbiddenType) {\n                    return false;\n                }\n            }\n        }\n\n        return true;\n    }\n\n    private refreshContainer() {\n        clearElement(this._actionCardContainer);\n\n        if (!this._actionCard) {\n            this._actionCardContainer.style.marginTop = \"0px\";\n\n            return;\n        }\n\n        this._actionCardContainer.style.marginTop =\n            this.renderedActionCount > 0\n                ? this._owner.hostConfig.actions.showCard.inlineTopMargin + \"px\"\n                : \"0px\";\n\n        const padding = this._owner.getEffectivePadding();\n\n        this._owner.getImmediateSurroundingPadding(padding);\n\n        const physicalPadding =\n            this._owner.hostConfig.paddingDefinitionToSpacingDefinition(padding);\n\n        if (this._actionCard) {\n            this._actionCard.style.paddingLeft = physicalPadding.left + \"px\";\n            this._actionCard.style.paddingRight = physicalPadding.right + \"px\";\n\n            this._actionCard.style.marginLeft = \"-\" + physicalPadding.left + \"px\";\n            this._actionCard.style.marginRight = \"-\" + physicalPadding.right + \"px\";\n\n            if (physicalPadding.bottom !== 0 && !this._owner.isDesignMode()) {\n                this._actionCard.style.paddingBottom = physicalPadding.bottom + \"px\";\n                this._actionCard.style.marginBottom = \"-\" + physicalPadding.bottom + \"px\";\n            }\n\n            Utils.appendChild(this._actionCardContainer, this._actionCard);\n        }\n    }\n\n    private layoutChanged() {\n        this._owner.getRootElement().updateLayout();\n    }\n\n    private showActionCard(\n        action: ShowCardAction,\n        suppressStyle: boolean = false,\n        raiseEvent: boolean = true\n    ) {\n        (<InlineAdaptiveCard>action.card).suppressStyle = suppressStyle;\n\n        // Always re-render a ShowCard action in design mode; reuse already rendered ShowCard (if available) otherwise\n        const renderedCard =\n            action.card.renderedElement && !this._owner.isDesignMode()\n                ? action.card.renderedElement\n                : action.card.render();\n\n        this._actionCard = renderedCard;\n        this._expandedAction = action;\n\n        this.refreshContainer();\n\n        if (raiseEvent) {\n            this.layoutChanged();\n\n            raiseInlineCardExpandedEvent(action, true);\n        }\n    }\n\n    private collapseExpandedAction() {\n        for (const action of this._renderedActions) {\n            action.state = ActionButtonState.Normal;\n        }\n\n        const previouslyExpandedAction = this._expandedAction;\n\n        this._expandedAction = undefined;\n        this._actionCard = undefined;\n\n        this.refreshContainer();\n\n        if (previouslyExpandedAction) {\n            this.layoutChanged();\n\n            raiseInlineCardExpandedEvent(previouslyExpandedAction, false);\n        }\n    }\n\n    private expandShowCardAction(action: ShowCardAction, raiseEvent: boolean) {\n        let afterSelectedAction = false;\n\n        for (const renderedAction of this._renderedActions) {\n            // Remove actions after selected action from tabOrder if the actions are oriented horizontally, to skip focus directly to expanded card\n            if (\n                this._owner.hostConfig.actions.actionsOrientation == Enums.Orientation.Horizontal &&\n                afterSelectedAction\n            ) {\n                renderedAction.isFocusable = false;\n            }\n\n            if (renderedAction !== action) {\n                renderedAction.state = ActionButtonState.Subdued;\n            } else {\n                renderedAction.state = ActionButtonState.Expanded;\n\n                afterSelectedAction = true;\n\n                if (renderedAction.renderedElement) {\n                    renderedAction.renderedElement.onblur = (_e) => {\n                        for (const ra of this._renderedActions) {\n                            ra.isFocusable = true;\n                        }\n                    };\n                }\n            }\n        }\n\n        this.showActionCard(\n            action,\n            !(this._owner.isAtTheVeryLeft() && this._owner.isAtTheVeryRight()),\n            raiseEvent\n        );\n    }\n\n    private _items: Action[] = [];\n    private _overflowAction?: OverflowAction;\n    private _renderedActions: Action[] = [];\n\n    constructor(owner: CardElement) {\n        this._owner = owner;\n    }\n\n    releaseDOMResources() {\n        for (let action of this._renderedActions) {\n            action.releaseDOMResources();\n        }\n    }\n\n    actionExecuted(action: Action) {\n        if (!(action instanceof ShowCardAction)) {\n            this.collapseExpandedAction();\n        } else {\n            if (action === this._expandedAction) {\n                this.collapseExpandedAction();\n            } else if (\n                this._owner.hostConfig.actions.showCard.actionMode ===\n                Enums.ShowCardActionMode.Inline\n            ) {\n                this.expandShowCardAction(action, true);\n            }\n        }\n    }\n\n    parse(source: any, context: SerializationContext) {\n        this.clear();\n\n        if (Array.isArray(source)) {\n            for (const jsonAction of source) {\n                let forbiddenActions: string[] = [];\n\n                // If the action owner is a ContainerWithActions, we should check for forbidden actions\n                if (this._owner instanceof ContainerWithActions) {\n                    forbiddenActions = this._owner.getForbiddenActionNames();\n                }\n\n                const action = context.parseAction(\n                    this._owner,\n                    jsonAction,\n                    forbiddenActions,\n                    !this._owner.isDesignMode()\n                );\n\n                if (action) {\n                    this.addAction(action);\n                }\n            }\n        }\n    }\n\n    toJSON(target: PropertyBag, propertyName: string, context: SerializationContext): any {\n        context.serializeArray(target, propertyName, this._items);\n    }\n\n    getActionAt(id: number): Action | undefined {\n        return this._items[id];\n    }\n\n    getActionCount(): number {\n        return this._items.length;\n    }\n\n    getActionById(id: string): Action | undefined {\n        let result: Action | undefined = undefined;\n\n        for (const item of this._items) {\n            result = item.getActionById(id);\n\n            if (result) {\n                break;\n            }\n        }\n\n        return result;\n    }\n\n    validateProperties(context: ValidationResults) {\n        if (\n            this._owner.hostConfig.actions.maxActions &&\n            this._items.length > this._owner.hostConfig.actions.maxActions\n        ) {\n            context.addFailure(\n                this._owner,\n                Enums.ValidationEvent.TooManyActions,\n                Strings.errors.tooManyActions(this._owner.hostConfig.actions.maxActions)\n            );\n        }\n\n        if (this._items.length > 0 && !this._owner.hostConfig.supportsInteractivity) {\n            context.addFailure(\n                this._owner,\n                Enums.ValidationEvent.InteractivityNotAllowed,\n                Strings.errors.interactivityNotAllowed()\n            );\n        }\n\n        for (const item of this._items) {\n            if (!this.isActionAllowed(item)) {\n                context.addFailure(\n                    this._owner,\n                    Enums.ValidationEvent.ActionTypeNotAllowed,\n                    Strings.errors.actionTypeNotAllowed(item.getJsonTypeName())\n                );\n            }\n\n            item.internalValidateProperties(context);\n        }\n    }\n\n    render(orientation: Enums.Orientation): HTMLElement | undefined {\n        // Cache hostConfig for better perf\n        const hostConfig = this._owner.hostConfig;\n\n        if (!hostConfig.supportsInteractivity) {\n            return undefined;\n        }\n\n        const element = document.createElement(\"div\");\n        const maxActions = hostConfig.actions.maxActions\n            ? Math.min(hostConfig.actions.maxActions, this._items.length)\n            : this._items.length;\n\n        this._actionCardContainer = document.createElement(\"div\");\n        this._renderedActions = [];\n\n        if (\n            hostConfig.actions.preExpandSingleShowCardAction &&\n            maxActions === 1 &&\n            this._items[0] instanceof ShowCardAction &&\n            this.isActionAllowed(this._items[0])\n        ) {\n            this.showActionCard(this._items[0], true);\n            this._renderedActions.push(this._items[0]);\n        } else {\n            const buttonStrip = document.createElement(\"div\");\n            buttonStrip.className = hostConfig.makeCssClassName(\"ac-actionSet\");\n            buttonStrip.style.display = \"flex\";\n\n            if (orientation === Enums.Orientation.Horizontal) {\n                buttonStrip.style.flexDirection = \"row\";\n\n                if (\n                    this._owner.horizontalAlignment &&\n                    hostConfig.actions.actionAlignment !== Enums.ActionAlignment.Stretch\n                ) {\n                    switch (this._owner.horizontalAlignment) {\n                        case Enums.HorizontalAlignment.Center:\n                            buttonStrip.style.justifyContent = \"center\";\n                            break;\n                        case Enums.HorizontalAlignment.Right:\n                            buttonStrip.style.justifyContent = \"flex-end\";\n                            break;\n                        default:\n                            buttonStrip.style.justifyContent = \"flex-start\";\n                            break;\n                    }\n                } else {\n                    switch (hostConfig.actions.actionAlignment) {\n                        case Enums.ActionAlignment.Center:\n                            buttonStrip.style.justifyContent = \"center\";\n                            break;\n                        case Enums.ActionAlignment.Right:\n                            buttonStrip.style.justifyContent = \"flex-end\";\n                            break;\n                        default:\n                            buttonStrip.style.justifyContent = \"flex-start\";\n                            break;\n                    }\n                }\n            } else {\n                buttonStrip.style.flexDirection = \"column\";\n\n                if (\n                    this._owner.horizontalAlignment &&\n                    hostConfig.actions.actionAlignment !== Enums.ActionAlignment.Stretch\n                ) {\n                    switch (this._owner.horizontalAlignment) {\n                        case Enums.HorizontalAlignment.Center:\n                            buttonStrip.style.alignItems = \"center\";\n                            break;\n                        case Enums.HorizontalAlignment.Right:\n                            buttonStrip.style.alignItems = \"flex-end\";\n                            break;\n                        default:\n                            buttonStrip.style.alignItems = \"flex-start\";\n                            break;\n                    }\n                } else {\n                    switch (hostConfig.actions.actionAlignment) {\n                        case Enums.ActionAlignment.Center:\n                            buttonStrip.style.alignItems = \"center\";\n                            break;\n                        case Enums.ActionAlignment.Right:\n                            buttonStrip.style.alignItems = \"flex-end\";\n                            break;\n                        case Enums.ActionAlignment.Stretch:\n                            buttonStrip.style.alignItems = \"stretch\";\n                            break;\n                        default:\n                            buttonStrip.style.alignItems = \"flex-start\";\n                            break;\n                    }\n                }\n            }\n\n            const allowedActions = this._items.filter(this.isActionAllowed.bind(this));\n\n            let primaryActions: Action[] = [];\n            const secondaryActions: Action[] = [];\n\n            if (!this._owner.isDesignMode()) {\n                allowedActions.forEach((action) =>\n                    action.mode === Enums.ActionMode.Secondary\n                        ? secondaryActions.push(action)\n                        : primaryActions.push(action)\n                );\n\n                // If primaryActions.length > maxActions, extra actions are moved to overflow\n                const overflowPrimaryActions = primaryActions.splice(hostConfig.actions.maxActions);\n\n                if (GlobalSettings.allowMoreThanMaxActionsInOverflowMenu) {\n                    secondaryActions.push(...overflowPrimaryActions);\n                }\n\n                let shouldRenderOverflowActionButton = true;\n\n                if (secondaryActions.length > 0) {\n                    if (!this._overflowAction) {\n                        this._overflowAction = new OverflowAction(secondaryActions);\n                        this._overflowAction.setParent(this._owner);\n                        this._overflowAction[\"_actionCollection\"] = this;\n                    }\n\n                    const isRootAction = this._owner instanceof AdaptiveCard && !this._owner.parent;\n                    shouldRenderOverflowActionButton = !raiseRenderOverflowActionsEvent(\n                        this._overflowAction,\n                        isRootAction\n                    );\n                }\n\n                if (this._overflowAction && shouldRenderOverflowActionButton) {\n                    primaryActions.push(this._overflowAction);\n                }\n            } else {\n                primaryActions = allowedActions;\n            }\n\n            for (let i = 0; i < primaryActions.length; i++) {\n                const action = primaryActions[i];\n                action.render();\n\n                if (action.renderedElement) {\n                    if (\n                        hostConfig.actions.actionsOrientation === Enums.Orientation.Horizontal &&\n                        hostConfig.actions.actionAlignment === Enums.ActionAlignment.Stretch\n                    ) {\n                        action.renderedElement.style.flex = \"0 1 100%\";\n                    } else {\n                        action.renderedElement.style.flex = \"0 1 auto\";\n                    }\n\n                    buttonStrip.appendChild(action.renderedElement);\n\n                    this._renderedActions.push(action);\n\n                    if (i < primaryActions.length - 1 && hostConfig.actions.buttonSpacing > 0) {\n                        const spacer = document.createElement(\"div\");\n\n                        if (orientation === Enums.Orientation.Horizontal) {\n                            spacer.style.flex = \"0 0 auto\";\n                            spacer.style.width = hostConfig.actions.buttonSpacing + \"px\";\n                        } else {\n                            spacer.style.height = hostConfig.actions.buttonSpacing + \"px\";\n                        }\n\n                        Utils.appendChild(buttonStrip, spacer);\n                    }\n                }\n            }\n\n            const buttonStripContainer = document.createElement(\"div\");\n            buttonStripContainer.style.overflow = \"hidden\";\n            buttonStripContainer.appendChild(buttonStrip);\n\n            Utils.appendChild(element, buttonStripContainer);\n        }\n\n        Utils.appendChild(element, this._actionCardContainer);\n\n        for (const renderedAction of this._renderedActions) {\n            if (renderedAction.state === ActionButtonState.Expanded) {\n                this.expandShowCardAction(<ShowCardAction>renderedAction, false);\n\n                break;\n            }\n        }\n\n        return this._renderedActions.length > 0 ? element : undefined;\n    }\n\n    addAction(action: Action) {\n        if (!action) {\n            throw new Error(\"The action parameter cannot be null.\");\n        }\n\n        if ((!action.parent || action.parent === this._owner) && this._items.indexOf(action) < 0) {\n            this._items.push(action);\n\n            if (!action.parent) {\n                action.setParent(this._owner);\n            }\n\n            action[\"_actionCollection\"] = this;\n        } else {\n            throw new Error(Strings.errors.actionAlreadyParented());\n        }\n    }\n\n    removeAction(action: Action): boolean {\n        if (this.expandedAction && this._expandedAction === action) {\n            this.collapseExpandedAction();\n        }\n\n        const actionIndex = this._items.indexOf(action);\n\n        if (actionIndex >= 0) {\n            this._items.splice(actionIndex, 1);\n\n            action.setParent(undefined);\n\n            action[\"_actionCollection\"] = undefined;\n\n            for (let i = 0; i < this._renderedActions.length; i++) {\n                if (this._renderedActions[i] === action) {\n                    this._renderedActions.splice(i, 1);\n\n                    break;\n                }\n            }\n\n            return true;\n        }\n\n        return false;\n    }\n\n    clear() {\n        this._items = [];\n        this._renderedActions = [];\n        this._expandedAction = undefined;\n    }\n\n    getAllInputs(processActions: boolean = true): Input[] {\n        let result: Input[] = [];\n\n        if (processActions) {\n            for (const action of this._items) {\n                result.push(...action.getAllInputs());\n            }\n        }\n\n        return result;\n    }\n\n    getResourceInformation(): IResourceInformation[] {\n        let result: IResourceInformation[] = [];\n\n        for (const action of this._items) {\n            result.push(...action.getResourceInformation());\n        }\n\n        return result;\n    }\n\n    get renderedActionCount(): number {\n        return this._renderedActions.length;\n    }\n\n    get expandedAction(): ShowCardAction | undefined {\n        return this._expandedAction;\n    }\n}\n\nexport class ActionSet extends CardElement {\n    //#region Schema\n\n    static readonly orientationProperty = new EnumProperty(\n        Versions.v1_1,\n        \"orientation\",\n        Enums.Orientation\n    );\n\n    @property(ActionSet.orientationProperty)\n    orientation?: Enums.Orientation;\n\n    //#endregion\n\n    private _actionCollection: ActionCollection;\n\n    protected internalParse(source: any, context: SerializationContext) {\n        super.internalParse(source, context);\n\n        this._actionCollection.parse(source[\"actions\"], context);\n    }\n\n    protected internalToJSON(target: PropertyBag, context: SerializationContext) {\n        super.internalToJSON(target, context);\n\n        this._actionCollection.toJSON(target, \"actions\", context);\n    }\n\n    protected internalRender(): HTMLElement | undefined {\n        return this._actionCollection.render(\n            this.orientation !== undefined\n                ? this.orientation\n                : this.hostConfig.actions.actionsOrientation\n        );\n    }\n\n    constructor() {\n        super();\n\n        this._actionCollection = new ActionCollection(this);\n    }\n\n    releaseDOMResources() {\n        super.releaseDOMResources();\n\n        this._actionCollection.releaseDOMResources();\n    }\n\n    isBleedingAtBottom(): boolean {\n        if (this._actionCollection.renderedActionCount === 0) {\n            return super.isBleedingAtBottom();\n        } else {\n            if (this._actionCollection.getActionCount() === 1) {\n                return (\n                    this._actionCollection.expandedAction !== undefined &&\n                    !this.hostConfig.actions.preExpandSingleShowCardAction\n                );\n            } else {\n                return this._actionCollection.expandedAction !== undefined;\n            }\n        }\n    }\n\n    getJsonTypeName(): string {\n        return \"ActionSet\";\n    }\n\n    getActionCount(): number {\n        return this._actionCollection.getActionCount();\n    }\n\n    getActionAt(index: number): Action | undefined {\n        if (index >= 0 && index < this.getActionCount()) {\n            return this._actionCollection.getActionAt(index);\n        } else {\n            return super.getActionAt(index);\n        }\n    }\n\n    getActionById(id: string): Action | undefined {\n        const result: Action | undefined = this._actionCollection.getActionById(id);\n\n        return result ? result : super.getActionById(id);\n    }\n\n    getAllActions(): Action[] {\n        const result = super.getAllActions();\n\n        for (let i = 0; i < this.getActionCount(); i++) {\n            let action = this.getActionAt(i);\n\n            if (action) {\n                result.push(action);\n            }\n        }\n\n        return result;\n    }\n\n    internalValidateProperties(context: ValidationResults) {\n        super.internalValidateProperties(context);\n\n        this._actionCollection.validateProperties(context);\n    }\n\n    addAction(action: Action) {\n        this._actionCollection.addAction(action);\n    }\n\n    getAllInputs(processActions: boolean = true): Input[] {\n        return processActions ? this._actionCollection.getAllInputs() : [];\n    }\n\n    getResourceInformation(): IResourceInformation[] {\n        return this._actionCollection.getResourceInformation();\n    }\n\n    /**\n     * @inheritdoc\n     */\n    findDOMNodeOwner(node: Node): CardObject | undefined {\n        let target: CardObject | undefined = undefined;\n\n        for (let i = 0; i < this.getActionCount(); i++) {\n            const action = this.getActionAt(i);\n\n            if (action) {\n                // recur through each Action\n                target = action.findDOMNodeOwner(node);\n\n                if (target) {\n                    return target;\n                }\n            }\n        }\n\n        // if not found in any Action, defer to parent implementation\n        return super.findDOMNodeOwner(node);\n    }\n\n    getElementById(id: string): CardElement | undefined {\n        let result = super.getElementById(id);\n\n        if (!result) {\n            result = this.getElementByIdFromAction(id);\n        }\n\n        return result;\n    }\n\n    get isInteractive(): boolean {\n        return true;\n    }\n}\n\nexport class ContainerStyleProperty extends ValueSetProperty {\n    constructor(\n        readonly targetVersion: Version,\n        readonly name: string,\n        readonly defaultValue?: string,\n        readonly onGetInitialValue?: (sender: SerializableObject) => string\n    ) {\n        super(\n            targetVersion,\n            name,\n            [\n                { value: Enums.ContainerStyle.Default },\n                { value: Enums.ContainerStyle.Emphasis },\n                { targetVersion: Versions.v1_2, value: Enums.ContainerStyle.Accent },\n                { targetVersion: Versions.v1_2, value: Enums.ContainerStyle.Good },\n                { targetVersion: Versions.v1_2, value: Enums.ContainerStyle.Attention },\n                { targetVersion: Versions.v1_2, value: Enums.ContainerStyle.Warning }\n            ],\n            defaultValue,\n            onGetInitialValue\n        );\n    }\n}\n\nexport abstract class StylableCardElementContainer extends CardElementContainer {\n    //#region Schema\n\n    static readonly styleProperty = new ContainerStyleProperty(Versions.v1_0, \"style\");\n\n    @property(StylableCardElementContainer.styleProperty)\n    get style(): string | undefined {\n        if (this.allowCustomStyle) {\n            const style = this.getValue(StylableCardElementContainer.styleProperty);\n\n            if (style && this.hostConfig.containerStyles.getStyleByName(style)) {\n                return style;\n            }\n        }\n\n        return undefined;\n    }\n\n    set style(value: string | undefined) {\n        this.setValue(StylableCardElementContainer.styleProperty, value);\n    }\n\n    //#endregion\n\n    protected get allowCustomStyle(): boolean {\n        return true;\n    }\n\n    protected get hasExplicitStyle(): boolean {\n        return this.getValue(StylableCardElementContainer.styleProperty) !== undefined;\n    }\n\n    protected applyBorder() {\n        // No border in base implementation\n    }\n\n    protected applyBackground() {\n        if (this.renderedElement) {\n            const styleDefinition = this.hostConfig.containerStyles.getStyleByName(\n                this.style,\n                this.hostConfig.containerStyles.getStyleByName(this.defaultStyle)\n            );\n\n            if (styleDefinition.backgroundColor) {\n                const bgColor = Utils.stringToCssColor(styleDefinition.backgroundColor);\n                if (bgColor) {\n                    this.renderedElement.style.backgroundColor = bgColor;\n                }\n            }\n        }\n    }\n\n    protected applyPadding() {\n        super.applyPadding();\n\n        if (!this.renderedElement) {\n            return;\n        }\n\n        let physicalPadding = new SpacingDefinition();\n\n        if (this.getEffectivePadding()) {\n            physicalPadding = this.hostConfig.paddingDefinitionToSpacingDefinition(\n                this.getEffectivePadding()\n            );\n        }\n\n        this.renderedElement.style.paddingTop = physicalPadding.top + \"px\";\n        this.renderedElement.style.paddingRight = physicalPadding.right + \"px\";\n        this.renderedElement.style.paddingBottom = physicalPadding.bottom + \"px\";\n        this.renderedElement.style.paddingLeft = physicalPadding.left + \"px\";\n\n        if (this.isBleeding()) {\n            // Bleed into the first parent that does have padding\n            const padding = new PaddingDefinition();\n\n            this.getImmediateSurroundingPadding(padding);\n\n            const surroundingPadding =\n                this.hostConfig.paddingDefinitionToSpacingDefinition(padding);\n\n            this.renderedElement.style.marginRight = \"-\" + surroundingPadding.right + \"px\";\n            this.renderedElement.style.marginLeft = \"-\" + surroundingPadding.left + \"px\";\n\n            if (!this.isDesignMode()) {\n                this.renderedElement.style.marginTop = \"-\" + surroundingPadding.top + \"px\";\n                this.renderedElement.style.marginBottom = \"-\" + surroundingPadding.bottom + \"px\";\n            }\n\n            if (\n                this.separatorElement &&\n                this.separatorOrientation === Enums.Orientation.Horizontal\n            ) {\n                this.separatorElement.style.marginLeft = \"-\" + surroundingPadding.left + \"px\";\n                this.separatorElement.style.marginRight = \"-\" + surroundingPadding.right + \"px\";\n            }\n        } else {\n            this.renderedElement.style.marginRight = \"0\";\n            this.renderedElement.style.marginLeft = \"0\";\n            this.renderedElement.style.marginTop = \"0\";\n            this.renderedElement.style.marginBottom = \"0\";\n\n            if (\n                this.separatorElement &&\n                this.separatorOrientation === Enums.Orientation.Horizontal\n            ) {\n                this.separatorElement.style.marginRight = \"0\";\n                this.separatorElement.style.marginLeft = \"0\";\n            }\n        }\n    }\n\n    protected getHasBackground(ignoreBackgroundImages: boolean = false): boolean {\n        let currentElement: CardElement | undefined = this.parent;\n\n        while (currentElement) {\n            let currentElementHasBackgroundImage: boolean = false;\n\n            if (ignoreBackgroundImages) {\n                currentElementHasBackgroundImage = false;\n            } else {\n                currentElementHasBackgroundImage =\n                    currentElement instanceof Container\n                        ? currentElement.backgroundImage.isValid()\n                        : false;\n            }\n\n            if (currentElement instanceof StylableCardElementContainer) {\n                if (\n                    this.hasExplicitStyle &&\n                    (currentElement.getEffectiveStyle() !== this.getEffectiveStyle() ||\n                        currentElementHasBackgroundImage)\n                ) {\n                    return true;\n                }\n            }\n\n            currentElement = currentElement.parent;\n        }\n\n        return false;\n    }\n\n    protected getDefaultPadding(): PaddingDefinition {\n        return this.getHasBackground() || this.getHasBorder()\n            ? new PaddingDefinition(\n                  Enums.Spacing.Padding,\n                  Enums.Spacing.Padding,\n                  Enums.Spacing.Padding,\n                  Enums.Spacing.Padding\n              )\n            : super.getDefaultPadding();\n    }\n\n    internalValidateProperties(context: ValidationResults) {\n        super.internalValidateProperties(context);\n\n        const explicitStyle = this.getValue(StylableCardElementContainer.styleProperty);\n\n        if (explicitStyle !== undefined) {\n            const styleDefinition = this.hostConfig.containerStyles.getStyleByName(explicitStyle);\n\n            if (!styleDefinition) {\n                context.addFailure(\n                    this,\n                    Enums.ValidationEvent.InvalidPropertyValue,\n                    Strings.errors.invalidPropertyValue(explicitStyle, \"style\")\n                );\n            }\n        }\n    }\n\n    render(): HTMLElement | undefined {\n        const renderedElement = super.render();\n\n        if (renderedElement && this.getHasBackground()) {\n            this.applyBackground();\n        }\n\n        this.applyBorder();\n\n        return renderedElement;\n    }\n\n    getEffectiveStyle(): string {\n        const effectiveStyle = this.style;\n\n        return effectiveStyle ? effectiveStyle : super.getEffectiveStyle();\n    }\n}\n\nexport abstract class ContainerBase extends StylableCardElementContainer {\n    //#region Schema\n\n    static readonly bleedProperty = new BoolProperty(Versions.v1_2, \"bleed\", false);\n    static readonly minHeightProperty = new PixelSizeProperty(Versions.v1_2, \"minHeight\");\n\n    @property(ContainerBase.bleedProperty)\n    private _bleed: boolean = false;\n\n    @property(ContainerBase.minHeightProperty)\n    minPixelHeight?: number;\n\n    //#endregion\n\n    protected adjustRenderedElementSize(renderedElement: HTMLElement) {\n        super.adjustRenderedElementSize(renderedElement);\n\n        if (this.minPixelHeight) {\n            renderedElement.style.minHeight = this.minPixelHeight + \"px\";\n        }\n    }\n\n    protected getHasExpandedAction(): boolean {\n        return false;\n    }\n\n    protected getBleed(): boolean {\n        return this._bleed;\n    }\n\n    protected setBleed(value: boolean) {\n        this._bleed = value;\n    }\n\n    protected get renderedActionCount(): number {\n        return 0;\n    }\n\n    isBleeding(): boolean {\n        return (this.getHasBackground() || this.hostConfig.alwaysAllowBleed) && this.getBleed();\n    }\n}\n\nexport class BackgroundImage extends SerializableObject {\n    //#region Schema\n\n    static readonly urlProperty = new StringProperty(Versions.v1_0, \"url\");\n    static readonly fillModeProperty = new EnumProperty(\n        Versions.v1_2,\n        \"fillMode\",\n        Enums.FillMode,\n        Enums.FillMode.Cover\n    );\n    static readonly horizontalAlignmentProperty = new EnumProperty(\n        Versions.v1_2,\n        \"horizontalAlignment\",\n        Enums.HorizontalAlignment,\n        Enums.HorizontalAlignment.Left\n    );\n    static readonly verticalAlignmentProperty = new EnumProperty(\n        Versions.v1_2,\n        \"verticalAlignment\",\n        Enums.VerticalAlignment,\n        Enums.VerticalAlignment.Top\n    );\n\n    @property(BackgroundImage.urlProperty)\n    url?: string;\n\n    @property(BackgroundImage.fillModeProperty)\n    fillMode: Enums.FillMode;\n\n    @property(BackgroundImage.horizontalAlignmentProperty)\n    horizontalAlignment: Enums.HorizontalAlignment;\n\n    @property(BackgroundImage.verticalAlignmentProperty)\n    verticalAlignment: Enums.VerticalAlignment;\n\n    //#endregion\n\n    protected getSchemaKey(): string {\n        return \"BackgroundImage\";\n    }\n\n    protected internalParse(source: any, context: BaseSerializationContext) {\n        if (typeof source === \"string\") {\n            this.resetDefaultValues();\n            this.url = source;\n        } else {\n            return super.internalParse(source, context);\n        }\n    }\n\n    apply(element: CardElement) {\n        if (this.url && element.renderedElement) {\n            element.renderedElement.style.backgroundImage =\n                \"url('\" +\n                element.preProcessPropertyValue(BackgroundImage.urlProperty, this.url) +\n                \"')\";\n\n            switch (this.fillMode) {\n                case Enums.FillMode.Repeat:\n                    element.renderedElement.style.backgroundRepeat = \"repeat\";\n                    break;\n                case Enums.FillMode.RepeatHorizontally:\n                    element.renderedElement.style.backgroundRepeat = \"repeat-x\";\n                    break;\n                case Enums.FillMode.RepeatVertically:\n                    element.renderedElement.style.backgroundRepeat = \"repeat-y\";\n                    break;\n                case Enums.FillMode.Cover:\n                default:\n                    element.renderedElement.style.backgroundRepeat = \"no-repeat\";\n                    element.renderedElement.style.backgroundSize = \"cover\";\n                    break;\n            }\n\n            switch (this.horizontalAlignment) {\n                case Enums.HorizontalAlignment.Left:\n                    break;\n                case Enums.HorizontalAlignment.Center:\n                    element.renderedElement.style.backgroundPositionX = \"center\";\n                    break;\n                case Enums.HorizontalAlignment.Right:\n                    element.renderedElement.style.backgroundPositionX = \"right\";\n                    break;\n            }\n\n            switch (this.verticalAlignment) {\n                case Enums.VerticalAlignment.Top:\n                    break;\n                case Enums.VerticalAlignment.Center:\n                    element.renderedElement.style.backgroundPositionY = \"center\";\n                    break;\n                case Enums.VerticalAlignment.Bottom:\n                    element.renderedElement.style.backgroundPositionY = \"bottom\";\n                    break;\n            }\n        }\n    }\n\n    isValid(): boolean {\n        return this.url ? true : false;\n    }\n}\n\nexport class Container extends ContainerBase {\n    //#region Schema\n    static readonly backgroundImageProperty = new SerializableObjectProperty(\n        Versions.v1_0,\n        \"backgroundImage\",\n        BackgroundImage\n    );\n    static readonly verticalContentAlignmentProperty = new EnumProperty(\n        Versions.v1_1,\n        \"verticalContentAlignment\",\n        Enums.VerticalAlignment\n    );\n    static readonly rtlProperty = new BoolProperty(Versions.v1_0, \"rtl\");\n\n    @property(Container.backgroundImageProperty)\n    get backgroundImage(): BackgroundImage {\n        return this.getValue(Container.backgroundImageProperty);\n    }\n\n    @property(Container.verticalContentAlignmentProperty)\n    verticalContentAlignment?: Enums.VerticalAlignment;\n\n    @property(Container.rtlProperty)\n    rtl?: boolean;\n\n    //#endregion\n\n    private _items: CardElement[] = [];\n    private _renderedItems: CardElement[] = [];\n\n    protected insertItemAt(item: CardElement, index: number, forceInsert: boolean) {\n        if (!item.parent || forceInsert) {\n            if (item.isStandalone) {\n                if (index < 0 || index >= this._items.length) {\n                    this._items.push(item);\n                } else {\n                    this._items.splice(index, 0, item);\n                }\n\n                item.setParent(this);\n            } else {\n                throw new Error(Strings.errors.elementTypeNotStandalone(item.getJsonTypeName()));\n            }\n        } else {\n            throw new Error(Strings.errors.elementAlreadyParented());\n        }\n    }\n\n    protected getItemsCollectionPropertyName(): string {\n        return \"items\";\n    }\n\n    protected applyBackground() {\n        if (this.backgroundImage.isValid() && this.renderedElement) {\n            this.backgroundImage.apply(this);\n        }\n\n        super.applyBackground();\n    }\n\n    protected applyRTL(element: HTMLElement) {\n        if (this.rtl !== undefined) {\n            element.dir = this.rtl ? \"rtl\" : \"ltr\";\n        }\n    }\n\n    protected internalRender(): HTMLElement | undefined {\n        this._renderedItems = [];\n\n        // Cache hostConfig to avoid walking the parent hierarchy several times\n        const hostConfig = this.hostConfig;\n\n        const element = document.createElement(\"div\");\n\n        this.applyRTL(element);\n\n        element.classList.add(hostConfig.makeCssClassName(\"ac-container\"));\n        element.style.display = \"flex\";\n        element.style.flexDirection = \"column\";\n\n        if (GlobalSettings.useAdvancedCardBottomTruncation) {\n            // Forces the container to be at least as tall as its content.\n            //\n            // Fixes a quirk in Chrome where, for nested flex elements, the\n            // inner element's height would never exceed the outer element's\n            // height. This caused overflow truncation to break -- containers\n            // would always be measured as not overflowing, since their heights\n            // were constrained by their parents as opposed to truly reflecting\n            // the height of their content.\n            //\n            // See the \"Browser Rendering Notes\" section of this answer:\n            // https://stackoverflow.com/questions/36247140/why-doesnt-flex-item-shrink-past-content-size\n            element.style.minHeight = \"-webkit-min-content\";\n        }\n\n        switch (this.getEffectiveVerticalContentAlignment()) {\n            case Enums.VerticalAlignment.Center:\n                element.style.justifyContent = \"center\";\n                break;\n            case Enums.VerticalAlignment.Bottom:\n                element.style.justifyContent = \"flex-end\";\n                break;\n            default:\n                element.style.justifyContent = \"flex-start\";\n                break;\n        }\n\n        if (this._items.length > 0) {\n            for (const item of this._items) {\n                const renderedItem = this.isElementAllowed(item) ? item.render() : undefined;\n\n                if (renderedItem) {\n                    if (this._renderedItems.length > 0 && item.separatorElement) {\n                        item.separatorElement.style.flex = \"0 0 auto\";\n\n                        Utils.appendChild(element, item.separatorElement);\n                    }\n\n                    Utils.appendChild(element, renderedItem);\n\n                    this._renderedItems.push(item);\n                }\n            }\n        } else {\n            if (this.isDesignMode()) {\n                const placeholderElement = this.createPlaceholderElement();\n                placeholderElement.style.width = \"100%\";\n                placeholderElement.style.height = \"100%\";\n\n                element.appendChild(placeholderElement);\n            }\n        }\n\n        return element;\n    }\n\n    protected truncateOverflow(maxHeight: number): boolean {\n        if (this.renderedElement) {\n            // Add 1 to account for rounding differences between browsers\n            const boundary = this.renderedElement.offsetTop + maxHeight + 1;\n\n            const handleElement = (cardElement: CardElement) => {\n                const elt = cardElement.renderedElement;\n\n                if (elt) {\n                    switch (Utils.getFitStatus(elt, boundary)) {\n                        case Enums.ContainerFitStatus.FullyInContainer:\n                            const sizeChanged = cardElement[\"resetOverflow\"]();\n                            // If the element's size changed after resetting content,\n                            // we have to check if it still fits fully in the card\n                            if (sizeChanged) {\n                                handleElement(cardElement);\n                            }\n                            break;\n                        case Enums.ContainerFitStatus.Overflowing:\n                            const containerMaxHeight = boundary - elt.offsetTop;\n                            cardElement[\"handleOverflow\"](containerMaxHeight);\n                            break;\n                        case Enums.ContainerFitStatus.FullyOutOfContainer:\n                            cardElement[\"handleOverflow\"](0);\n                            break;\n                    }\n                }\n            };\n\n            for (const item of this._items) {\n                handleElement(item);\n            }\n\n            return true;\n        }\n\n        return false;\n    }\n\n    protected undoOverflowTruncation() {\n        for (const item of this._items) {\n            item[\"resetOverflow\"]();\n        }\n    }\n\n    protected getHasBackground(ignoreBackgroundImages: boolean = false): boolean {\n        let result = ignoreBackgroundImages ? false : this.backgroundImage.isValid();\n\n        return result || super.getHasBackground(ignoreBackgroundImages);\n    }\n\n    protected internalParse(source: any, context: SerializationContext) {\n        super.internalParse(source, context);\n\n        this.clear();\n        this.setShouldFallback(false);\n\n        let jsonItems = source[this.getItemsCollectionPropertyName()];\n\n        if (Array.isArray(jsonItems)) {\n            for (const item of jsonItems) {\n                const element = context.parseElement(\n                    this,\n                    item,\n                    this.forbiddenChildElements(),\n                    !this.isDesignMode()\n                );\n\n                if (element) {\n                    this.insertItemAt(element, -1, true);\n                }\n            }\n        }\n    }\n\n    protected internalToJSON(target: PropertyBag, context: SerializationContext) {\n        super.internalToJSON(target, context);\n\n        const collectionPropertyName = this.getItemsCollectionPropertyName();\n\n        context.serializeArray(target, collectionPropertyName, this._items);\n    }\n\n    protected get isSelectable(): boolean {\n        return true;\n    }\n\n    getEffectivePadding(): PaddingDefinition {\n        if (\n            GlobalSettings.removePaddingFromContainersWithBackgroundImage &&\n            !this.getHasBackground(true)\n        ) {\n            return new PaddingDefinition();\n        }\n\n        return super.getEffectivePadding();\n    }\n\n    getEffectiveVerticalContentAlignment(): Enums.VerticalAlignment {\n        if (this.verticalContentAlignment !== undefined) {\n            return this.verticalContentAlignment;\n        }\n\n        const parentContainer = this.getParentContainer();\n\n        return parentContainer\n            ? parentContainer.getEffectiveVerticalContentAlignment()\n            : Enums.VerticalAlignment.Top;\n    }\n\n    getItemCount(): number {\n        return this._items.length;\n    }\n\n    getItemAt(index: number): CardElement {\n        return this._items[index];\n    }\n\n    getFirstVisibleRenderedItem(): CardElement | undefined {\n        if (this.renderedElement && this._renderedItems && this._renderedItems.length > 0) {\n            for (const item of this._renderedItems) {\n                if (item.isVisible) {\n                    return item;\n                }\n            }\n        }\n\n        return undefined;\n    }\n\n    getLastVisibleRenderedItem(): CardElement | undefined {\n        if (this.renderedElement && this._renderedItems && this._renderedItems.length > 0) {\n            for (let i = this._renderedItems.length - 1; i >= 0; i--) {\n                if (this._renderedItems[i].isVisible) {\n                    return this._renderedItems[i];\n                }\n            }\n        }\n\n        return undefined;\n    }\n\n    getJsonTypeName(): string {\n        return \"Container\";\n    }\n\n    isFirstElement(element: CardElement): boolean {\n        const designMode = this.isDesignMode();\n\n        for (const item of this._items) {\n            if (item.isVisible || designMode) {\n                return item === element;\n            }\n        }\n\n        return false;\n    }\n\n    isLastElement(element: CardElement): boolean {\n        const designMode = this.isDesignMode();\n\n        for (let i = this._items.length - 1; i >= 0; i--) {\n            if (this._items[i].isVisible || designMode) {\n                return this._items[i] === element;\n            }\n        }\n\n        return false;\n    }\n\n    isRtl(): boolean {\n        if (this.rtl !== undefined) {\n            return this.rtl;\n        } else {\n            const parentContainer = this.getParentContainer();\n\n            return parentContainer ? parentContainer.isRtl() : false;\n        }\n    }\n\n    isBleedingAtTop(): boolean {\n        const firstRenderedItem = this.getFirstVisibleRenderedItem();\n\n        return (\n            this.isBleeding() || (firstRenderedItem ? firstRenderedItem.isBleedingAtTop() : false)\n        );\n    }\n\n    isBleedingAtBottom(): boolean {\n        const lastRenderedItem = this.getLastVisibleRenderedItem();\n\n        return (\n            this.isBleeding() ||\n            (lastRenderedItem\n                ? lastRenderedItem.isBleedingAtBottom() &&\n                  lastRenderedItem.getEffectiveStyle() === this.getEffectiveStyle()\n                : false)\n        );\n    }\n\n    indexOf(cardElement: CardElement): number {\n        return this._items.indexOf(cardElement);\n    }\n\n    addItem(item: CardElement) {\n        this.insertItemAt(item, -1, false);\n    }\n\n    insertItemBefore(item: CardElement, insertBefore: CardElement) {\n        this.insertItemAt(item, this._items.indexOf(insertBefore), false);\n    }\n\n    insertItemAfter(item: CardElement, insertAfter: CardElement) {\n        this.insertItemAt(item, this._items.indexOf(insertAfter) + 1, false);\n    }\n\n    removeItem(item: CardElement): boolean {\n        const itemIndex = this._items.indexOf(item);\n\n        if (itemIndex >= 0) {\n            this._items.splice(itemIndex, 1);\n\n            item.setParent(undefined);\n\n            this.updateLayout();\n\n            return true;\n        }\n\n        return false;\n    }\n\n    clear() {\n        this._items = [];\n        this._renderedItems = [];\n    }\n\n    getResourceInformation(): IResourceInformation[] {\n        const result = super.getResourceInformation();\n\n        if (this.backgroundImage.isValid()) {\n            result.push({\n                // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion -- validated by `isValid()`\n                url: this.backgroundImage.url!,\n                mimeType: \"image\"\n            });\n        }\n\n        return result;\n    }\n\n    getActionById(id: string): Action | undefined {\n        let result: Action | undefined = super.getActionById(id);\n\n        if (!result) {\n            if (this.selectAction) {\n                result = this.selectAction.getActionById(id);\n            }\n\n            if (!result) {\n                for (const item of this._items) {\n                    result = item.getActionById(id);\n\n                    if (result) {\n                        break;\n                    }\n                }\n            }\n        }\n\n        return result;\n    }\n\n    get padding(): PaddingDefinition | undefined {\n        return this.getPadding();\n    }\n\n    set padding(value: PaddingDefinition | undefined) {\n        this.setPadding(value);\n    }\n\n    get selectAction(): Action | undefined {\n        return this._selectAction;\n    }\n\n    set selectAction(value: Action | undefined) {\n        this._selectAction = value;\n    }\n\n    get bleed(): boolean {\n        return this.getBleed();\n    }\n\n    set bleed(value: boolean) {\n        this.setBleed(value);\n    }\n}\n\nexport type ColumnWidth = SizeAndUnit | \"auto\" | \"stretch\";\n\nexport class Column extends Container {\n    //#region Schema\n\n    static readonly widthProperty = new CustomProperty<ColumnWidth>(\n        Versions.v1_0,\n        \"width\",\n        (\n            sender: SerializableObject,\n            prop: PropertyDefinition,\n            source: PropertyBag,\n            context: BaseSerializationContext\n        ) => {\n            let result: ColumnWidth = prop.defaultValue;\n            const value = source[prop.name];\n            let invalidWidth = false;\n\n            if (typeof value === \"number\" && !isNaN(value)) {\n                result = new SizeAndUnit(value, Enums.SizeUnit.Weight);\n            } else if (value === \"auto\" || value === \"stretch\") {\n                result = value;\n            } else if (typeof value === \"string\") {\n                try {\n                    result = SizeAndUnit.parse(value);\n\n                    if (\n                        result.unit === Enums.SizeUnit.Pixel &&\n                        prop.targetVersion.compareTo(context.targetVersion) > 0\n                    ) {\n                        invalidWidth = true;\n                    }\n                } catch (e) {\n                    invalidWidth = true;\n                }\n            } else {\n                invalidWidth = true;\n            }\n\n            if (invalidWidth) {\n                context.logParseEvent(\n                    sender,\n                    Enums.ValidationEvent.InvalidPropertyValue,\n                    Strings.errors.invalidColumnWidth(value)\n                );\n\n                result = \"auto\";\n            }\n\n            return result;\n        },\n        (\n            sender: SerializableObject,\n            property: PropertyDefinition,\n            target: PropertyBag,\n            value: ColumnWidth,\n            context: BaseSerializationContext\n        ) => {\n            if (value instanceof SizeAndUnit) {\n                if (value.unit === Enums.SizeUnit.Pixel) {\n                    context.serializeValue(target, \"width\", value.physicalSize + \"px\");\n                } else {\n                    context.serializeNumber(target, \"width\", value.physicalSize);\n                }\n            } else {\n                context.serializeValue(target, \"width\", value);\n            }\n        },\n        \"stretch\"\n    );\n\n    @property(Column.widthProperty)\n    width: ColumnWidth = \"stretch\";\n\n    //#endregion\n\n    private _computedWeight: number = 0;\n\n    protected adjustRenderedElementSize(renderedElement: HTMLElement) {\n        const minDesignTimeColumnHeight = 20;\n\n        if (this.isDesignMode()) {\n            renderedElement.style.minWidth = \"20px\";\n            renderedElement.style.minHeight =\n                (!this.minPixelHeight\n                    ? minDesignTimeColumnHeight\n                    : Math.max(this.minPixelHeight, minDesignTimeColumnHeight)) + \"px\";\n        } else {\n            renderedElement.style.minWidth = \"0\";\n\n            if (this.minPixelHeight) {\n                renderedElement.style.minHeight = this.minPixelHeight + \"px\";\n            }\n        }\n\n        if (this.width === \"auto\") {\n            renderedElement.style.flex = \"0 1 auto\";\n        } else if (this.width === \"stretch\") {\n            renderedElement.style.flex = \"1 1 50px\";\n        } else if (this.width instanceof SizeAndUnit) {\n            if (this.width.unit === Enums.SizeUnit.Pixel) {\n                renderedElement.style.flex = \"0 0 auto\";\n                renderedElement.style.width = this.width.physicalSize + \"px\";\n            } else {\n                renderedElement.style.flex =\n                    \"1 1 \" +\n                    (this._computedWeight > 0 ? this._computedWeight : this.width.physicalSize) +\n                    \"%\";\n            }\n        }\n    }\n\n    protected shouldSerialize(_context: SerializationContext): boolean {\n        return true;\n    }\n\n    protected get separatorOrientation(): Enums.Orientation {\n        return Enums.Orientation.Vertical;\n    }\n\n    constructor(width: ColumnWidth = \"stretch\") {\n        super();\n\n        this.width = width;\n    }\n\n    getJsonTypeName(): string {\n        return \"Column\";\n    }\n\n    get hasVisibleSeparator(): boolean {\n        if (this.parent && this.parent instanceof ColumnSet) {\n            return this.separatorElement !== undefined && !this.parent.isLeftMostElement(this);\n        } else {\n            return false;\n        }\n    }\n\n    get isStandalone(): boolean {\n        return false;\n    }\n}\n\nexport class ColumnSet extends ContainerBase {\n    private _columns: Column[] = [];\n    private _renderedColumns: Column[];\n\n    private createColumnInstance(source: any, context: SerializationContext): Column | undefined {\n        return context.parseCardObject<Column>(\n            this,\n            source,\n            [],\n            !this.isDesignMode(),\n            (typeName: string) => {\n                return !typeName || typeName === \"Column\" ? new Column() : undefined;\n            },\n            (typeName: string, _errorType: Enums.TypeErrorType) => {\n                context.logParseEvent(\n                    undefined,\n                    Enums.ValidationEvent.ElementTypeNotAllowed,\n                    Strings.errors.elementTypeNotAllowed(typeName)\n                );\n            }\n        );\n    }\n\n    protected internalRender(): HTMLElement | undefined {\n        this._renderedColumns = [];\n\n        if (this._columns.length > 0) {\n            // Cache hostConfig to avoid walking the parent hierarchy several times\n            const hostConfig = this.hostConfig;\n\n            const element = document.createElement(\"div\");\n            element.className = hostConfig.makeCssClassName(\"ac-columnSet\");\n            element.style.display = \"flex\";\n\n            if (GlobalSettings.useAdvancedCardBottomTruncation) {\n                // See comment in Container.internalRender()\n                element.style.minHeight = \"-webkit-min-content\";\n            }\n\n            switch (this.getEffectiveHorizontalAlignment()) {\n                case Enums.HorizontalAlignment.Center:\n                    element.style.justifyContent = \"center\";\n                    break;\n                case Enums.HorizontalAlignment.Right:\n                    element.style.justifyContent = \"flex-end\";\n                    break;\n                default:\n                    element.style.justifyContent = \"flex-start\";\n                    break;\n            }\n\n            let totalWeight: number = 0;\n\n            for (const column of this._columns) {\n                if (\n                    column.width instanceof SizeAndUnit &&\n                    column.width.unit === Enums.SizeUnit.Weight\n                ) {\n                    totalWeight += column.width.physicalSize;\n                }\n            }\n\n            for (const column of this._columns) {\n                if (\n                    column.width instanceof SizeAndUnit &&\n                    column.width.unit === Enums.SizeUnit.Weight &&\n                    totalWeight > 0\n                ) {\n                    const computedWeight = (100 / totalWeight) * column.width.physicalSize;\n\n                    // Best way to emulate \"internal\" access I know of\n                    column[\"_computedWeight\"] = computedWeight;\n                }\n\n                const renderedColumn = column.render();\n\n                if (renderedColumn) {\n                    if (this._renderedColumns.length > 0 && column.separatorElement) {\n                        column.separatorElement.style.flex = \"0 0 auto\";\n\n                        Utils.appendChild(element, column.separatorElement);\n                    }\n\n                    Utils.appendChild(element, renderedColumn);\n\n                    this._renderedColumns.push(column);\n                }\n            }\n\n            return this._renderedColumns.length > 0 ? element : undefined;\n        } else {\n            return undefined;\n        }\n    }\n\n    protected truncateOverflow(maxHeight: number): boolean {\n        for (const column of this._columns) {\n            column[\"handleOverflow\"](maxHeight);\n        }\n\n        return true;\n    }\n\n    protected undoOverflowTruncation() {\n        for (const column of this._columns) {\n            column[\"resetOverflow\"]();\n        }\n    }\n\n    protected get isSelectable(): boolean {\n        return true;\n    }\n\n    protected internalParse(source: any, context: SerializationContext) {\n        super.internalParse(source, context);\n\n        this._columns = [];\n        this._renderedColumns = [];\n\n        const jsonColumns = source[\"columns\"];\n\n        if (Array.isArray(jsonColumns)) {\n            for (const item of jsonColumns) {\n                const column = this.createColumnInstance(item, context);\n\n                if (column) {\n                    this._columns.push(column);\n                }\n            }\n        }\n    }\n\n    protected internalToJSON(target: PropertyBag, context: SerializationContext) {\n        super.internalToJSON(target, context);\n\n        context.serializeArray(target, \"columns\", this._columns);\n    }\n\n    isFirstElement(element: CardElement): boolean {\n        for (const column of this._columns) {\n            if (column.isVisible) {\n                return column === element;\n            }\n        }\n\n        return false;\n    }\n\n    isBleedingAtTop(): boolean {\n        if (this.isBleeding()) {\n            return true;\n        }\n\n        if (this._renderedColumns && this._renderedColumns.length > 0) {\n            for (const column of this._columns) {\n                if (column.isBleedingAtTop()) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n\n    isBleedingAtBottom(): boolean {\n        if (this.isBleeding()) {\n            return true;\n        }\n\n        if (this._renderedColumns && this._renderedColumns.length > 0) {\n            for (const column of this._columns) {\n                if (column.isBleedingAtBottom()) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n\n    getItemCount(): number {\n        return this._columns.length;\n    }\n\n    getFirstVisibleRenderedItem(): CardElement | undefined {\n        if (this.renderedElement && this._renderedColumns && this._renderedColumns.length > 0) {\n            return this._renderedColumns[0];\n        } else {\n            return undefined;\n        }\n    }\n\n    getLastVisibleRenderedItem(): CardElement | undefined {\n        if (this.renderedElement && this._renderedColumns && this._renderedColumns.length > 0) {\n            return this._renderedColumns[this._renderedColumns.length - 1];\n        } else {\n            return undefined;\n        }\n    }\n\n    getColumnAt(index: number): Column {\n        return this._columns[index];\n    }\n\n    getItemAt(index: number): CardElement {\n        return this.getColumnAt(index);\n    }\n\n    getJsonTypeName(): string {\n        return \"ColumnSet\";\n    }\n\n    internalValidateProperties(context: ValidationResults) {\n        super.internalValidateProperties(context);\n\n        let weightedColumns: number = 0;\n        let stretchedColumns: number = 0;\n\n        for (const column of this._columns) {\n            if (typeof column.width === \"number\") {\n                weightedColumns++;\n            } else if (column.width === \"stretch\") {\n                stretchedColumns++;\n            }\n        }\n\n        if (weightedColumns > 0 && stretchedColumns > 0) {\n            context.addFailure(\n                this,\n                Enums.ValidationEvent.Hint,\n                Strings.hints.dontUseWeightedAndStrecthedColumnsInSameSet()\n            );\n        }\n    }\n\n    addColumn(column: Column) {\n        if (!column.parent) {\n            this._columns.push(column);\n\n            column.setParent(this);\n        } else {\n            throw new Error(Strings.errors.columnAlreadyBelongsToAnotherSet());\n        }\n    }\n\n    removeItem(item: CardElement): boolean {\n        if (item instanceof Column) {\n            const itemIndex = this._columns.indexOf(item);\n\n            if (itemIndex >= 0) {\n                this._columns.splice(itemIndex, 1);\n\n                item.setParent(undefined);\n\n                this.updateLayout();\n\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    indexOf(cardElement: CardElement): number {\n        return cardElement instanceof Column ? this._columns.indexOf(cardElement) : -1;\n    }\n\n    isLeftMostElement(element: CardElement): boolean {\n        return this._columns.indexOf(<Column>element) === 0;\n    }\n\n    isRightMostElement(element: CardElement): boolean {\n        return this._columns.indexOf(<Column>element) === this._columns.length - 1;\n    }\n\n    isTopElement(element: CardElement): boolean {\n        return this._columns.indexOf(<Column>element) >= 0;\n    }\n\n    isBottomElement(element: CardElement): boolean {\n        return this._columns.indexOf(<Column>element) >= 0;\n    }\n\n    getActionById(id: string): Action | undefined {\n        let result: Action | undefined = undefined;\n\n        for (const column of this._columns) {\n            result = column.getActionById(id);\n\n            if (result) {\n                break;\n            }\n        }\n\n        return result;\n    }\n\n    get bleed(): boolean {\n        return this.getBleed();\n    }\n\n    set bleed(value: boolean) {\n        this.setBleed(value);\n    }\n\n    get padding(): PaddingDefinition | undefined {\n        return this.getPadding();\n    }\n\n    set padding(value: PaddingDefinition | undefined) {\n        this.setPadding(value);\n    }\n\n    get selectAction(): Action | undefined {\n        return this._selectAction;\n    }\n\n    set selectAction(value: Action | undefined) {\n        this._selectAction = value;\n    }\n}\n\nfunction raiseImageLoadedEvent(image: Image) {\n    const card = image.getRootElement() as AdaptiveCard;\n    const onImageLoadedHandler =\n        card && card.onImageLoaded ? card.onImageLoaded : AdaptiveCard.onImageLoaded;\n\n    if (onImageLoadedHandler) {\n        onImageLoadedHandler(image);\n    }\n}\n\nfunction raiseAnchorClickedEvent(\n    element: CardElement,\n    anchor: HTMLAnchorElement,\n    ev?: MouseEvent\n): boolean {\n    const card = element.getRootElement() as AdaptiveCard;\n    const onAnchorClickedHandler =\n        card && card.onAnchorClicked ? card.onAnchorClicked : AdaptiveCard.onAnchorClicked;\n\n    return onAnchorClickedHandler !== undefined\n        ? onAnchorClickedHandler(element, anchor, ev)\n        : false;\n}\n\nfunction raiseExecuteActionEvent(action: Action) {\n    const card = action.parent ? (action.parent.getRootElement() as AdaptiveCard) : undefined;\n    const onExecuteActionHandler =\n        card && card.onExecuteAction ? card.onExecuteAction : AdaptiveCard.onExecuteAction;\n\n    if (action.prepareForExecution() && onExecuteActionHandler) {\n        onExecuteActionHandler(action);\n    }\n}\n\nfunction raiseInlineCardExpandedEvent(action: ShowCardAction, isExpanded: boolean) {\n    const card = action.parent ? (action.parent.getRootElement() as AdaptiveCard) : undefined;\n    const onInlineCardExpandedHandler =\n        card && card.onInlineCardExpanded\n            ? card.onInlineCardExpanded\n            : AdaptiveCard.onInlineCardExpanded;\n\n    if (onInlineCardExpandedHandler) {\n        onInlineCardExpandedHandler(action, isExpanded);\n    }\n}\n\nfunction raiseInputValueChangedEvent(input: Input) {\n    const card = input.getRootElement() as AdaptiveCard;\n    const onInputValueChangedHandler =\n        card && card.onInputValueChanged\n            ? card.onInputValueChanged\n            : AdaptiveCard.onInputValueChanged;\n\n    if (onInputValueChangedHandler) {\n        onInputValueChangedHandler(input);\n    }\n}\n\nfunction raiseElementVisibilityChangedEvent(\n    element: CardElement,\n    shouldUpdateLayout: boolean = true\n) {\n    const rootElement = element.getRootElement();\n\n    if (shouldUpdateLayout) {\n        rootElement.updateLayout();\n    }\n\n    const card = rootElement as AdaptiveCard;\n    const onElementVisibilityChangedHandler =\n        card && card.onElementVisibilityChanged\n            ? card.onElementVisibilityChanged\n            : AdaptiveCard.onElementVisibilityChanged;\n\n    if (onElementVisibilityChangedHandler !== undefined) {\n        onElementVisibilityChangedHandler(element);\n    }\n}\n\nfunction updateInputAdornersVisibility(input: HTMLInputElement, hide: boolean) {\n    if (!!hide) {\n        // hides the time/date picker icon\n        input.readOnly = true;\n        // hides the cross button icon\n        input.required = true;\n    } else {\n         // shows the time/date picker icon\n         input.readOnly = false;\n         // shows the cross button icon\n         input.required = false;\n    }\n    \n}\n\n/**\n * @returns return false to continue with default context menu; return true to skip SDK default context menu\n */\nfunction raiseDisplayOverflowActionMenuEvent(\n    action: OverflowAction,\n    target?: HTMLElement\n): boolean {\n    const card = action.parent ? (action.parent.getRootElement() as AdaptiveCard) : undefined;\n    const onDisplayOverflowActionMenuHandler =\n        card && card.onDisplayOverflowActionMenu\n            ? card.onDisplayOverflowActionMenu\n            : AdaptiveCard.onDisplayOverflowActionMenu;\n\n    return onDisplayOverflowActionMenuHandler !== undefined\n        ? onDisplayOverflowActionMenuHandler(action.getActions(), target)\n        : false;\n}\n\n/**\n * @returns return false to continue with default action button; return true to skip SDK default action button\n */\nfunction raiseRenderOverflowActionsEvent(\n    action: OverflowAction,\n    isAtRootLevelActions: boolean\n): boolean {\n    const card = action.parent ? (action.parent.getRootElement() as AdaptiveCard) : undefined;\n    const onRenderOverflowActionsHandler =\n        card && card.onRenderOverflowActions\n            ? card.onRenderOverflowActions\n            : AdaptiveCard.onRenderOverflowActions;\n\n    return onRenderOverflowActionsHandler !== undefined\n        ? onRenderOverflowActionsHandler(action.getActions(), isAtRootLevelActions)\n        : false;\n}\n\nexport abstract class ContainerWithActions extends Container {\n    private _actionCollection: ActionCollection;\n\n    protected internalParse(source: any, context: SerializationContext) {\n        super.internalParse(source, context);\n\n        this.parseActions(source, context);\n    }\n\n    protected parseActions(source: any, context: SerializationContext) {\n        this._actionCollection.parse(source[\"actions\"], context);\n    }\n\n    protected internalToJSON(target: PropertyBag, context: SerializationContext) {\n        super.internalToJSON(target, context);\n\n        this._actionCollection.toJSON(target, \"actions\", context);\n    }\n\n    protected internalRender(): HTMLElement | undefined {\n        const element = super.internalRender();\n\n        if (element) {\n            const renderedActions = this._actionCollection.render(\n                this.hostConfig.actions.actionsOrientation\n            );\n\n            if (renderedActions) {\n                Utils.appendChild(\n                    element,\n                    renderSeparation(\n                        this.hostConfig,\n                        {\n                            spacing: this.hostConfig.getEffectiveSpacing(\n                                this.hostConfig.actions.spacing\n                            )\n                        },\n                        Enums.Orientation.Horizontal\n                    )\n                );\n                Utils.appendChild(element, renderedActions);\n            }\n\n            if (this.renderIfEmpty) {\n                return element;\n            } else {\n                return element.children.length > 0 ? element : undefined;\n            }\n        } else {\n            return undefined;\n        }\n    }\n\n    protected getHasExpandedAction(): boolean {\n        if (this.renderedActionCount === 0) {\n            return false;\n        } else if (this.renderedActionCount === 1) {\n            return (\n                this._actionCollection.expandedAction !== undefined &&\n                !this.hostConfig.actions.preExpandSingleShowCardAction\n            );\n        } else {\n            return this._actionCollection.expandedAction !== undefined;\n        }\n    }\n\n    protected get renderedActionCount(): number {\n        return this._actionCollection.renderedActionCount;\n    }\n\n    protected get renderIfEmpty(): boolean {\n        return false;\n    }\n\n    constructor() {\n        super();\n\n        this._actionCollection = new ActionCollection(this);\n    }\n\n    releaseDOMResources() {\n        super.releaseDOMResources();\n\n        this._actionCollection.releaseDOMResources();\n    }\n\n    getActionCount(): number {\n        return this._actionCollection.getActionCount();\n    }\n\n    getActionAt(index: number): Action | undefined {\n        if (index >= 0 && index < this.getActionCount()) {\n            return this._actionCollection.getActionAt(index);\n        } else {\n            return super.getActionAt(index);\n        }\n    }\n\n    getActionById(id: string): Action | undefined {\n        const result: Action | undefined = this._actionCollection.getActionById(id);\n\n        return result ? result : super.getActionById(id);\n    }\n\n    internalValidateProperties(context: ValidationResults) {\n        super.internalValidateProperties(context);\n\n        if (this._actionCollection) {\n            this._actionCollection.validateProperties(context);\n        }\n    }\n\n    isLastElement(element: CardElement): boolean {\n        return super.isLastElement(element) && this._actionCollection.getActionCount() === 0;\n    }\n\n    addAction(action: Action) {\n        this._actionCollection.addAction(action);\n    }\n\n    clear() {\n        super.clear();\n\n        this._actionCollection.clear();\n    }\n\n    getAllInputs(processActions: boolean = true): Input[] {\n        let result = super.getAllInputs(processActions);\n\n        if (processActions) {\n            result.push(...this._actionCollection.getAllInputs(processActions));\n        }\n\n        return result;\n    }\n\n    getResourceInformation(): IResourceInformation[] {\n        let result = super.getResourceInformation();\n\n        result.push(...this._actionCollection.getResourceInformation());\n\n        return result;\n    }\n\n    isBleedingAtBottom(): boolean {\n        if (this._actionCollection.renderedActionCount === 0) {\n            return super.isBleedingAtBottom();\n        } else {\n            if (this._actionCollection.getActionCount() === 1) {\n                return (\n                    this._actionCollection.expandedAction !== undefined &&\n                    !this.hostConfig.actions.preExpandSingleShowCardAction\n                );\n            } else {\n                return this._actionCollection.expandedAction !== undefined;\n            }\n        }\n    }\n\n    getForbiddenActionNames(): string[] {\n        return [];\n    }\n    \n    getElementById(id: string): CardElement | undefined {\n        let result = super.getElementById(id);\n\n        if (!result) {\n            result = this.getElementByIdFromAction(id);\n        }\n\n        return result;\n    }\n\n    get isStandalone(): boolean {\n        return false;\n    }\n}\n\nexport interface IMarkdownProcessingResult {\n    didProcess: boolean;\n    outputHtml?: any;\n}\n\nexport class RefreshActionProperty extends PropertyDefinition {\n    parse(\n        sender: RefreshDefinition,\n        source: PropertyBag,\n        context: SerializationContext\n    ): ExecuteAction | undefined {\n        const action = context.parseAction(sender.parent, source[this.name], [], false);\n\n        if (action !== undefined) {\n            if (action instanceof ExecuteAction) {\n                return action;\n            }\n\n            context.logParseEvent(\n                sender,\n                Enums.ValidationEvent.ActionTypeNotAllowed,\n                Strings.errors.actionTypeNotAllowed(action.getJsonTypeName())\n            );\n        }\n\n        context.logParseEvent(\n            sender,\n            Enums.ValidationEvent.PropertyCantBeNull,\n            Strings.errors.propertyMustBeSet(\"action\")\n        );\n\n        return undefined;\n    }\n\n    toJSON(\n        sender: SerializableObject,\n        target: PropertyBag,\n        value: ExecuteAction | undefined,\n        context: SerializationContext\n    ) {\n        context.serializeValue(\n            target,\n            this.name,\n            value ? value.toJSON(context) : undefined,\n            undefined,\n            true\n        );\n    }\n\n    constructor(readonly targetVersion: Version, readonly name: string) {\n        super(targetVersion, name, undefined);\n    }\n}\n\nexport class RefreshDefinition extends SerializableObject {\n    //#region Schema\n\n    static readonly actionProperty = new RefreshActionProperty(Versions.v1_4, \"action\");\n    static readonly userIdsProperty = new StringArrayProperty(Versions.v1_4, \"userIds\");\n\n    @property(RefreshDefinition.actionProperty)\n    get action(): ExecuteAction {\n        return this.getValue(RefreshDefinition.actionProperty);\n    }\n\n    set action(value: ExecuteAction) {\n        this.setValue(RefreshDefinition.actionProperty, value);\n\n        if (value) {\n            value.setParent(this.parent);\n        }\n    }\n\n    @property(RefreshDefinition.userIdsProperty)\n    userIds?: string[];\n\n    protected getSchemaKey(): string {\n        return \"RefreshDefinition\";\n    }\n\n    //#endregion\n\n    parent: CardElement;\n}\n\nexport class AuthCardButton extends SerializableObject {\n    //#region Schema\n\n    static readonly typeProperty = new StringProperty(Versions.v1_4, \"type\");\n    static readonly titleProperty = new StringProperty(Versions.v1_4, \"title\");\n    static readonly imageProperty = new StringProperty(Versions.v1_4, \"image\");\n    static readonly valueProperty = new StringProperty(Versions.v1_4, \"value\");\n\n    protected getSchemaKey(): string {\n        return \"AuthCardButton\";\n    }\n\n    //#endregion\n\n    @property(AuthCardButton.typeProperty)\n    type: string;\n\n    @property(AuthCardButton.titleProperty)\n    title?: string;\n\n    @property(AuthCardButton.imageProperty)\n    image?: string;\n\n    @property(AuthCardButton.valueProperty)\n    value: string;\n}\n\nexport class TokenExchangeResource extends SerializableObject {\n    //#region Schema\n\n    static readonly idProperty = new StringProperty(Versions.v1_4, \"id\");\n    static readonly uriProperty = new StringProperty(Versions.v1_4, \"uri\");\n    static readonly providerIdProperty = new StringProperty(Versions.v1_4, \"providerId\");\n\n    protected getSchemaKey(): string {\n        return \"TokenExchangeResource\";\n    }\n\n    //#endregion\n\n    @property(TokenExchangeResource.idProperty)\n    id?: string;\n\n    @property(TokenExchangeResource.uriProperty)\n    uri?: string;\n\n    @property(TokenExchangeResource.providerIdProperty)\n    providerId?: string;\n}\n\nexport class Authentication extends SerializableObject {\n    //#region Schema\n\n    static readonly textProperty = new StringProperty(Versions.v1_4, \"text\");\n    static readonly connectionNameProperty = new StringProperty(Versions.v1_4, \"connectionName\");\n    static readonly buttonsProperty = new SerializableObjectCollectionProperty(\n        Versions.v1_4,\n        \"buttons\",\n        AuthCardButton\n    );\n    static readonly tokenExchangeResourceProperty = new SerializableObjectProperty(\n        Versions.v1_4,\n        \"tokenExchangeResource\",\n        TokenExchangeResource,\n        true\n    );\n\n    protected getSchemaKey(): string {\n        return \"Authentication\";\n    }\n\n    //#endregion\n\n    @property(Authentication.textProperty)\n    text?: string;\n\n    @property(Authentication.connectionNameProperty)\n    connectionName?: string;\n\n    @property(Authentication.buttonsProperty)\n    buttons: AuthCardButton[];\n\n    @property(Authentication.tokenExchangeResourceProperty)\n    tokenExchangeResource?: TokenExchangeResource;\n}\n\n// @dynamic\nexport class AdaptiveCard extends ContainerWithActions {\n    static readonly schemaUrl = \"http://adaptivecards.io/schemas/adaptive-card.json\";\n\n    //#region Schema\n\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    protected static readonly $schemaProperty = new CustomProperty<string>(\n        Versions.v1_0,\n        \"$schema\",\n        (\n            sender: SerializableObject,\n            property: PropertyDefinition,\n            source: PropertyBag,\n            context: BaseSerializationContext\n        ) => {\n            return AdaptiveCard.schemaUrl;\n        },\n        (\n            sender: SerializableObject,\n            prop: PropertyDefinition,\n            target: PropertyBag,\n            value: Versions | undefined,\n            context: BaseSerializationContext\n        ) => {\n            context.serializeValue(target, prop.name, AdaptiveCard.schemaUrl);\n        }\n    );\n\n    static readonly versionProperty = new CustomProperty<Version | undefined>(\n        Versions.v1_0,\n        \"version\",\n        (\n            sender: SerializableObject,\n            prop: PropertyDefinition,\n            source: PropertyBag,\n            context: BaseSerializationContext\n        ) => {\n            let version = Version.parse(source[prop.name], context);\n\n            if (version === undefined) {\n                version = Versions.latest;\n\n                context.logParseEvent(\n                    sender,\n                    Enums.ValidationEvent.InvalidPropertyValue,\n                    Strings.errors.invalidCardVersion(version.toString())\n                );\n            }\n\n            return version;\n        },\n        (\n            sender: SerializableObject,\n            prop: PropertyDefinition,\n            target: PropertyBag,\n            value: Version | undefined,\n            context: BaseSerializationContext\n        ) => {\n            if (value !== undefined) {\n                context.serializeValue(target, prop.name, value.toString());\n            }\n        },\n        Versions.v1_0\n    );\n\n    static readonly fallbackTextProperty = new StringProperty(Versions.v1_0, \"fallbackText\");\n    static readonly speakProperty = new StringProperty(Versions.v1_0, \"speak\");\n    static readonly refreshProperty = new SerializableObjectProperty(\n        Versions.v1_4,\n        \"refresh\",\n        RefreshDefinition,\n        true\n    );\n    static readonly authenticationProperty = new SerializableObjectProperty(\n        Versions.v1_4,\n        \"authentication\",\n        Authentication,\n        true\n    );\n\n    @property(AdaptiveCard.versionProperty)\n    version: Version;\n\n    @property(AdaptiveCard.fallbackTextProperty)\n    fallbackText?: string;\n\n    @property(AdaptiveCard.speakProperty)\n    speak?: string;\n\n    @property(AdaptiveCard.refreshProperty)\n    get refresh(): RefreshDefinition | undefined {\n        return this.getValue(AdaptiveCard.refreshProperty);\n    }\n\n    set refresh(value: RefreshDefinition | undefined) {\n        this.setValue(AdaptiveCard.refreshProperty, value);\n\n        if (value) {\n            value.parent = this;\n        }\n    }\n\n    @property(AdaptiveCard.authenticationProperty)\n    authentication?: Authentication;\n\n    //#endregion\n\n    private static _haveWarnedAboutNoMarkdownProcessing = false;\n\n    static onAnchorClicked?: (\n        element: CardElement,\n        anchor: HTMLAnchorElement,\n        ev?: MouseEvent\n    ) => boolean;\n    static onExecuteAction?: (action: Action) => void;\n    static onElementVisibilityChanged?: (element: CardElement) => void;\n    static onImageLoaded?: (image: Image) => void;\n    static onInlineCardExpanded?: (action: ShowCardAction, isExpanded: boolean) => void;\n    static onInputValueChanged?: (input: Input) => void;\n    static onCarouselEvent?: (carouselEvent: CarouselEvent) => void;\n    static onProcessMarkdown?: (text: string, result: IMarkdownProcessingResult) => void;\n    static onDisplayOverflowActionMenu?: (\n        actions: readonly Action[],\n        target?: HTMLElement\n    ) => boolean;\n    static onRenderOverflowActions?: (\n        actions: readonly Action[],\n        isRootLevelActions: boolean\n    ) => boolean;\n\n    static get processMarkdown(): (text: string) => string {\n        throw new Error(Strings.errors.processMarkdownEventRemoved());\n    }\n\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    static set processMarkdown(_value: (text: string) => string) {\n        throw new Error(Strings.errors.processMarkdownEventRemoved());\n    }\n\n    static applyMarkdown(text: string): IMarkdownProcessingResult {\n        const result: IMarkdownProcessingResult = {\n            didProcess: false\n        };\n\n        if (AdaptiveCard.onProcessMarkdown) {\n            AdaptiveCard.onProcessMarkdown(text, result);\n        } else if ((<any>window).markdownit) {\n            // Check for markdownit\n            const markdownIt: any = (<any>window).markdownit;\n            result.outputHtml = markdownIt().render(text);\n            result.didProcess = true;\n        } else if (!AdaptiveCard._haveWarnedAboutNoMarkdownProcessing) {\n            // eslint-disable-next-line no-console\n            console.warn(Strings.errors.markdownProcessingNotEnabled);\n            AdaptiveCard._haveWarnedAboutNoMarkdownProcessing = true;\n        }\n\n        return result;\n    }\n\n    private _fallbackCard?: AdaptiveCard;\n\n    private isVersionSupported(): boolean {\n        if (this.bypassVersionCheck) {\n            return true;\n        } else {\n            const unsupportedVersion: boolean =\n                !this.version ||\n                !this.version.isValid ||\n                this.maxVersion.major < this.version.major ||\n                (this.maxVersion.major === this.version.major &&\n                    this.maxVersion.minor < this.version.minor);\n\n            return !unsupportedVersion;\n        }\n    }\n\n    protected getDefaultSerializationContext(): BaseSerializationContext {\n        return new SerializationContext(this.version);\n    }\n\n    protected getItemsCollectionPropertyName(): string {\n        return \"body\";\n    }\n\n    protected internalParse(source: any, context: SerializationContext) {\n        this._fallbackCard = undefined;\n\n        const fallbackElement = context.parseElement(\n            undefined,\n            source[\"fallback\"],\n            this.forbiddenChildElements(),\n            !this.isDesignMode()\n        );\n\n        if (fallbackElement) {\n            this._fallbackCard = new AdaptiveCard();\n            this._fallbackCard.addItem(fallbackElement);\n        }\n\n        super.internalParse(source, context);\n    }\n\n    protected internalToJSON(target: PropertyBag, context: SerializationContext) {\n        this.setValue(AdaptiveCard.versionProperty, context.targetVersion);\n\n        super.internalToJSON(target, context);\n    }\n\n    protected internalRender(): HTMLElement | undefined {\n        const renderedElement = super.internalRender();\n\n        if (GlobalSettings.useAdvancedCardBottomTruncation && renderedElement) {\n            // Unlike containers, the root card element should be allowed to\n            // be shorter than its content (otherwise the overflow truncation\n            // logic would never get triggered)\n            renderedElement.style.removeProperty(\"minHeight\");\n        }\n\n        return renderedElement;\n    }\n\n    protected getHasBackground(ignoreBackgroundImages: boolean = false): boolean {\n        return true;\n    }\n\n    protected getDefaultPadding(): PaddingDefinition {\n        return new PaddingDefinition(\n            Enums.Spacing.Padding,\n            Enums.Spacing.Padding,\n            Enums.Spacing.Padding,\n            Enums.Spacing.Padding\n        );\n    }\n\n    protected shouldSerialize(_context: SerializationContext): boolean {\n        return true;\n    }\n\n    protected get renderIfEmpty(): boolean {\n        return true;\n    }\n\n    protected get bypassVersionCheck(): boolean {\n        return false;\n    }\n\n    protected get allowCustomStyle() {\n        return this.hostConfig.adaptiveCard && this.hostConfig.adaptiveCard.allowCustomStyle;\n    }\n\n    protected get hasBackground(): boolean {\n        return true;\n    }\n\n    onAnchorClicked?: (element: CardElement, anchor: HTMLAnchorElement, ev?: MouseEvent) => boolean;\n    onExecuteAction?: (action: Action) => void;\n    onElementVisibilityChanged?: (element: CardElement) => void;\n    onImageLoaded?: (image: Image) => void;\n    onInlineCardExpanded?: (action: ShowCardAction, isExpanded: boolean) => void;\n    onInputValueChanged?: (input: Input) => void;\n    onCarouselEvent?: (carouselEvent: CarouselEvent) => void;\n    onDisplayOverflowActionMenu?: (actions: readonly Action[], target?: HTMLElement) => boolean;\n    onRenderOverflowActions?: (actions: readonly Action[], isRootLevelActions: boolean) => boolean;\n\n    designMode: boolean = false;\n\n    getJsonTypeName(): string {\n        return \"AdaptiveCard\";\n    }\n\n    internalValidateProperties(context: ValidationResults) {\n        super.internalValidateProperties(context);\n\n        if (this.getValue(CardElement.typeNameProperty) !== \"AdaptiveCard\") {\n            context.addFailure(\n                this,\n                Enums.ValidationEvent.MissingCardType,\n                Strings.errors.invalidCardType()\n            );\n        }\n\n        if (!this.bypassVersionCheck && !this.version) {\n            context.addFailure(\n                this,\n                Enums.ValidationEvent.PropertyCantBeNull,\n                Strings.errors.propertyMustBeSet(\"version\")\n            );\n        } else if (!this.isVersionSupported()) {\n            context.addFailure(\n                this,\n                Enums.ValidationEvent.UnsupportedCardVersion,\n                Strings.errors.unsupportedCardVersion(\n                    this.version.toString(),\n                    this.maxVersion.toString()\n                )\n            );\n        }\n    }\n\n    render(target?: HTMLElement): HTMLElement | undefined {\n        let renderedCard: HTMLElement | undefined;\n\n        if (this.shouldFallback() && this._fallbackCard) {\n            this._fallbackCard.hostConfig = this.hostConfig;\n\n            renderedCard = this._fallbackCard.render();\n        } else {\n            renderedCard = super.render();\n\n            if (renderedCard) {\n                renderedCard.classList.add(this.hostConfig.makeCssClassName(\"ac-adaptiveCard\"));\n\n                // Having a tabIndex on the root container for a card can mess up accessibility in some scenarios.\n                // However, we've shipped this behavior before, and so can't just turn it off in a point release. For\n                // now, to unblock accessibility scenarios for our customers, we've got an option to turn it off. In a\n                // future release, we should strongly consider flipping the default such that we *don't* emit a tabIndex\n                // by default.\n                if (GlobalSettings.setTabIndexAtCardRoot) {\n                    renderedCard.tabIndex = 0;\n                }\n\n                if (this.speak) {\n                    renderedCard.setAttribute(\"aria-label\", this.speak);\n                }\n\n                renderedCard.onmouseenter = (ev: MouseEvent) => {\n                    this.updateInputsVisualState(true /* hover */);\n                };\n\n                renderedCard.onmouseleave = (ev: MouseEvent) => {\n                    this.updateInputsVisualState(false /* hover */);\n                };\n\n                this.getRootElement().updateActionsEnabledState();\n            }\n        }\n\n        if (target) {\n            Utils.appendChild(target, renderedCard);\n\n            this.updateLayout();\n        }\n\n        const inputElements = this.getAllInputs();\n        document.onclick = (event) => {\n            inputElements.forEach((input) => {\n                if (\n                    input instanceof ChoiceSetInput &&\n                    !input.renderedElement?.contains(event.target as Node)\n                ) {\n                    input\n                        .getDropdownElement()\n                        ?.classList.remove(\n                            this.hostConfig.makeCssClassName(\n                                \"ac-choiceSetInput-filtered-dropdown-open\"\n                            )\n                        );\n                }\n            });\n        };\n\n        return renderedCard;\n    }\n\n    updateLayout(processChildren: boolean = true) {\n        super.updateLayout(processChildren);\n\n        if (GlobalSettings.useAdvancedCardBottomTruncation && this.isDisplayed()) {\n            const padding = this.hostConfig.getEffectiveSpacing(Enums.Spacing.Default);\n\n            // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n            this[\"handleOverflow\"](this.renderedElement!.offsetHeight - padding);\n        }\n    }\n\n    shouldFallback(): boolean {\n        return super.shouldFallback() || !this.isVersionSupported();\n    }\n\n    get hasVisibleSeparator(): boolean {\n        return false;\n    }\n}\n\nclass InlineAdaptiveCard extends AdaptiveCard {\n    //#region Schema\n\n    protected getSchemaKey(): string {\n        return \"InlineAdaptiveCard\";\n    }\n\n    protected populateSchema(schema: SerializableObjectSchema) {\n        super.populateSchema(schema);\n\n        schema.remove(AdaptiveCard.$schemaProperty, AdaptiveCard.versionProperty);\n    }\n\n    //#endregion\n\n    protected getDefaultPadding(): PaddingDefinition {\n        return new PaddingDefinition(\n            this.suppressStyle ? Enums.Spacing.None : Enums.Spacing.Padding,\n            Enums.Spacing.Padding,\n            this.suppressStyle ? Enums.Spacing.None : Enums.Spacing.Padding,\n            Enums.Spacing.Padding\n        );\n    }\n\n    protected get bypassVersionCheck(): boolean {\n        return true;\n    }\n\n    protected get defaultStyle(): string {\n        if (this.suppressStyle) {\n            return Enums.ContainerStyle.Default;\n        } else {\n            return this.hostConfig.actions.showCard.style\n                ? this.hostConfig.actions.showCard.style\n                : Enums.ContainerStyle.Emphasis;\n        }\n    }\n\n    suppressStyle: boolean = false;\n\n    render(target?: HTMLElement): HTMLElement | undefined {\n        const renderedCard = super.render(target);\n\n        if (renderedCard) {\n            renderedCard.setAttribute(\"aria-live\", \"polite\");\n            renderedCard.removeAttribute(\"tabindex\");\n        }\n\n        return renderedCard;\n    }\n}\n\nexport class SerializationContext extends BaseSerializationContext {\n    private _elementRegistry?: CardObjectRegistry<CardElement>;\n    private _actionRegistry?: CardObjectRegistry<Action>;\n\n    private _forbiddenTypes: Set<string> = new Set<string>();\n    private internalParseCardObject<T extends CardObject>(\n        parent: CardElement | undefined,\n        source: any,\n        forbiddenTypes: Set<string>,\n        allowFallback: boolean,\n        createInstanceCallback: (typeName: string | undefined) => T | undefined,\n        logParseEvent: (typeName: string | undefined, errorType: Enums.TypeErrorType) => void\n    ): T | undefined {\n        let result: T | undefined = undefined;\n\n        if (source && typeof source === \"object\") {\n            const oldForbiddenTypes = new Set<string>();\n            this._forbiddenTypes.forEach((type) => {\n                oldForbiddenTypes.add(type);\n            });\n            forbiddenTypes.forEach((type) => {\n                this._forbiddenTypes.add(type);\n            });\n\n            const typeName = Utils.parseString(source[\"type\"]);\n\n            if (typeName && this._forbiddenTypes.has(typeName)) {\n                logParseEvent(typeName, Enums.TypeErrorType.ForbiddenType);\n            } else {\n                let tryToFallback = false;\n\n                result = createInstanceCallback(typeName);\n\n                if (!result) {\n                    tryToFallback = GlobalSettings.enableFallback && allowFallback;\n\n                    logParseEvent(typeName, Enums.TypeErrorType.UnknownType);\n                } else {\n                    result.setParent(parent);\n                    result.parse(source, this);\n\n                    tryToFallback =\n                        GlobalSettings.enableFallback && allowFallback && result.shouldFallback();\n                }\n\n                if (tryToFallback) {\n                    const fallback = source[\"fallback\"];\n\n                    if (!fallback && parent) {\n                        parent.setShouldFallback(true);\n                    }\n                    if (typeof fallback === \"string\" && fallback.toLowerCase() === \"drop\") {\n                        result = undefined;\n                    } else if (typeof fallback === \"object\") {\n                        result = this.internalParseCardObject<T>(\n                            parent,\n                            fallback,\n                            forbiddenTypes,\n                            true,\n                            createInstanceCallback,\n                            logParseEvent\n                        );\n                    }\n                }\n            }\n\n            this._forbiddenTypes = oldForbiddenTypes;\n        }\n\n        return result;\n    }\n\n    protected cardObjectParsed(o: SerializableObject, source: any) {\n        if (o instanceof Action && this.onParseAction) {\n            this.onParseAction(o, source, this);\n        } else if (o instanceof CardElement && this.onParseElement) {\n            this.onParseElement(o, source, this);\n        }\n    }\n\n    onParseAction?: (action: Action, source: any, context: SerializationContext) => void;\n    onParseElement?: (element: CardElement, source: any, context: SerializationContext) => void;\n\n    shouldSerialize(o: SerializableObject): boolean {\n        if (o instanceof Action) {\n            return this.actionRegistry.findByName(o.getJsonTypeName()) !== undefined;\n        } else if (o instanceof CardElement) {\n            return this.elementRegistry.findByName(o.getJsonTypeName()) !== undefined;\n        } else {\n            return true;\n        }\n    }\n\n    parseCardObject<T extends CardObject>(\n        parent: CardElement | undefined,\n        source: any,\n        forbiddenTypeNames: string[],\n        allowFallback: boolean,\n        createInstanceCallback: (typeName: string) => T | undefined,\n        logParseEvent: (typeName: string, errorType: Enums.TypeErrorType) => void\n    ): T | undefined {\n        const forbiddenTypes = new Set<string>(forbiddenTypeNames);\n        const result = this.internalParseCardObject(\n            parent,\n            source,\n            forbiddenTypes,\n            allowFallback,\n            createInstanceCallback,\n            logParseEvent\n        );\n\n        if (result !== undefined) {\n            this.cardObjectParsed(result, source);\n        }\n\n        return result;\n    }\n\n    parseElement(\n        parent: CardElement | undefined,\n        source: any,\n        forbiddenTypes: string[],\n        allowFallback: boolean\n    ): CardElement | undefined {\n        return this.parseCardObject<CardElement>(\n            parent,\n            source,\n            forbiddenTypes,\n            allowFallback,\n            (typeName: string) => {\n                return this.elementRegistry.createInstance(typeName, this.targetVersion);\n            },\n            (typeName: string, errorType: Enums.TypeErrorType) => {\n                if (errorType === Enums.TypeErrorType.UnknownType) {\n                    this.logParseEvent(\n                        undefined,\n                        Enums.ValidationEvent.UnknownElementType,\n                        Strings.errors.unknownElementType(typeName)\n                    );\n                } else {\n                    this.logParseEvent(\n                        undefined,\n                        Enums.ValidationEvent.ElementTypeNotAllowed,\n                        Strings.errors.elementTypeNotAllowed(typeName)\n                    );\n                }\n            }\n        );\n    }\n\n    parseAction(\n        parent: CardElement,\n        source: any,\n        forbiddenActionTypes: string[],\n        allowFallback: boolean\n    ): Action | undefined {\n        return this.parseCardObject<Action>(\n            parent,\n            source,\n            forbiddenActionTypes,\n            allowFallback,\n            (typeName: string) => {\n                return this.actionRegistry.createInstance(typeName, this.targetVersion);\n            },\n            (typeName: string, errorType: Enums.TypeErrorType) => {\n                if (errorType === Enums.TypeErrorType.UnknownType) {\n                    this.logParseEvent(\n                        undefined,\n                        Enums.ValidationEvent.UnknownActionType,\n                        Strings.errors.unknownActionType(typeName)\n                    );\n                } else {\n                    this.logParseEvent(\n                        undefined,\n                        Enums.ValidationEvent.ActionTypeNotAllowed,\n                        Strings.errors.actionTypeNotAllowed(typeName)\n                    );\n                }\n            }\n        );\n    }\n\n    get elementRegistry(): CardObjectRegistry<CardElement> {\n        return this._elementRegistry ?? GlobalRegistry.elements;\n    }\n\n    // Not using a property setter here because the setter should accept \"undefined\"\n    // whereas the getter should never return undefined.\n    setElementRegistry(value: CardObjectRegistry<CardElement> | undefined) {\n        this._elementRegistry = value;\n    }\n\n    get actionRegistry(): CardObjectRegistry<Action> {\n        return this._actionRegistry ?? GlobalRegistry.actions;\n    }\n\n    // Not using a property setter here because the setter should accept \"undefined\"\n    // whereas the getter should never return undefined.\n    setActionRegistry(value: CardObjectRegistry<Action> | undefined) {\n        this._actionRegistry = value;\n    }\n}\n\nGlobalRegistry.defaultElements.register(\"Container\", Container);\nGlobalRegistry.defaultElements.register(\"TextBlock\", TextBlock);\nGlobalRegistry.defaultElements.register(\"RichTextBlock\", RichTextBlock, Versions.v1_2);\nGlobalRegistry.defaultElements.register(\"TextRun\", TextRun, Versions.v1_2);\nGlobalRegistry.defaultElements.register(\"Image\", Image);\nGlobalRegistry.defaultElements.register(\"ImageSet\", ImageSet);\nGlobalRegistry.defaultElements.register(\"Media\", Media, Versions.v1_1);\nGlobalRegistry.defaultElements.register(\"FactSet\", FactSet);\nGlobalRegistry.defaultElements.register(\"ColumnSet\", ColumnSet);\nGlobalRegistry.defaultElements.register(\"ActionSet\", ActionSet, Versions.v1_2);\nGlobalRegistry.defaultElements.register(\"Input.Text\", TextInput);\nGlobalRegistry.defaultElements.register(\"Input.Date\", DateInput);\nGlobalRegistry.defaultElements.register(\"Input.Time\", TimeInput);\nGlobalRegistry.defaultElements.register(\"Input.Number\", NumberInput);\nGlobalRegistry.defaultElements.register(\"Input.ChoiceSet\", ChoiceSetInput);\nGlobalRegistry.defaultElements.register(\"Input.Toggle\", ToggleInput);\n\nGlobalRegistry.defaultActions.register(OpenUrlAction.JsonTypeName, OpenUrlAction);\nGlobalRegistry.defaultActions.register(SubmitAction.JsonTypeName, SubmitAction);\nGlobalRegistry.defaultActions.register(ShowCardAction.JsonTypeName, ShowCardAction);\nGlobalRegistry.defaultActions.register(\n    ToggleVisibilityAction.JsonTypeName,\n    ToggleVisibilityAction,\n    Versions.v1_2\n);\nGlobalRegistry.defaultActions.register(ExecuteAction.JsonTypeName, ExecuteAction, Versions.v1_4);\n"]}},"error":null,"hash":"f08f6f82763be79f676fac8006ce2565","cacheData":{"env":{}}}