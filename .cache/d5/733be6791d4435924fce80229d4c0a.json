{"id":"../../node_modules/adaptivecards/lib/strings.js","dependencies":[{"name":"C:\\Users\\t-acruau\\node_modules\\adaptivecards\\lib\\strings.js.map","includedInParent":true,"mtime":1689085533902},{"name":"C:\\Users\\t-acruau\\node_modules\\adaptivecards\\src\\strings.ts","includedInParent":true,"mtime":1689085534060},{"name":"C:\\Users\\t-acruau\\adaptive-cards\\package.json","includedInParent":true,"mtime":1689259513501},{"name":"C:\\Users\\t-acruau\\node_modules\\adaptivecards\\package.json","includedInParent":true,"mtime":1689085533782}],"generated":{"js":"\"use strict\";\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Strings = void 0;\n// eslint-disable-next-line @typescript-eslint/no-extraneous-class\nvar Strings = /** @class */ (function () {\n    function Strings() {\n    }\n    Strings.errors = {\n        unknownElementType: function (typeName) {\n            return \"Unknown element type \\\"\".concat(typeName, \"\\\". Fallback will be used if present.\");\n        },\n        unknownActionType: function (typeName) {\n            return \"Unknown action type \\\"\".concat(typeName, \"\\\". Fallback will be used if present.\");\n        },\n        elementTypeNotAllowed: function (typeName) {\n            return \"Element type \\\"\".concat(typeName, \"\\\" is not allowed in this context.\");\n        },\n        actionTypeNotAllowed: function (typeName) {\n            return \"Action type \\\"\".concat(typeName, \"\\\" is not allowed in this context.\");\n        },\n        invalidPropertyValue: function (value, propertyName) {\n            return \"Invalid value \\\"\".concat(value, \"\\\" for property \\\"\").concat(propertyName, \"\\\".\");\n        },\n        showCardMustHaveCard: function () {\n            return \"\\\"An Action.ShowCard must have its \\\"card\\\" property set to a valid AdaptiveCard object.\";\n        },\n        invalidColumnWidth: function (invalidWidth) {\n            return \"Invalid column width \\\"\".concat(invalidWidth, \"\\\" - defaulting to \\\"auto\\\".\");\n        },\n        invalidCardVersion: function (defaultingToVersion) {\n            return \"Invalid card version. Defaulting to \\\"\".concat(defaultingToVersion, \"\\\".\");\n        },\n        invalidVersionString: function (versionString) {\n            return \"Invalid version string \\\"\".concat(versionString, \"\\\".\");\n        },\n        propertyValueNotSupported: function (value, propertyName, supportedInVersion, versionUsed) {\n            return \"Value \\\"\".concat(value, \"\\\" for property \\\"\").concat(propertyName, \"\\\" is supported in version \").concat(supportedInVersion, \", but you are using version \").concat(versionUsed, \".\");\n        },\n        propertyNotSupported: function (propertyName, supportedInVersion, versionUsed) {\n            return \"Property \\\"\".concat(propertyName, \"\\\" is supported in version \").concat(supportedInVersion, \", but you are using version \").concat(versionUsed, \".\");\n        },\n        indexOutOfRange: function (index) { return \"Index out of range (\".concat(index, \").\"); },\n        elementCannotBeUsedAsInline: function () {\n            return \"RichTextBlock.addInline: the specified card element cannot be used as a RichTextBlock inline.\";\n        },\n        inlineAlreadyParented: function () {\n            return \"RichTextBlock.addInline: the specified inline already belongs to another RichTextBlock.\";\n        },\n        interactivityNotAllowed: function () { return \"Interactivity is not allowed.\"; },\n        inputsMustHaveUniqueId: function () { return \"All inputs must have a unique Id.\"; },\n        choiceSetMustHaveAtLeastOneChoice: function () {\n            return \"An Input.ChoiceSet must have at least one choice defined.\";\n        },\n        choiceSetChoicesMustHaveTitleAndValue: function () {\n            return \"All choices in an Input.ChoiceSet must have their title and value properties set.\";\n        },\n        propertyMustBeSet: function (propertyName) { return \"Property \\\"\".concat(propertyName, \"\\\" must be set.\"); },\n        actionHttpHeadersMustHaveNameAndValue: function () {\n            return \"All headers of an Action.Http must have their name and value properties set.\";\n        },\n        tooManyActions: function (maximumActions) {\n            return \"Maximum number of actions exceeded (\".concat(maximumActions, \").\");\n        },\n        tooLittleTimeDelay: function (minAutoplayDelay) {\n            return \"Autoplay Delay is too short (\".concat(minAutoplayDelay, \").\");\n        },\n        tooManyCarouselPages: function (maxCarouselPages) {\n            return \"Maximum number of Carousel pages exceeded (\".concat(maxCarouselPages, \").\");\n        },\n        invalidInitialPageIndex: function (initialPageIndex) {\n            return \"InitialPage for carousel is invalid (\".concat(initialPageIndex, \").\");\n        },\n        columnAlreadyBelongsToAnotherSet: function () { return \"This column already belongs to another ColumnSet.\"; },\n        invalidCardType: function () {\n            return \"Invalid or missing card type. Make sure the card's type property is set to \\\"AdaptiveCard\\\".\";\n        },\n        unsupportedCardVersion: function (version, maxSupportedVersion) {\n            return \"The specified card version (\".concat(version, \") is not supported or still in preview. The latest released card version is \").concat(maxSupportedVersion, \".\");\n        },\n        duplicateId: function (id) { return \"Duplicate Id \\\"\".concat(id, \"\\\".\"); },\n        markdownProcessingNotEnabled: function () {\n            return \"Markdown processing isn't enabled. Please see https://www.npmjs.com/package/adaptivecards#supporting-markdown\";\n        },\n        processMarkdownEventRemoved: function () {\n            return \"The processMarkdown event has been removed. Please update your code and set onProcessMarkdown instead.\";\n        },\n        elementAlreadyParented: function () { return \"The element already belongs to another container.\"; },\n        actionAlreadyParented: function () { return \"The action already belongs to another element.\"; },\n        elementTypeNotStandalone: function (typeName) {\n            return \"Elements of type \".concat(typeName, \" cannot be used as standalone elements.\");\n        },\n        invalidInputLabelWidth: function () {\n            return \"Invalid input label width. Defaulting to label width from host config.\";\n        },\n    };\n    Strings.magicCodeInputCard = {\n        tryAgain: function () { return \"That didn't work... let's try again.\"; },\n        pleaseLogin: function () {\n            return 'Please login in the popup. You will obtain a magic code. Paste that code below and select \"Submit\"';\n        },\n        enterMagicCode: function () { return \"Enter magic code\"; },\n        pleaseEnterMagicCodeYouReceived: function () { return \"Please enter the magic code you received.\"; },\n        submit: function () { return \"Submit\"; },\n        cancel: function () { return \"Cancel\"; },\n        somethingWentWrong: function () { return \"Something went wrong. This action can't be handled.\"; },\n        authenticationFailed: function () { return \"Authentication failed.\"; }\n    };\n    Strings.runtime = {\n        automaticRefreshPaused: function () { return \"Automatic refresh paused.\"; },\n        clckToRestartAutomaticRefresh: function () { return \"Click to restart.\"; },\n        refreshThisCard: function () { return \"Refresh this card\"; }\n    };\n    Strings.hints = {\n        dontUseWeightedAndStrecthedColumnsInSameSet: function () {\n            return \"It is not recommended to use weighted and stretched columns in the same ColumnSet, because in such a situation stretched columns will always get the minimum amount of space.\";\n        }\n    };\n    Strings.defaults = {\n        inlineActionTitle: function () { return \"Inline Action\"; },\n        overflowButtonText: function () { return \"...\"; },\n        overflowButtonTooltip: function () { return \"More options\"; },\n        emptyElementText: function (elementType) { return \"Empty \".concat(elementType); },\n        mediaPlayerAriaLabel: function () { return \"Media content\"; },\n        mediaPlayerPlayMedia: function () { return \"Play media\"; },\n        youTubeVideoPlayer: function () { return \"YouTube video player\"; },\n        vimeoVideoPlayer: function () { return \"Vimeo video player\"; },\n        dailymotionVideoPlayer: function () { return \"Dailymotion video player\"; },\n        carouselNavigationPreviousTooltip: function () { return \"Previous carousel page\"; },\n        carouselNavigationNextTooltip: function () { return \"Next carousel page\"; }\n    };\n    return Strings;\n}());\nexports.Strings = Strings;\n"},"sourceMaps":{"js":{"version":3,"file":"strings.js","sourceRoot":"","sources":["../src/strings.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n// eslint-disable-next-line @typescript-eslint/no-extraneous-class\nexport class Strings {\n    static readonly errors = {\n        unknownElementType: (typeName: string) =>\n            `Unknown element type \"${typeName}\". Fallback will be used if present.`,\n        unknownActionType: (typeName: string) =>\n            `Unknown action type \"${typeName}\". Fallback will be used if present.`,\n        elementTypeNotAllowed: (typeName: string) =>\n            `Element type \"${typeName}\" is not allowed in this context.`,\n        actionTypeNotAllowed: (typeName: string) =>\n            `Action type \"${typeName}\" is not allowed in this context.`,\n        invalidPropertyValue: (value: any, propertyName: string) =>\n            `Invalid value \"${value}\" for property \"${propertyName}\".`,\n        showCardMustHaveCard: () =>\n            `\"An Action.ShowCard must have its \"card\" property set to a valid AdaptiveCard object.`,\n        invalidColumnWidth: (invalidWidth: string) =>\n            `Invalid column width \"${invalidWidth}\" - defaulting to \"auto\".`,\n        invalidCardVersion: (defaultingToVersion: string) =>\n            `Invalid card version. Defaulting to \"${defaultingToVersion}\".`,\n        invalidVersionString: (versionString: string) =>\n            `Invalid version string \"${versionString}\".`,\n        propertyValueNotSupported: (\n            value: any,\n            propertyName: string,\n            supportedInVersion: string,\n            versionUsed: string\n        ) =>\n            `Value \"${value}\" for property \"${propertyName}\" is supported in version ${supportedInVersion}, but you are using version ${versionUsed}.`,\n        propertyNotSupported: (\n            propertyName: string,\n            supportedInVersion: string,\n            versionUsed: string\n        ) =>\n            `Property \"${propertyName}\" is supported in version ${supportedInVersion}, but you are using version ${versionUsed}.`,\n        indexOutOfRange: (index: number) => `Index out of range (${index}).`,\n        elementCannotBeUsedAsInline: () =>\n            \"RichTextBlock.addInline: the specified card element cannot be used as a RichTextBlock inline.\",\n        inlineAlreadyParented: () =>\n            \"RichTextBlock.addInline: the specified inline already belongs to another RichTextBlock.\",\n        interactivityNotAllowed: () => \"Interactivity is not allowed.\",\n        inputsMustHaveUniqueId: () => \"All inputs must have a unique Id.\",\n        choiceSetMustHaveAtLeastOneChoice: () =>\n            \"An Input.ChoiceSet must have at least one choice defined.\",\n        choiceSetChoicesMustHaveTitleAndValue: () =>\n            \"All choices in an Input.ChoiceSet must have their title and value properties set.\",\n        propertyMustBeSet: (propertyName: string) => `Property \"${propertyName}\" must be set.`,\n        actionHttpHeadersMustHaveNameAndValue: () =>\n            \"All headers of an Action.Http must have their name and value properties set.\",\n        tooManyActions: (maximumActions: number) =>\n            `Maximum number of actions exceeded (${maximumActions}).`,\n        tooLittleTimeDelay: (minAutoplayDelay: number) =>\n            `Autoplay Delay is too short (${minAutoplayDelay}).`,\n        tooManyCarouselPages: (maxCarouselPages: number) =>\n            `Maximum number of Carousel pages exceeded (${maxCarouselPages}).`,\n        invalidInitialPageIndex: (initialPageIndex: number) =>\n            `InitialPage for carousel is invalid (${initialPageIndex}).`,\n        columnAlreadyBelongsToAnotherSet: () => \"This column already belongs to another ColumnSet.\",\n        invalidCardType: () =>\n            `Invalid or missing card type. Make sure the card's type property is set to \"AdaptiveCard\".`,\n        unsupportedCardVersion: (version: string, maxSupportedVersion: string) =>\n            `The specified card version (${version}) is not supported or still in preview. The latest released card version is ${maxSupportedVersion}.`,\n        duplicateId: (id: string) => `Duplicate Id \"${id}\".`,\n        markdownProcessingNotEnabled: () =>\n            \"Markdown processing isn't enabled. Please see https://www.npmjs.com/package/adaptivecards#supporting-markdown\",\n        processMarkdownEventRemoved: () =>\n            \"The processMarkdown event has been removed. Please update your code and set onProcessMarkdown instead.\",\n        elementAlreadyParented: () => \"The element already belongs to another container.\",\n        actionAlreadyParented: () => \"The action already belongs to another element.\",\n        elementTypeNotStandalone: (typeName: string) =>\n            `Elements of type ${typeName} cannot be used as standalone elements.`,\n        invalidInputLabelWidth: () =>\n            `Invalid input label width. Defaulting to label width from host config.`,\n    };\n    static readonly magicCodeInputCard = {\n        tryAgain: () => \"That didn't work... let's try again.\",\n        pleaseLogin: () =>\n            'Please login in the popup. You will obtain a magic code. Paste that code below and select \"Submit\"',\n        enterMagicCode: () => \"Enter magic code\",\n        pleaseEnterMagicCodeYouReceived: () => \"Please enter the magic code you received.\",\n        submit: () => \"Submit\",\n        cancel: () => \"Cancel\",\n        somethingWentWrong: () => \"Something went wrong. This action can't be handled.\",\n        authenticationFailed: () => \"Authentication failed.\"\n    };\n    static readonly runtime = {\n        automaticRefreshPaused: () => \"Automatic refresh paused.\",\n        clckToRestartAutomaticRefresh: () => \"Click to restart.\",\n        refreshThisCard: () => \"Refresh this card\"\n    };\n    static readonly hints = {\n        dontUseWeightedAndStrecthedColumnsInSameSet: () =>\n            \"It is not recommended to use weighted and stretched columns in the same ColumnSet, because in such a situation stretched columns will always get the minimum amount of space.\"\n    };\n    static readonly defaults = {\n        inlineActionTitle: () => \"Inline Action\",\n        overflowButtonText: () => \"...\",\n        overflowButtonTooltip: () => \"More options\",\n        emptyElementText: (elementType: string) => `Empty ${elementType}`,\n        mediaPlayerAriaLabel: () => \"Media content\",\n        mediaPlayerPlayMedia: () => \"Play media\",\n        youTubeVideoPlayer: () => \"YouTube video player\",\n        vimeoVideoPlayer: () => \"Vimeo video player\",\n        dailymotionVideoPlayer: () => \"Dailymotion video player\",\n        carouselNavigationPreviousTooltip: () => \"Previous carousel page\",\n        carouselNavigationNextTooltip: () => \"Next carousel page\"\n    };\n}\n"]}},"error":null,"hash":"edefe75aa95ca719d3929d326a8c9e2c","cacheData":{"env":{}}}