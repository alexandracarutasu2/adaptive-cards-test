{"id":"../../node_modules/adaptivecards/lib/shared.js","dependencies":[{"name":"C:\\Users\\t-acruau\\node_modules\\adaptivecards\\lib\\shared.js.map","includedInParent":true,"mtime":1689085533902},{"name":"C:\\Users\\t-acruau\\node_modules\\adaptivecards\\src\\shared.ts","includedInParent":true,"mtime":1689085534050},{"name":"C:\\Users\\t-acruau\\adaptive-cards\\package.json","includedInParent":true,"mtime":1689259513501},{"name":"C:\\Users\\t-acruau\\node_modules\\adaptivecards\\package.json","includedInParent":true,"mtime":1689085533782},{"name":"./enums","loc":{"line":6,"column":20,"index":376},"parent":"C:\\Users\\t-acruau\\node_modules\\adaptivecards\\lib\\shared.js","resolved":"C:\\Users\\t-acruau\\node_modules\\adaptivecards\\lib\\enums.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UUID = exports.SizeAndUnit = exports.PaddingDefinition = exports.SpacingDefinition = exports.StringWithSubstitutions = exports.ContentTypes = exports.GlobalSettings = void 0;\n// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nvar Enums = require(\"./enums\");\n// eslint-disable-next-line @typescript-eslint/no-extraneous-class\nvar GlobalSettings = /** @class */ (function () {\n    function GlobalSettings() {\n    }\n    GlobalSettings.useAdvancedTextBlockTruncation = true;\n    GlobalSettings.useAdvancedCardBottomTruncation = false;\n    GlobalSettings.useMarkdownInRadioButtonAndCheckbox = true;\n    GlobalSettings.allowMarkForTextHighlighting = false;\n    GlobalSettings.alwaysBleedSeparators = false;\n    GlobalSettings.enableFullJsonRoundTrip = false;\n    GlobalSettings.displayInputValidationErrors = true;\n    GlobalSettings.allowPreProcessingPropertyValues = false;\n    GlobalSettings.setTabIndexAtCardRoot = true;\n    GlobalSettings.enableFallback = true;\n    GlobalSettings.useWebkitLineClamp = true;\n    GlobalSettings.allowMoreThanMaxActionsInOverflowMenu = false;\n    GlobalSettings.removePaddingFromContainersWithBackgroundImage = false;\n    GlobalSettings.resetInputsDirtyStateAfterActionExecution = true;\n    GlobalSettings.applets = {\n        logEnabled: true,\n        logLevel: Enums.LogLevel.Error,\n        maximumRetryAttempts: 3,\n        defaultTimeBetweenRetryAttempts: 3000,\n        authPromptWidth: 400,\n        authPromptHeight: 600,\n        refresh: {\n            mode: Enums.RefreshMode.Manual,\n            timeBetweenAutomaticRefreshes: 3000,\n            maximumConsecutiveAutomaticRefreshes: 3,\n            allowManualRefreshesAfterAutomaticRefreshes: true\n        }\n    };\n    return GlobalSettings;\n}());\nexports.GlobalSettings = GlobalSettings;\nexports.ContentTypes = {\n    applicationJson: \"application/json\",\n    applicationXWwwFormUrlencoded: \"application/x-www-form-urlencoded\"\n};\nvar StringWithSubstitutions = /** @class */ (function () {\n    function StringWithSubstitutions() {\n        this._isProcessed = false;\n    }\n    StringWithSubstitutions.prototype.getReferencedInputs = function (inputs, referencedInputs) {\n        if (!referencedInputs) {\n            throw new Error(\"The referencedInputs parameter cannot be null.\");\n        }\n        if (this._original) {\n            for (var _i = 0, inputs_1 = inputs; _i < inputs_1.length; _i++) {\n                var input = inputs_1[_i];\n                var matches = new RegExp(\"\\\\{{2}(\" + input.id + \").value\\\\}{2}\", \"gi\").exec(this._original);\n                if (matches != null && input.id) {\n                    referencedInputs[input.id] = input;\n                }\n            }\n        }\n    };\n    StringWithSubstitutions.prototype.substituteInputValues = function (inputs, contentType) {\n        this._processed = this._original;\n        if (this._original) {\n            var regEx = /\\{{2}([a-z0-9_$@]+).value\\}{2}/gi;\n            var matches = void 0;\n            while ((matches = regEx.exec(this._original)) !== null && this._processed) {\n                for (var _i = 0, _a = Object.keys(inputs); _i < _a.length; _i++) {\n                    var key = _a[_i];\n                    if (key.toLowerCase() === matches[1].toLowerCase()) {\n                        var matchedInput = inputs[key];\n                        var valueForReplace = \"\";\n                        if (matchedInput.value) {\n                            valueForReplace = matchedInput.value;\n                        }\n                        if (contentType === exports.ContentTypes.applicationJson) {\n                            valueForReplace = JSON.stringify(valueForReplace);\n                            valueForReplace = valueForReplace.slice(1, -1);\n                        }\n                        else if (contentType === exports.ContentTypes.applicationXWwwFormUrlencoded) {\n                            valueForReplace = encodeURIComponent(valueForReplace);\n                        }\n                        this._processed = this._processed.replace(matches[0], valueForReplace);\n                        break;\n                    }\n                }\n            }\n        }\n        this._isProcessed = true;\n    };\n    StringWithSubstitutions.prototype.getOriginal = function () {\n        return this._original;\n    };\n    StringWithSubstitutions.prototype.get = function () {\n        if (!this._isProcessed) {\n            return this._original;\n        }\n        else {\n            return this._processed;\n        }\n    };\n    StringWithSubstitutions.prototype.set = function (value) {\n        this._original = value;\n        this._isProcessed = false;\n    };\n    return StringWithSubstitutions;\n}());\nexports.StringWithSubstitutions = StringWithSubstitutions;\nvar SpacingDefinition = /** @class */ (function () {\n    function SpacingDefinition(top, right, bottom, left) {\n        if (top === void 0) { top = 0; }\n        if (right === void 0) { right = 0; }\n        if (bottom === void 0) { bottom = 0; }\n        if (left === void 0) { left = 0; }\n        this.left = 0;\n        this.top = 0;\n        this.right = 0;\n        this.bottom = 0;\n        this.top = top;\n        this.right = right;\n        this.bottom = bottom;\n        this.left = left;\n    }\n    return SpacingDefinition;\n}());\nexports.SpacingDefinition = SpacingDefinition;\nvar PaddingDefinition = /** @class */ (function () {\n    function PaddingDefinition(top, right, bottom, left) {\n        if (top === void 0) { top = Enums.Spacing.None; }\n        if (right === void 0) { right = Enums.Spacing.None; }\n        if (bottom === void 0) { bottom = Enums.Spacing.None; }\n        if (left === void 0) { left = Enums.Spacing.None; }\n        this.top = Enums.Spacing.None;\n        this.right = Enums.Spacing.None;\n        this.bottom = Enums.Spacing.None;\n        this.left = Enums.Spacing.None;\n        this.top = top;\n        this.right = right;\n        this.bottom = bottom;\n        this.left = left;\n    }\n    return PaddingDefinition;\n}());\nexports.PaddingDefinition = PaddingDefinition;\nvar SizeAndUnit = /** @class */ (function () {\n    function SizeAndUnit(physicalSize, unit) {\n        this.physicalSize = physicalSize;\n        this.unit = unit;\n    }\n    SizeAndUnit.parse = function (input, requireUnitSpecifier) {\n        if (requireUnitSpecifier === void 0) { requireUnitSpecifier = false; }\n        var result = new SizeAndUnit(0, Enums.SizeUnit.Weight);\n        if (typeof input === \"number\") {\n            result.physicalSize = input;\n            return result;\n        }\n        else if (typeof input === \"string\") {\n            var regExp = /^([0-9]+)(px|\\*)?$/g;\n            var matches = regExp.exec(input);\n            var expectedMatchCount = requireUnitSpecifier ? 3 : 2;\n            if (matches && matches.length >= expectedMatchCount) {\n                result.physicalSize = parseInt(matches[1]);\n                if (matches.length === 3) {\n                    if (matches[2] === \"px\") {\n                        result.unit = Enums.SizeUnit.Pixel;\n                    }\n                }\n                return result;\n            }\n        }\n        throw new Error(\"Invalid size: \" + input);\n    };\n    return SizeAndUnit;\n}());\nexports.SizeAndUnit = SizeAndUnit;\n/**\n * Fast UUID generator, RFC4122 version 4 compliant.\n * @author Jeff Ward (jcward.com).\n * @license MIT license\n * @link http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\n **/\n/* eslint-disable @typescript-eslint/no-extraneous-class, @typescript-eslint/naming-convention, no-bitwise */\nvar UUID = /** @class */ (function () {\n    function UUID() {\n    }\n    UUID.generate = function () {\n        var d0 = (Math.random() * 0xffffffff) | 0;\n        var d1 = (Math.random() * 0xffffffff) | 0;\n        var d2 = (Math.random() * 0xffffffff) | 0;\n        var d3 = (Math.random() * 0xffffffff) | 0;\n        return (UUID.lut[d0 & 0xff] +\n            UUID.lut[(d0 >> 8) & 0xff] +\n            UUID.lut[(d0 >> 16) & 0xff] +\n            UUID.lut[(d0 >> 24) & 0xff] +\n            \"-\" +\n            UUID.lut[d1 & 0xff] +\n            UUID.lut[(d1 >> 8) & 0xff] +\n            \"-\" +\n            UUID.lut[((d1 >> 16) & 0x0f) | 0x40] +\n            UUID.lut[(d1 >> 24) & 0xff] +\n            \"-\" +\n            UUID.lut[(d2 & 0x3f) | 0x80] +\n            UUID.lut[(d2 >> 8) & 0xff] +\n            \"-\" +\n            UUID.lut[(d2 >> 16) & 0xff] +\n            UUID.lut[(d2 >> 24) & 0xff] +\n            UUID.lut[d3 & 0xff] +\n            UUID.lut[(d3 >> 8) & 0xff] +\n            UUID.lut[(d3 >> 16) & 0xff] +\n            UUID.lut[(d3 >> 24) & 0xff]);\n    };\n    UUID.initialize = function () {\n        for (var i = 0; i < 256; i++) {\n            UUID.lut[i] = (i < 16 ? \"0\" : \"\") + i.toString(16);\n        }\n    };\n    UUID.lut = [];\n    return UUID;\n}());\nexports.UUID = UUID;\nUUID.initialize();\n/* eslint-enable @typescript-eslint/no-extraneous-class, @typescript-eslint/naming-convention, no-bitwise */\n"},"sourceMaps":{"js":{"version":3,"file":"shared.js","sourceRoot":"","sources":["../src/shared.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nimport * as Enums from \"./enums\";\n\nexport type Refresh = {\n    mode: Enums.RefreshMode;\n    timeBetweenAutomaticRefreshes: number;\n    maximumConsecutiveAutomaticRefreshes: number;\n    allowManualRefreshesAfterAutomaticRefreshes: boolean;\n};\n\nexport type AppletsSettings = {\n    logEnabled: boolean;\n    logLevel: Enums.LogLevel;\n    maximumRetryAttempts: number;\n    defaultTimeBetweenRetryAttempts: number;\n    authPromptWidth: number;\n    authPromptHeight: number;\n    readonly refresh: Refresh;\n    onLogEvent?: (level: Enums.LogLevel, message?: any, ...optionalParams: any[]) => void;\n};\n\n// eslint-disable-next-line @typescript-eslint/no-extraneous-class\nexport class GlobalSettings {\n    static useAdvancedTextBlockTruncation: boolean = true;\n    static useAdvancedCardBottomTruncation: boolean = false;\n    static useMarkdownInRadioButtonAndCheckbox: boolean = true;\n    static allowMarkForTextHighlighting: boolean = false;\n    static alwaysBleedSeparators: boolean = false;\n    static enableFullJsonRoundTrip: boolean = false;\n    static displayInputValidationErrors: boolean = true;\n    static allowPreProcessingPropertyValues: boolean = false;\n    static setTabIndexAtCardRoot: boolean = true;\n    static enableFallback: boolean = true;\n    static useWebkitLineClamp: boolean = true;\n    static allowMoreThanMaxActionsInOverflowMenu: boolean = false;\n    static removePaddingFromContainersWithBackgroundImage: boolean = false;\n    static resetInputsDirtyStateAfterActionExecution: boolean = true;\n\n    static readonly applets: AppletsSettings = {\n        logEnabled: true,\n        logLevel: Enums.LogLevel.Error,\n        maximumRetryAttempts: 3,\n        defaultTimeBetweenRetryAttempts: 3000, // 3 seconds\n        authPromptWidth: 400,\n        authPromptHeight: 600,\n        refresh: {\n            mode: Enums.RefreshMode.Manual,\n            timeBetweenAutomaticRefreshes: 3000, // 3 seconds\n            maximumConsecutiveAutomaticRefreshes: 3,\n            allowManualRefreshesAfterAutomaticRefreshes: true\n        }\n    };\n}\n\nexport const ContentTypes = {\n    applicationJson: \"application/json\",\n    applicationXWwwFormUrlencoded: \"application/x-www-form-urlencoded\"\n};\n\nexport interface ISeparationDefinition {\n    spacing: number;\n    lineThickness?: number;\n    lineColor?: string;\n}\n\nexport interface IInput {\n    id?: string;\n    value?: string;\n    validateValue(): boolean;\n}\n\nexport type Dictionary<T> = { [key: string]: T };\n\nexport class StringWithSubstitutions {\n    private _isProcessed: boolean = false;\n    private _original?: string;\n    private _processed?: string;\n\n    getReferencedInputs(inputs: IInput[], referencedInputs: Dictionary<IInput>) {\n        if (!referencedInputs) {\n            throw new Error(\"The referencedInputs parameter cannot be null.\");\n        }\n\n        if (this._original) {\n            for (const input of inputs) {\n                const matches = new RegExp(\"\\\\{{2}(\" + input.id + \").value\\\\}{2}\", \"gi\").exec(\n                    this._original\n                );\n\n                if (matches != null && input.id) {\n                    referencedInputs[input.id] = input;\n                }\n            }\n        }\n    }\n\n    substituteInputValues(inputs: Dictionary<IInput>, contentType: string) {\n        this._processed = this._original;\n\n        if (this._original) {\n            const regEx = /\\{{2}([a-z0-9_$@]+).value\\}{2}/gi;\n            let matches;\n\n            while ((matches = regEx.exec(this._original)) !== null && this._processed) {\n                for (const key of Object.keys(inputs)) {\n                    if (key.toLowerCase() === matches[1].toLowerCase()) {\n                        const matchedInput = inputs[key];\n\n                        let valueForReplace = \"\";\n\n                        if (matchedInput.value) {\n                            valueForReplace = matchedInput.value;\n                        }\n\n                        if (contentType === ContentTypes.applicationJson) {\n                            valueForReplace = JSON.stringify(valueForReplace);\n                            valueForReplace = valueForReplace.slice(1, -1);\n                        } else if (contentType === ContentTypes.applicationXWwwFormUrlencoded) {\n                            valueForReplace = encodeURIComponent(valueForReplace);\n                        }\n\n                        this._processed = this._processed.replace(matches[0], valueForReplace);\n\n                        break;\n                    }\n                }\n            }\n        }\n\n        this._isProcessed = true;\n    }\n\n    getOriginal(): string | undefined {\n        return this._original;\n    }\n\n    get(): string | undefined {\n        if (!this._isProcessed) {\n            return this._original;\n        } else {\n            return this._processed;\n        }\n    }\n\n    set(value: string | undefined) {\n        this._original = value;\n        this._isProcessed = false;\n    }\n}\n\nexport class SpacingDefinition {\n    left: number = 0;\n    top: number = 0;\n    right: number = 0;\n    bottom: number = 0;\n\n    constructor(top: number = 0, right: number = 0, bottom: number = 0, left: number = 0) {\n        this.top = top;\n        this.right = right;\n        this.bottom = bottom;\n        this.left = left;\n    }\n}\n\nexport class PaddingDefinition {\n    top: Enums.Spacing = Enums.Spacing.None;\n    right: Enums.Spacing = Enums.Spacing.None;\n    bottom: Enums.Spacing = Enums.Spacing.None;\n    left: Enums.Spacing = Enums.Spacing.None;\n\n    constructor(\n        top: Enums.Spacing = Enums.Spacing.None,\n        right: Enums.Spacing = Enums.Spacing.None,\n        bottom: Enums.Spacing = Enums.Spacing.None,\n        left: Enums.Spacing = Enums.Spacing.None\n    ) {\n        this.top = top;\n        this.right = right;\n        this.bottom = bottom;\n        this.left = left;\n    }\n}\n\nexport class SizeAndUnit {\n    physicalSize: number;\n    unit: Enums.SizeUnit;\n\n    static parse(input: string, requireUnitSpecifier: boolean = false): SizeAndUnit {\n        const result = new SizeAndUnit(0, Enums.SizeUnit.Weight);\n\n        if (typeof input === \"number\") {\n            result.physicalSize = input;\n\n            return result;\n        } else if (typeof input === \"string\") {\n            const regExp = /^([0-9]+)(px|\\*)?$/g;\n            const matches = regExp.exec(input);\n            const expectedMatchCount = requireUnitSpecifier ? 3 : 2;\n\n            if (matches && matches.length >= expectedMatchCount) {\n                result.physicalSize = parseInt(matches[1]);\n\n                if (matches.length === 3) {\n                    if (matches[2] === \"px\") {\n                        result.unit = Enums.SizeUnit.Pixel;\n                    }\n                }\n\n                return result;\n            }\n        }\n\n        throw new Error(\"Invalid size: \" + input);\n    }\n\n    constructor(physicalSize: number, unit: Enums.SizeUnit) {\n        this.physicalSize = physicalSize;\n        this.unit = unit;\n    }\n}\n\nexport interface IResourceInformation {\n    url: string;\n    mimeType: string;\n}\n\n/**\n * Fast UUID generator, RFC4122 version 4 compliant.\n * @author Jeff Ward (jcward.com).\n * @license MIT license\n * @link http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\n **/\n/* eslint-disable @typescript-eslint/no-extraneous-class, @typescript-eslint/naming-convention, no-bitwise */\nexport class UUID {\n    private static lut: string[] = [];\n\n    static generate(): string {\n        const d0 = (Math.random() * 0xffffffff) | 0;\n        const d1 = (Math.random() * 0xffffffff) | 0;\n        const d2 = (Math.random() * 0xffffffff) | 0;\n        const d3 = (Math.random() * 0xffffffff) | 0;\n\n        return (\n            UUID.lut[d0 & 0xff] +\n            UUID.lut[(d0 >> 8) & 0xff] +\n            UUID.lut[(d0 >> 16) & 0xff] +\n            UUID.lut[(d0 >> 24) & 0xff] +\n            \"-\" +\n            UUID.lut[d1 & 0xff] +\n            UUID.lut[(d1 >> 8) & 0xff] +\n            \"-\" +\n            UUID.lut[((d1 >> 16) & 0x0f) | 0x40] +\n            UUID.lut[(d1 >> 24) & 0xff] +\n            \"-\" +\n            UUID.lut[(d2 & 0x3f) | 0x80] +\n            UUID.lut[(d2 >> 8) & 0xff] +\n            \"-\" +\n            UUID.lut[(d2 >> 16) & 0xff] +\n            UUID.lut[(d2 >> 24) & 0xff] +\n            UUID.lut[d3 & 0xff] +\n            UUID.lut[(d3 >> 8) & 0xff] +\n            UUID.lut[(d3 >> 16) & 0xff] +\n            UUID.lut[(d3 >> 24) & 0xff]\n        );\n    }\n\n    static initialize() {\n        for (let i = 0; i < 256; i++) {\n            UUID.lut[i] = (i < 16 ? \"0\" : \"\") + i.toString(16);\n        }\n    }\n}\n\nUUID.initialize();\n/* eslint-enable @typescript-eslint/no-extraneous-class, @typescript-eslint/naming-convention, no-bitwise */\n"]}},"error":null,"hash":"330353b1b8338505d84afa80009c1efd","cacheData":{"env":{}}}